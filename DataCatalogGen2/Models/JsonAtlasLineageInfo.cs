// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace DataCatalogGen2.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// AtlasLineageInfo
    /// </summary>
    /// <remarks>
    /// The lineage information.
    /// </remarks>
    public partial class JsonAtlasLineageInfo
    {
        /// <summary>
        /// Initializes a new instance of the JsonAtlasLineageInfo class.
        /// </summary>
        public JsonAtlasLineageInfo()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the JsonAtlasLineageInfo class.
        /// </summary>
        /// <param name="baseEntityGuid">The GUID of the base entity.</param>
        /// <param name="guidEntityMap">The GUID entity map.</param>
        /// <param name="lineageDepth">The depth of lineage.</param>
        /// <param name="lineageDirection">Possible values include: 'INPUT',
        /// 'OUTPUT', 'BOTH'</param>
        /// <param name="relations">An array of lineage relations.</param>
        public JsonAtlasLineageInfo(string baseEntityGuid = default(string), IDictionary<string, JsonAtlasEntityHeader> guidEntityMap = default(IDictionary<string, JsonAtlasEntityHeader>), int? lineageDepth = default(int?), string lineageDirection = default(string), IList<JsonLineageRelation> relations = default(IList<JsonLineageRelation>))
        {
            BaseEntityGuid = baseEntityGuid;
            GuidEntityMap = guidEntityMap;
            LineageDepth = lineageDepth;
            LineageDirection = lineageDirection;
            Relations = relations;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the GUID of the base entity.
        /// </summary>
        [JsonProperty(PropertyName = "baseEntityGuid")]
        public string BaseEntityGuid { get; set; }

        /// <summary>
        /// Gets or sets the GUID entity map.
        /// </summary>
        [JsonProperty(PropertyName = "guidEntityMap")]
        public IDictionary<string, JsonAtlasEntityHeader> GuidEntityMap { get; set; }

        /// <summary>
        /// Gets or sets the depth of lineage.
        /// </summary>
        [JsonProperty(PropertyName = "lineageDepth")]
        public int? LineageDepth { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'INPUT', 'OUTPUT', 'BOTH'
        /// </summary>
        [JsonProperty(PropertyName = "lineageDirection")]
        public string LineageDirection { get; set; }

        /// <summary>
        /// Gets or sets an array of lineage relations.
        /// </summary>
        [JsonProperty(PropertyName = "relations")]
        public IList<JsonLineageRelation> Relations { get; set; }

    }
}
