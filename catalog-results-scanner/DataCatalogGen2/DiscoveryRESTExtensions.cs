// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace DataCatalogGen2
{
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for DiscoveryREST.
    /// </summary>
    public static partial class DiscoveryRESTExtensions
    {
            /// <summary>
            /// Gets data for the specified basic query.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='typeName'>
            /// Limits the result to only entities of specified type or its sub-types.
            /// </param>
            public static JsonAtlasSearchResult SearchUsingBasic(this IDiscoveryREST operations, string typeName)
            {
                return operations.SearchUsingBasicAsync(typeName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets data for the specified basic query.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='typeName'>
            /// Limits the result to only entities of specified type or its sub-types.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<JsonAtlasSearchResult> SearchUsingBasicAsync(this IDiscoveryREST operations, string typeName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.SearchUsingBasicWithHttpMessagesAsync(typeName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Gets attribute based search result for entities satisfying the search
            /// parameters.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='parameters'>
            /// The search parameter object.
            /// </param>
            public static JsonAtlasSearchResult SearchWithParameters(this IDiscoveryREST operations, JsonSearchParameters parameters)
            {
                return operations.SearchWithParametersAsync(parameters).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets attribute based search result for entities satisfying the search
            /// parameters.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='parameters'>
            /// The search parameter object.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<JsonAtlasSearchResult> SearchWithParametersAsync(this IDiscoveryREST operations, JsonSearchParameters parameters, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.SearchWithParametersWithHttpMessagesAsync(parameters, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Gets data for the specified fulltext query.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            public static JsonAtlasSearchResult SearchUsingFullText(this IDiscoveryREST operations)
            {
                return operations.SearchUsingFullTextAsync().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets data for the specified fulltext query.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<JsonAtlasSearchResult> SearchUsingFullTextAsync(this IDiscoveryREST operations, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.SearchUsingFullTextWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Gets data using advanced search by query string.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='searchRequest'>
            /// An object specifying the search criteria.
            /// </param>
            public static JsonAdvancedResult SearchAdvanced(this IDiscoveryREST operations, JsonSearchRequest searchRequest)
            {
                return operations.SearchAdvancedAsync(searchRequest).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets data using advanced search by query string.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='searchRequest'>
            /// An object specifying the search criteria.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<JsonAdvancedResult> SearchAdvancedAsync(this IDiscoveryREST operations, JsonSearchRequest searchRequest, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.SearchAdvancedWithHttpMessagesAsync(searchRequest, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Gets search suggestions by query string.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='suggestRequest'>
            /// An object specifying the suggest criteria.
            /// </param>
            public static JsonSuggestResult Suggest(this IDiscoveryREST operations, JsonSuggestRequest suggestRequest)
            {
                return operations.SuggestAsync(suggestRequest).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets search suggestions by query string.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='suggestRequest'>
            /// An object specifying the suggest criteria.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<JsonSuggestResult> SuggestAsync(this IDiscoveryREST operations, JsonSuggestRequest suggestRequest, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.SuggestWithHttpMessagesAsync(suggestRequest, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Gets auto complete options.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            public static JsonSuggestResult AutoComplete(this IDiscoveryREST operations)
            {
                return operations.AutoCompleteAsync().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets auto complete options.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<JsonSuggestResult> AutoCompleteAsync(this IDiscoveryREST operations, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.AutoCompleteWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
