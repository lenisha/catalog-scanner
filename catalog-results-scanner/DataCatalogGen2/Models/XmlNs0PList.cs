// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace DataCatalogGen2.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// PList
    /// </summary>
    /// <remarks>
    /// Paginated-list, for returning search results.
    /// </remarks>
    public partial class XmlNs0PList
    {
        /// <summary>
        /// Initializes a new instance of the XmlNs0PList class.
        /// </summary>
        public XmlNs0PList()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the XmlNs0PList class.
        /// </summary>
        /// <param name="list">An array of objects.</param>
        /// <param name="pageSize">The size of the page.</param>
        /// <param name="sortBy">The sorted by field.</param>
        /// <param name="sortType">Possible values include: 'NONE', 'ASC',
        /// 'DESC'</param>
        /// <param name="startIndex">The start index of the page.</param>
        /// <param name="totalCount">The total count of items.</param>
        public XmlNs0PList(IList<object> list = default(IList<object>), int? pageSize = default(int?), string sortBy = default(string), string sortType = default(string), long? startIndex = default(long?), long? totalCount = default(long?))
        {
            List = list;
            PageSize = pageSize;
            SortBy = sortBy;
            SortType = sortType;
            StartIndex = startIndex;
            TotalCount = totalCount;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets an array of objects.
        /// </summary>
        [JsonProperty(PropertyName = "list")]
        public IList<object> List { get; set; }

        /// <summary>
        /// Gets or sets the size of the page.
        /// </summary>
        [JsonProperty(PropertyName = "pageSize")]
        public int? PageSize { get; set; }

        /// <summary>
        /// Gets or sets the sorted by field.
        /// </summary>
        [JsonProperty(PropertyName = "sortBy")]
        public string SortBy { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'NONE', 'ASC', 'DESC'
        /// </summary>
        [JsonProperty(PropertyName = "sortType")]
        public string SortType { get; set; }

        /// <summary>
        /// Gets or sets the start index of the page.
        /// </summary>
        [JsonProperty(PropertyName = "startIndex")]
        public long? StartIndex { get; set; }

        /// <summary>
        /// Gets or sets the total count of items.
        /// </summary>
        [JsonProperty(PropertyName = "totalCount")]
        public long? TotalCount { get; set; }

    }
}
