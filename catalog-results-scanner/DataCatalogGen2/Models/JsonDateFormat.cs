// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace DataCatalogGen2.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// DateFormat
    /// </summary>
    /// <remarks>
    /// The date format.
    /// </remarks>
    public partial class JsonDateFormat
    {
        /// <summary>
        /// Initializes a new instance of the JsonDateFormat class.
        /// </summary>
        public JsonDateFormat()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the JsonDateFormat class.
        /// </summary>
        /// <param name="availableLocales">An array of available
        /// locales.</param>
        /// <param name="lenient">Determines the leniency of the date
        /// format.</param>
        public JsonDateFormat(IList<string> availableLocales = default(IList<string>), double? calendar = default(double?), JsonDateFormat dateInstance = default(JsonDateFormat), JsonDateFormat dateTimeInstance = default(JsonDateFormat), JsonDateFormat instance = default(JsonDateFormat), bool? lenient = default(bool?), JsonNumberFormat numberFormat = default(JsonNumberFormat), JsonDateFormat timeInstance = default(JsonDateFormat), JsonTimeZone timeZone = default(JsonTimeZone))
        {
            AvailableLocales = availableLocales;
            Calendar = calendar;
            DateInstance = dateInstance;
            DateTimeInstance = dateTimeInstance;
            Instance = instance;
            Lenient = lenient;
            NumberFormat = numberFormat;
            TimeInstance = timeInstance;
            TimeZone = timeZone;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets an array of available locales.
        /// </summary>
        [JsonProperty(PropertyName = "availableLocales")]
        public IList<string> AvailableLocales { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "calendar")]
        public double? Calendar { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "dateInstance")]
        public JsonDateFormat DateInstance { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "dateTimeInstance")]
        public JsonDateFormat DateTimeInstance { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "instance")]
        public JsonDateFormat Instance { get; set; }

        /// <summary>
        /// Gets or sets determines the leniency of the date format.
        /// </summary>
        [JsonProperty(PropertyName = "lenient")]
        public bool? Lenient { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "numberFormat")]
        public JsonNumberFormat NumberFormat { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "timeInstance")]
        public JsonDateFormat TimeInstance { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "timeZone")]
        public JsonTimeZone TimeZone { get; set; }

    }
}
