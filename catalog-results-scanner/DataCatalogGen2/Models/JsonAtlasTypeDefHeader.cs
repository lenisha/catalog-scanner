// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace DataCatalogGen2.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// AtlasTypeDefHeader
    /// </summary>
    /// <remarks>
    /// The basic information of the type definition.
    /// </remarks>
    public partial class JsonAtlasTypeDefHeader
    {
        /// <summary>
        /// Initializes a new instance of the JsonAtlasTypeDefHeader class.
        /// </summary>
        public JsonAtlasTypeDefHeader()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the JsonAtlasTypeDefHeader class.
        /// </summary>
        /// <param name="category">Possible values include: 'PRIMITIVE',
        /// 'OBJECT_ID_TYPE', 'ENUM', 'STRUCT', 'CLASSIFICATION', 'ENTITY',
        /// 'ARRAY', 'MAP', 'RELATIONSHIP'</param>
        /// <param name="guid">The GUID of the type definition.</param>
        /// <param name="name">The name of the type definition.</param>
        public JsonAtlasTypeDefHeader(string category = default(string), string guid = default(string), string name = default(string))
        {
            Category = category;
            Guid = guid;
            Name = name;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets possible values include: 'PRIMITIVE',
        /// 'OBJECT_ID_TYPE', 'ENUM', 'STRUCT', 'CLASSIFICATION', 'ENTITY',
        /// 'ARRAY', 'MAP', 'RELATIONSHIP'
        /// </summary>
        [JsonProperty(PropertyName = "category")]
        public string Category { get; set; }

        /// <summary>
        /// Gets or sets the GUID of the type definition.
        /// </summary>
        [JsonProperty(PropertyName = "guid")]
        public string Guid { get; set; }

        /// <summary>
        /// Gets or sets the name of the type definition.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

    }
}
