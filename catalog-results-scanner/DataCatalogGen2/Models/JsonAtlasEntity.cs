// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace DataCatalogGen2.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// AtlasEntity
    /// </summary>
    /// <remarks>
    /// An instance of an entity - like hive_table, hive_database.
    /// </remarks>
    public partial class JsonAtlasEntity : JsonAtlasStruct
    {
        /// <summary>
        /// Initializes a new instance of the JsonAtlasEntity class.
        /// </summary>
        public JsonAtlasEntity()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the JsonAtlasEntity class.
        /// </summary>
        /// <param name="attributes">The attributes of the struct.</param>
        /// <param name="typeName">The name of the type.</param>
        /// <param name="classifications">An array of classifications.</param>
        /// <param name="createTime">The created time of the record.</param>
        /// <param name="createdBy">The user who created the record.</param>
        /// <param name="guid">The GUID of the entity.</param>
        /// <param name="homeId">The home ID of the entity.</param>
        /// <param name="meanings">An array of term assignment headers
        /// indicating the meanings of the entity.</param>
        /// <param name="proxy">Determines if there's a proxy.</param>
        /// <param name="relationshipAttributes">The attributes of
        /// relationship.</param>
        /// <param name="status">Possible values include: 'ACTIVE',
        /// 'DELETED'</param>
        /// <param name="updateTime">The update time of the record.</param>
        /// <param name="updatedBy">The user who updated the record.</param>
        /// <param name="version">The version of the entity.</param>
        public JsonAtlasEntity(IDictionary<string, object> attributes = default(IDictionary<string, object>), string typeName = default(string), IList<JsonAtlasClassification> classifications = default(IList<JsonAtlasClassification>), double? createTime = default(double?), string createdBy = default(string), string guid = default(string), string homeId = default(string), IList<JsonAtlasTermAssignmentHeader> meanings = default(IList<JsonAtlasTermAssignmentHeader>), bool? proxy = default(bool?), IDictionary<string, object> relationshipAttributes = default(IDictionary<string, object>), string status = default(string), double? updateTime = default(double?), string updatedBy = default(string), double? version = default(double?))
            : base(attributes, typeName)
        {
            Classifications = classifications;
            CreateTime = createTime;
            CreatedBy = createdBy;
            Guid = guid;
            HomeId = homeId;
            Meanings = meanings;
            Proxy = proxy;
            RelationshipAttributes = relationshipAttributes;
            Status = status;
            UpdateTime = updateTime;
            UpdatedBy = updatedBy;
            Version = version;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets an array of classifications.
        /// </summary>
        [JsonProperty(PropertyName = "classifications")]
        public IList<JsonAtlasClassification> Classifications { get; set; }

        /// <summary>
        /// Gets or sets the created time of the record.
        /// </summary>
        [JsonProperty(PropertyName = "createTime")]
        public double? CreateTime { get; set; }

        /// <summary>
        /// Gets or sets the user who created the record.
        /// </summary>
        [JsonProperty(PropertyName = "createdBy")]
        public string CreatedBy { get; set; }

        /// <summary>
        /// Gets or sets the GUID of the entity.
        /// </summary>
        [JsonProperty(PropertyName = "guid")]
        public string Guid { get; set; }

        /// <summary>
        /// Gets or sets the home ID of the entity.
        /// </summary>
        [JsonProperty(PropertyName = "homeId")]
        public string HomeId { get; set; }

        /// <summary>
        /// Gets or sets an array of term assignment headers indicating the
        /// meanings of the entity.
        /// </summary>
        [JsonProperty(PropertyName = "meanings")]
        public IList<JsonAtlasTermAssignmentHeader> Meanings { get; set; }

        /// <summary>
        /// Gets or sets determines if there's a proxy.
        /// </summary>
        [JsonProperty(PropertyName = "proxy")]
        public bool? Proxy { get; set; }

        /// <summary>
        /// Gets or sets the attributes of relationship.
        /// </summary>
        [JsonProperty(PropertyName = "relationshipAttributes")]
        public IDictionary<string, object> RelationshipAttributes { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'ACTIVE', 'DELETED'
        /// </summary>
        [JsonProperty(PropertyName = "status")]
        public string Status { get; set; }

        /// <summary>
        /// Gets or sets the update time of the record.
        /// </summary>
        [JsonProperty(PropertyName = "updateTime")]
        public double? UpdateTime { get; set; }

        /// <summary>
        /// Gets or sets the user who updated the record.
        /// </summary>
        [JsonProperty(PropertyName = "updatedBy")]
        public string UpdatedBy { get; set; }

        /// <summary>
        /// Gets or sets the version of the entity.
        /// </summary>
        [JsonProperty(PropertyName = "version")]
        public double? Version { get; set; }

    }
}
