// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace DataCatalogGen2.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// AtlasBaseTypeDef
    /// </summary>
    /// <remarks>
    /// Base class that captures common-attributes for all Atlas types.
    /// </remarks>
    public partial class JsonAtlasBaseTypeDef
    {
        /// <summary>
        /// Initializes a new instance of the JsonAtlasBaseTypeDef class.
        /// </summary>
        public JsonAtlasBaseTypeDef()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the JsonAtlasBaseTypeDef class.
        /// </summary>
        /// <param name="category">Possible values include: 'PRIMITIVE',
        /// 'OBJECT_ID_TYPE', 'ENUM', 'STRUCT', 'CLASSIFICATION', 'ENTITY',
        /// 'ARRAY', 'MAP', 'RELATIONSHIP'</param>
        /// <param name="createTime">The created time of the record.</param>
        /// <param name="createdBy">The user who created the record.</param>
        /// <param name="description">The description of the type
        /// definition.</param>
        /// <param name="guid">The GUID of the type definition.</param>
        /// <param name="name">The name of the type definition.</param>
        /// <param name="options">The options for the type definition.</param>
        /// <param name="typeVersion">The version of the type.</param>
        /// <param name="updateTime">The update time of the record.</param>
        /// <param name="updatedBy">The user who updated the record.</param>
        /// <param name="version">The version of the record.</param>
        public JsonAtlasBaseTypeDef(string category = default(string), double? createTime = default(double?), string createdBy = default(string), JsonDateFormat dateFormatter = default(JsonDateFormat), string description = default(string), string guid = default(string), string name = default(string), IDictionary<string, string> options = default(IDictionary<string, string>), string typeVersion = default(string), double? updateTime = default(double?), string updatedBy = default(string), double? version = default(double?))
        {
            Category = category;
            CreateTime = createTime;
            CreatedBy = createdBy;
            DateFormatter = dateFormatter;
            Description = description;
            Guid = guid;
            Name = name;
            Options = options;
            TypeVersion = typeVersion;
            UpdateTime = updateTime;
            UpdatedBy = updatedBy;
            Version = version;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets possible values include: 'PRIMITIVE',
        /// 'OBJECT_ID_TYPE', 'ENUM', 'STRUCT', 'CLASSIFICATION', 'ENTITY',
        /// 'ARRAY', 'MAP', 'RELATIONSHIP'
        /// </summary>
        [JsonProperty(PropertyName = "category")]
        public string Category { get; set; }

        /// <summary>
        /// Gets or sets the created time of the record.
        /// </summary>
        [JsonProperty(PropertyName = "createTime")]
        public double? CreateTime { get; set; }

        /// <summary>
        /// Gets or sets the user who created the record.
        /// </summary>
        [JsonProperty(PropertyName = "createdBy")]
        public string CreatedBy { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "dateFormatter")]
        public JsonDateFormat DateFormatter { get; set; }

        /// <summary>
        /// Gets or sets the description of the type definition.
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets or sets the GUID of the type definition.
        /// </summary>
        [JsonProperty(PropertyName = "guid")]
        public string Guid { get; set; }

        /// <summary>
        /// Gets or sets the name of the type definition.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets the options for the type definition.
        /// </summary>
        [JsonProperty(PropertyName = "options")]
        public IDictionary<string, string> Options { get; set; }

        /// <summary>
        /// Gets or sets the version of the type.
        /// </summary>
        [JsonProperty(PropertyName = "typeVersion")]
        public string TypeVersion { get; set; }

        /// <summary>
        /// Gets or sets the update time of the record.
        /// </summary>
        [JsonProperty(PropertyName = "updateTime")]
        public double? UpdateTime { get; set; }

        /// <summary>
        /// Gets or sets the user who updated the record.
        /// </summary>
        [JsonProperty(PropertyName = "updatedBy")]
        public string UpdatedBy { get; set; }

        /// <summary>
        /// Gets or sets the version of the record.
        /// </summary>
        [JsonProperty(PropertyName = "version")]
        public double? Version { get; set; }

    }
}
