// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace DataCatalogGen2.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// AtlasGlossaryTerm
    /// </summary>
    /// <remarks>
    /// The glossary term.
    /// </remarks>
    public partial class JsonAtlasGlossaryTerm : JsonAtlasGlossaryBaseObject
    {
        /// <summary>
        /// Initializes a new instance of the JsonAtlasGlossaryTerm class.
        /// </summary>
        public JsonAtlasGlossaryTerm()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the JsonAtlasGlossaryTerm class.
        /// </summary>
        /// <param name="guid">The GUID of the object.</param>
        /// <param name="classifications">An array of classifications.</param>
        /// <param name="longDescription">The long version description.</param>
        /// <param name="name">The name of the glossary object.</param>
        /// <param name="qualifiedName">The qualified name of the glossary
        /// object.</param>
        /// <param name="shortDescription">The short version of
        /// description.</param>
        /// <param name="abbreviation">The abbreviation of the term.</param>
        /// <param name="antonyms">An array of related term headers as
        /// antonyms.</param>
        /// <param name="assignedEntities">An array of related object
        /// IDs.</param>
        /// <param name="categories">An array of term categorization
        /// headers.</param>
        /// <param name="classifies">An array of related term headers.</param>
        /// <param name="examples">An array of examples.</param>
        /// <param name="isA">An array of related term headers indicating the
        /// is-a relationship.</param>
        /// <param name="preferredTerms">An array of preferred related term
        /// headers.</param>
        /// <param name="preferredToTerms">An array of related term headers
        /// that are preferred to.</param>
        /// <param name="replacedBy">An array of related term headers that are
        /// replaced by.</param>
        /// <param name="replacementTerms">An array of related term headers for
        /// replacement.</param>
        /// <param name="seeAlso">An array of related term headers for see
        /// also.</param>
        /// <param name="synonyms">An array of related term headers as
        /// synonyms.</param>
        /// <param name="translatedTerms">An array of translated related term
        /// headers.</param>
        /// <param name="translationTerms">An array of related term headers for
        /// translation.</param>
        /// <param name="usage">The usage of the term.</param>
        /// <param name="validValues">An array of related term headers as valid
        /// values.</param>
        /// <param name="validValuesFor">An array of related term headers as
        /// valid values for other records.</param>
        public JsonAtlasGlossaryTerm(string guid = default(string), IList<JsonAtlasClassification> classifications = default(IList<JsonAtlasClassification>), string longDescription = default(string), string name = default(string), string qualifiedName = default(string), string shortDescription = default(string), string abbreviation = default(string), JsonAtlasGlossaryHeader anchor = default(JsonAtlasGlossaryHeader), IList<JsonAtlasRelatedTermHeader> antonyms = default(IList<JsonAtlasRelatedTermHeader>), IList<JsonAtlasRelatedObjectId> assignedEntities = default(IList<JsonAtlasRelatedObjectId>), IList<JsonAtlasTermCategorizationHeader> categories = default(IList<JsonAtlasTermCategorizationHeader>), IList<JsonAtlasRelatedTermHeader> classifies = default(IList<JsonAtlasRelatedTermHeader>), IList<string> examples = default(IList<string>), IList<JsonAtlasRelatedTermHeader> isA = default(IList<JsonAtlasRelatedTermHeader>), IList<JsonAtlasRelatedTermHeader> preferredTerms = default(IList<JsonAtlasRelatedTermHeader>), IList<JsonAtlasRelatedTermHeader> preferredToTerms = default(IList<JsonAtlasRelatedTermHeader>), IList<JsonAtlasRelatedTermHeader> replacedBy = default(IList<JsonAtlasRelatedTermHeader>), IList<JsonAtlasRelatedTermHeader> replacementTerms = default(IList<JsonAtlasRelatedTermHeader>), IList<JsonAtlasRelatedTermHeader> seeAlso = default(IList<JsonAtlasRelatedTermHeader>), IList<JsonAtlasRelatedTermHeader> synonyms = default(IList<JsonAtlasRelatedTermHeader>), IList<JsonAtlasRelatedTermHeader> translatedTerms = default(IList<JsonAtlasRelatedTermHeader>), IList<JsonAtlasRelatedTermHeader> translationTerms = default(IList<JsonAtlasRelatedTermHeader>), string usage = default(string), IList<JsonAtlasRelatedTermHeader> validValues = default(IList<JsonAtlasRelatedTermHeader>), IList<JsonAtlasRelatedTermHeader> validValuesFor = default(IList<JsonAtlasRelatedTermHeader>))
            : base(guid, classifications, longDescription, name, qualifiedName, shortDescription)
        {
            Abbreviation = abbreviation;
            Anchor = anchor;
            Antonyms = antonyms;
            AssignedEntities = assignedEntities;
            Categories = categories;
            Classifies = classifies;
            Examples = examples;
            IsA = isA;
            PreferredTerms = preferredTerms;
            PreferredToTerms = preferredToTerms;
            ReplacedBy = replacedBy;
            ReplacementTerms = replacementTerms;
            SeeAlso = seeAlso;
            Synonyms = synonyms;
            TranslatedTerms = translatedTerms;
            TranslationTerms = translationTerms;
            Usage = usage;
            ValidValues = validValues;
            ValidValuesFor = validValuesFor;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the abbreviation of the term.
        /// </summary>
        [JsonProperty(PropertyName = "abbreviation")]
        public string Abbreviation { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "anchor")]
        public JsonAtlasGlossaryHeader Anchor { get; set; }

        /// <summary>
        /// Gets or sets an array of related term headers as antonyms.
        /// </summary>
        [JsonProperty(PropertyName = "antonyms")]
        public IList<JsonAtlasRelatedTermHeader> Antonyms { get; set; }

        /// <summary>
        /// Gets or sets an array of related object IDs.
        /// </summary>
        [JsonProperty(PropertyName = "assignedEntities")]
        public IList<JsonAtlasRelatedObjectId> AssignedEntities { get; set; }

        /// <summary>
        /// Gets or sets an array of term categorization headers.
        /// </summary>
        [JsonProperty(PropertyName = "categories")]
        public IList<JsonAtlasTermCategorizationHeader> Categories { get; set; }

        /// <summary>
        /// Gets or sets an array of related term headers.
        /// </summary>
        [JsonProperty(PropertyName = "classifies")]
        public IList<JsonAtlasRelatedTermHeader> Classifies { get; set; }

        /// <summary>
        /// Gets or sets an array of examples.
        /// </summary>
        [JsonProperty(PropertyName = "examples")]
        public IList<string> Examples { get; set; }

        /// <summary>
        /// Gets or sets an array of related term headers indicating the is-a
        /// relationship.
        /// </summary>
        [JsonProperty(PropertyName = "isA")]
        public IList<JsonAtlasRelatedTermHeader> IsA { get; set; }

        /// <summary>
        /// Gets or sets an array of preferred related term headers.
        /// </summary>
        [JsonProperty(PropertyName = "preferredTerms")]
        public IList<JsonAtlasRelatedTermHeader> PreferredTerms { get; set; }

        /// <summary>
        /// Gets or sets an array of related term headers that are preferred
        /// to.
        /// </summary>
        [JsonProperty(PropertyName = "preferredToTerms")]
        public IList<JsonAtlasRelatedTermHeader> PreferredToTerms { get; set; }

        /// <summary>
        /// Gets or sets an array of related term headers that are replaced by.
        /// </summary>
        [JsonProperty(PropertyName = "replacedBy")]
        public IList<JsonAtlasRelatedTermHeader> ReplacedBy { get; set; }

        /// <summary>
        /// Gets or sets an array of related term headers for replacement.
        /// </summary>
        [JsonProperty(PropertyName = "replacementTerms")]
        public IList<JsonAtlasRelatedTermHeader> ReplacementTerms { get; set; }

        /// <summary>
        /// Gets or sets an array of related term headers for see also.
        /// </summary>
        [JsonProperty(PropertyName = "seeAlso")]
        public IList<JsonAtlasRelatedTermHeader> SeeAlso { get; set; }

        /// <summary>
        /// Gets or sets an array of related term headers as synonyms.
        /// </summary>
        [JsonProperty(PropertyName = "synonyms")]
        public IList<JsonAtlasRelatedTermHeader> Synonyms { get; set; }

        /// <summary>
        /// Gets or sets an array of translated related term headers.
        /// </summary>
        [JsonProperty(PropertyName = "translatedTerms")]
        public IList<JsonAtlasRelatedTermHeader> TranslatedTerms { get; set; }

        /// <summary>
        /// Gets or sets an array of related term headers for translation.
        /// </summary>
        [JsonProperty(PropertyName = "translationTerms")]
        public IList<JsonAtlasRelatedTermHeader> TranslationTerms { get; set; }

        /// <summary>
        /// Gets or sets the usage of the term.
        /// </summary>
        [JsonProperty(PropertyName = "usage")]
        public string Usage { get; set; }

        /// <summary>
        /// Gets or sets an array of related term headers as valid values.
        /// </summary>
        [JsonProperty(PropertyName = "validValues")]
        public IList<JsonAtlasRelatedTermHeader> ValidValues { get; set; }

        /// <summary>
        /// Gets or sets an array of related term headers as valid values for
        /// other records.
        /// </summary>
        [JsonProperty(PropertyName = "validValuesFor")]
        public IList<JsonAtlasRelatedTermHeader> ValidValuesFor { get; set; }

    }
}
