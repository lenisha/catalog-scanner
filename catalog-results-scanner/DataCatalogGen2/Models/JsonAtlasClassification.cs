// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace DataCatalogGen2.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// AtlasClassification
    /// </summary>
    /// <remarks>
    /// An instance of a classification; it doesn't have an identity, this
    /// object exists only when associated with an entity.
    /// </remarks>
    public partial class JsonAtlasClassification : JsonAtlasStruct
    {
        /// <summary>
        /// Initializes a new instance of the JsonAtlasClassification class.
        /// </summary>
        public JsonAtlasClassification()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the JsonAtlasClassification class.
        /// </summary>
        /// <param name="attributes">The attributes of the struct.</param>
        /// <param name="typeName">The name of the type.</param>
        /// <param name="entityGuid">The GUID of the entity.</param>
        /// <param name="entityStatus">Possible values include: 'ACTIVE',
        /// 'DELETED'</param>
        /// <param name="propagate">Determines if the classification will be
        /// propagated.</param>
        /// <param name="removePropagationsOnEntityDelete">Determines if
        /// propagations will be removed on entity deletion.</param>
        /// <param name="validityPeriods">An array of time boundaries
        /// indicating validity periods.</param>
        public JsonAtlasClassification(IDictionary<string, object> attributes = default(IDictionary<string, object>), string typeName = default(string), string entityGuid = default(string), string entityStatus = default(string), bool? propagate = default(bool?), bool? removePropagationsOnEntityDelete = default(bool?), IList<JsonTimeBoundary> validityPeriods = default(IList<JsonTimeBoundary>))
            : base(attributes, typeName)
        {
            EntityGuid = entityGuid;
            EntityStatus = entityStatus;
            Propagate = propagate;
            RemovePropagationsOnEntityDelete = removePropagationsOnEntityDelete;
            ValidityPeriods = validityPeriods;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the GUID of the entity.
        /// </summary>
        [JsonProperty(PropertyName = "entityGuid")]
        public string EntityGuid { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'ACTIVE', 'DELETED'
        /// </summary>
        [JsonProperty(PropertyName = "entityStatus")]
        public string EntityStatus { get; set; }

        /// <summary>
        /// Gets or sets determines if the classification will be propagated.
        /// </summary>
        [JsonProperty(PropertyName = "propagate")]
        public bool? Propagate { get; set; }

        /// <summary>
        /// Gets or sets determines if propagations will be removed on entity
        /// deletion.
        /// </summary>
        [JsonProperty(PropertyName = "removePropagationsOnEntityDelete")]
        public bool? RemovePropagationsOnEntityDelete { get; set; }

        /// <summary>
        /// Gets or sets an array of time boundaries indicating validity
        /// periods.
        /// </summary>
        [JsonProperty(PropertyName = "validityPeriods")]
        public IList<JsonTimeBoundary> ValidityPeriods { get; set; }

    }
}
