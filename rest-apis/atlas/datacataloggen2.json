{
  "swagger" : "2.0",
  "info" : {
    "title" : "Azure Data Catalog Gen 2 REST API Document",
    "description" : "Azure Data Catalog is a fully managed cloud service whose users can discover the data sources they need and understand the data sources they find. At the same time, Data Catalog helps organizations get more value from their existing investments.",
    "version" : "2019-03-25"
  },
  "host" : "localhost:21000",
  "schemes" : [ "https" ],
  "consumes" : [ "application/json" ],
  "produces" : [ "application/json" ],
  "paths" : {
    "/v2/entity" : {
      "post" : {
        "tags" : [ "EntityREST" ],
        "description" : "Creates or updates an entity in Atlas.\nExisting entity is matched using its unique guid if supplied or by its unique attributes eg: qualifiedName.\nMap and array of collections are not well supported. E.g., array<array<int>>, array<map<string, int>>.",
        "operationId" : "EntityREST_CreateOrUpdate",
        "x-ms-examples" : {
          "EntityREST_Create" : {
            "$ref" : "./examples/EntityREST_Create.json"
          },
          "EntityREST_Update" : {
            "$ref" : "./examples/EntityREST_Update.json"
          }
        },
        "parameters" : [ {
          "in" : "body",
          "name" : "entity",
          "description" : "Atlas entity with extended information.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/json_AtlasEntityWithExtInfo"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Created with EntityMutationResponse.",
            "schema" : {
              "$ref" : "#/definitions/json_EntityMutationResponse"
            }
          }
        }
      }
    },
    "/v2/entity/bulk" : {
      "get" : {
        "tags" : [ "EntityREST" ],
        "description" : "Lists entities in bulk identified by its GUIDs.",
        "operationId" : "EntityREST_GetByGuids",
        "x-ms-examples" : {
          "EntityREST_GetByGuids" : {
            "$ref" : "./examples/EntityREST_GetByGuids.json"
          }
        },
        "parameters" : [ {
          "name" : "guid",
          "in" : "query",
          "description" : "An array of GUIDs of entities to create.",
          "required" : true,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK.",
            "schema" : {
              "$ref" : "#/definitions/json_AtlasEntitiesWithExtInfo"
            }
          },
          "404" : {
            "description" : "No entity is found."
          }
        }
      },
      "post" : {
        "tags" : [ "EntityREST" ],
        "description" : "Creates or updates entities in Atlas in bulk.\nExisting entity is matched using its unique guid if supplied or by its unique attributes eg: qualifiedName.\nMap and array of collections are not well supported. E.g., array<array<int>>, array<map<string, int>>.",
        "operationId" : "EntityREST_CreateOrUpdateBulk",
        "x-ms-examples" : {
          "EntityREST_CreateOrUpdateBulk" : {
            "$ref" : "./examples/EntityREST_CreateOrUpdateBulk.json"
          }
        },
        "parameters" : [ {
          "in" : "body",
          "name" : "entities",
          "description" : "An array of entities to create or update.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/json_AtlasEntitiesWithExtInfo"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Ok.",
            "schema" : {
              "$ref" : "#/definitions/json_EntityMutationResponse"
            }
          },
          "201" : {
            "description" : "Created with EntityMutationResponse.",
            "schema" : {
              "$ref" : "#/definitions/json_EntityMutationResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "EntityREST" ],
        "description" : "Deletes a list of entities in bulk identified by their GUIDs or unique attributes.",
        "operationId" : "EntityREST_BulkDelete",
        "x-ms-examples" : {
          "EntityREST_DeleteByGuids" : {
            "$ref" : "./examples/EntityREST_DeleteByGuids.json"
          },
          "EntityREST_DeleteByUniqueAttribute" : {
            "$ref" : "./examples/EntityREST_DeleteByUniqueAttribute.json"
          }
        },
        "parameters" : [ {
          "name" : "guid",
          "in" : "query",
          "description" : "An array of GUIDs of entities to delete. Use an empty list if not applicable.",
          "required" : true,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "in" : "body",
          "name" : "atlasObjectIdWithParentGuidList",
          "description" : "An array of Atlas Object Id to be deleted. Use an empty list if not applicable.",
          "required" : true,
          "schema" : {
            "type" : "array",
            "description" : "An array of Atlas Object Id.",
            "items" : {
              "$ref" : "#/definitions/json_AtlasObjectIdWithParentGuid"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Deleted with EntityMutationResponse.",
            "schema" : {
              "$ref" : "#/definitions/json_EntityMutationResponse"
            }
          }
        }
      }
    },
    "/v2/entity/bulk/classification" : {
      "post" : {
        "tags" : [ "EntityREST" ],
        "description" : "Associates a classification to multiple entities in bulk.",
        "operationId" : "EntityREST_AddClassification",
        "x-ms-examples" : {
          "EntityREST_AddClassificationToEntityGuids" : {
            "$ref" : "./examples/EntityREST_AddClassificationToEntityByGuids.json"
          },
          "EntityREST_AddClassificationToEntityByUniqueAttributes" : {
            "$ref" : "./examples/EntityREST_AddClassificationToEntityByUniqueAttributes.json"
          }
        },
        "parameters" : [ {
          "in" : "body",
          "name" : "request",
          "description" : "The request to associate a classification to multiple entities.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/json_ClassificationAssociateRequest"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content."
          }
        }
      }
    },
    "/v2/entity/guid/{guid}" : {
      "get" : {
        "tags" : [ "EntityREST" ],
        "operationId" : "EntityREST_GetById",
        "x-ms-examples" : {
          "EntityREST_GetById" : {
            "$ref" : "./examples/EntityREST_GetById.json"
          }
        },
        "description" : "Gets complete definition of an entity given its GUID.",
        "parameters" : [ {
          "$ref" : "#/parameters/guid"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK.",
            "schema" : {
              "$ref" : "#/definitions/json_AtlasEntityWithExtInfo"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "EntityREST" ],
        "description" : "Updates entity partially - creates or updates entity attribute identified by its GUID.\nSupports only uprimitive attribute type and entity references.\nIt does not support updation of complex types like arrays, and maps.\nNull updates are not possible.",
        "operationId" : "EntityREST_PartialUpdateEntityAttrByGuid",
        "parameters" : [ {
          "$ref" : "#/parameters/guid"
        }, {
          "name" : "name",
          "in" : "query",
          "description" : "The name of the attribute.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The value of the attribute.",
          "required" : true,
          "schema" : {
            "type" : "object"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Updated with EntityMutationResponse.",
            "schema" : {
              "$ref" : "#/definitions/json_EntityMutationResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "EntityREST" ],
        "description" : "Deletes an entity identified by its GUID.",
        "operationId" : "EntityREST_DeleteByGuid",
        "x-ms-examples" : {
          "EntityREST_DeleteByGuid" : {
            "$ref" : "./examples/EntityREST_DeleteByGuid.json"
          }
        },
        "parameters" : [ {
          "$ref" : "#/parameters/guid"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted with EntityMutationResponse.",
            "schema" : {
              "$ref" : "#/definitions/json_EntityMutationResponse"
            }
          }
        }
      }
    },
    "/v2/entity/guid/{guid}/classification/{classificationName}" : {
      "get" : {
        "tags" : [ "EntityREST" ],
        "description" : "Lists classifications for a given entity represented by a GUID.",
        "operationId" : "EntityREST_GetClassification",
        "x-ms-examples" : {
          "EntityREST_GetClassification" : {
            "$ref" : "./examples/EntityREST_GetClassification.json"
          }
        },
        "parameters" : [ {
          "$ref" : "#/parameters/guid"
        }, {
          "$ref" : "#/parameters/classificationName"
        } ],
        "responses" : {
          "200" : {
            "description" : "The classification for the given entity GUID.",
            "schema" : {
              "$ref" : "#/definitions/json_AtlasClassification"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "EntityREST" ],
        "description" : "Deletes a given classification from an existing entity represented by a GUID.",
        "operationId" : "EntityREST_DeleteClassification",
        "x-ms-examples" : {
          "EntityREST_DeleteClassification" : {
            "$ref" : "./examples/EntityREST_DeleteClassification.json"
          }
        },
        "parameters" : [ {
          "$ref" : "#/parameters/guid"
        }, {
          "$ref" : "#/parameters/classificationName"
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content."
          }
        }
      }
    },
    "/v2/entity/guid/{guid}/classifications" : {
      "get" : {
        "tags" : [ "EntityREST" ],
        "description" : "Lists classifications for a given entity represented by a GUID.",
        "operationId" : "EntityREST_GetClassifications",
        "x-ms-examples" : {
          "EntityREST_GetClassifications" : {
            "$ref" : "./examples/EntityREST_GetClassifications.json"
          }
        },
        "parameters" : [ {
          "$ref" : "#/parameters/guid"
        } ],
        "responses" : {
          "200" : {
            "description" : "An array of classifications for the given entity GUID.",
            "schema" : {
              "$ref" : "#/definitions/json_AtlasClassifications"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "EntityREST" ],
        "description" : "Adds classifications to an existing entity represented by a GUID.",
        "operationId" : "EntityREST_AddClassifications",
        "x-ms-examples" : {
          "EntityREST_AddClassifications" : {
            "$ref" : "./examples/EntityREST_AddClassifications.json"
          }
        },
        "parameters" : [ {
          "$ref" : "#/parameters/guid"
        }, {
          "in" : "body",
          "name" : "classifications",
          "description" : "An array of classifications to be added.",
          "required" : true,
          "schema" : {
            "type" : "array",
            "description" : "An array of classifications.",
            "items" : {
              "$ref" : "#/definitions/json_AtlasClassification"
            }
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "OK."
          }
        }
      },
      "put" : {
        "tags" : [ "EntityREST" ],
        "description" : "Updates classifications to an existing entity represented by a guid.",
        "operationId" : "EntityREST_UpdateClassifications",
        "x-ms-examples" : {
          "EntityREST_UpdateClassifications" : {
            "$ref" : "./examples/EntityREST_UpdateClassifications.json"
          }
        },
        "parameters" : [ {
          "$ref" : "#/parameters/guid"
        }, {
          "in" : "body",
          "name" : "classifications",
          "description" : "An array of classifications to be updated.",
          "required" : true,
          "schema" : {
            "type" : "array",
            "description" : "An array of classifications.",
            "items" : {
              "$ref" : "#/definitions/json_AtlasClassification"
            }
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content."
          }
        }
      }
    },
    "/v2/entity/uniqueAttribute/type/{typeName}" : {
      "get" : {
        "tags" : [ "EntityREST" ],
        "description" : "Gets complete definition of an entity given its type and unique attribute.\nIn addition to the typeName path parameter, attribute key-value pair(s) can be provided in the following format:\nattr:<attrName>=<attrValue>.\nNOTE: The attrName and attrValue should be unique across entities, eg. qualifiedName.\nThe REST request would look something like this:\nGET /v2/entity/uniqueAttribute/type/aType?attr:aTypeAttribute=someValue.",
        "operationId" : "EntityREST_GetByUniqueAttributes",
        "parameters" : [ {
          "$ref" : "#/parameters/typeName"
        } ],
        "responses" : {
          "200" : {
            "description" : "AtlasEntityWithExtInfo.",
            "schema" : {
              "$ref" : "#/definitions/json_AtlasEntityWithExtInfo"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "EntityREST" ],
        "description" : "Updates entity partially - Allows a subset of attributes to be updated on\nan entity which is identified by its type and unique attribute  eg: Referenceable.qualifiedName.\nNull updates are not possible.\nIn addition to the typeName path parameter, attribute key-value pair(s) can be provided in the following format:\nattr:<attrName>=<attrValue>.\nNOTE: The attrName and attrValue should be unique across entities, eg. qualifiedName.\nThe REST request would look something like this:\nPUT /v2/entity/uniqueAttribute/type/aType?attr:aTypeAttribute=someValue.",
        "operationId" : "EntityREST_PartialUpdateEntityByUniqueAttrs",
        "parameters" : [ {
          "$ref" : "#/parameters/typeName"
        }, {
          "in" : "body",
          "name" : "atlasEntityWithExtInfo",
          "description" : "Atlas entity with extended information.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/json_AtlasEntityWithExtInfo"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Updated with EntityMutationResponse.",
            "schema" : {
              "$ref" : "#/definitions/json_EntityMutationResponse"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "EntityREST" ],
        "description" : "Deletes an entity identified by its type and unique attributes.\nIn addition to the typeName path parameter, attribute key-value pair(s) can be provided in the following format:\nattr:<attrName>=<attrValue>.\nNOTE: The attrName and attrValue should be unique across entities, eg. qualifiedName.\nThe REST request would look something like this:\nDELETE /v2/entity/uniqueAttribute/type/aType?attr:aTypeAttribute=someValue.",
        "operationId" : "EntityREST_DeleteByUniqueAttribute",
        "parameters" : [ {
          "$ref" : "#/parameters/typeName"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted with EntityMutationResponse.",
            "schema" : {
              "$ref" : "#/definitions/json_EntityMutationResponse"
            }
          }
        }
      }
    },
    "/v2/entity/uniqueAttribute/type/{typeName}/classification/{classificationName}" : {
      "delete" : {
        "tags" : [ "EntityREST" ],
        "description" : "Deletes a given classification from an entity identified by its type and unique attributes.",
        "operationId" : "EntityREST_DeleteClassificationByUniqueAttribute",
        "x-ms-examples" : {
          "EntityREST_DeleteClassificationByUniqueAttribute" : {
            "$ref" : "./examples/EntityREST_DeleteClassificationByUniqueAttribute.json"
          }
        },
        "parameters" : [ {
          "$ref" : "#/parameters/typeName"
        }, {
          "$ref" : "#/parameters/classificationName"
        }, {
          "name" : "parentEntityGuid",
          "in" : "query",
          "description" : "The GUID of the parent entity.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "attr:qualifiedName",
          "in" : "query",
          "description" : "The qualified name of the entity.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content."
          },
          "404" : {
            "description" : "Not Found."
          }
        }
      }
    },
    "/v2/entity/uniqueAttribute/type/{typeName}/classifications" : {
      "post" : {
        "tags" : [ "EntityREST" ],
        "description" : "Adds classification to the entity identified by its type and unique attributes.",
        "operationId" : "EntityREST_AddClassificationsByUniqueAttribute",
        "parameters" : [ {
          "$ref" : "#/parameters/typeName"
        }, {
          "in" : "body",
          "name" : "atlasClassificationArray",
          "description" : "An array of classification to be added.",
          "required" : true,
          "schema" : {
            "type" : "array",
            "description" : "An array of classification.",
            "items" : {
              "$ref" : "#/definitions/json_AtlasClassification"
            }
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "OK."
          }
        }
      },
      "put" : {
        "tags" : [ "EntityREST" ],
        "description" : "Updates classification on an entity identified by its type and unique attributes.",
        "operationId" : "EntityREST_UpdateClassificationsByUniqueAttribute",
        "parameters" : [ {
          "$ref" : "#/parameters/typeName"
        }, {
          "in" : "body",
          "name" : "atlasClassificationArray",
          "description" : "An array of classification to be updated.",
          "required" : true,
          "schema" : {
            "type" : "array",
            "description" : "An array of classification.",
            "items" : {
              "$ref" : "#/definitions/json_AtlasClassification"
            }
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content."
          }
        }
      }
    },
    "/v2/glossary" : {
      "get" : {
        "tags" : [ "GlossaryREST" ],
        "description" : "Gets all glossaries registered with Atlas.",
        "operationId" : "GlossaryREST_GetGlossaries",
        "x-ms-examples" : {
          "GlossaryREST_GetGlossaries" : {
            "$ref" : "./examples/GlossaryREST_GetGlossaries.json"
          }
        },
        "parameters" : [ {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "An array of existing glossaries fitting the search criteria or empty list if nothing matches.",
            "schema" : {
              "type" : "array",
              "description" : "An array of existing glossaries fitting the search criteria or empty list if nothing matches.",
              "items" : {
                "$ref" : "#/definitions/json_AtlasGlossary"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "GlossaryREST" ],
        "description" : "Creates a glossary.",
        "operationId" : "GlossaryREST_CreateGlossary",
        "x-ms-examples" : {
          "GlossaryREST_CreateGlossary" : {
            "$ref" : "./examples/GlossaryREST_CreateGlossary.json"
          }
        },
        "parameters" : [ {
          "in" : "body",
          "name" : "atlasGlossary",
          "description" : "Glossary definition, terms & categories can be anchored to a glossary.\nUsing the anchor attribute when creating the Term/Category.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/json_AtlasGlossary"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. If glossary creation was successful.",
            "schema" : {
              "$ref" : "#/definitions/json_AtlasGlossary"
            }
          },
          "400" : {
            "description" : "If glossary definition has invalid or missing information."
          },
          "409" : {
            "description" : "If glossary definition already exists (duplicate qualifiedName)."
          }
        }
      }
    },
    "/v2/glossary/categories" : {
      "post" : {
        "tags" : [ "GlossaryREST" ],
        "description" : "Creates glossary category in bulk.",
        "operationId" : "GlossaryREST_CreateGlossaryCategories",
        "x-ms-examples" : {
          "GlossaryREST_CreateGlossaryCategories" : {
            "$ref" : "./examples/GlossaryREST_CreateGlossaryCategories.json"
          }
        },
        "parameters" : [ {
          "in" : "body",
          "name" : "glossaryCategory",
          "description" : "An array of glossary category definitions to be created.",
          "required" : true,
          "schema" : {
            "type" : "array",
            "description" : "An array of glossary category definitions.",
            "items" : {
              "$ref" : "#/definitions/json_AtlasGlossaryCategory"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. If bulk glossary category creation was successful.",
            "schema" : {
              "type" : "array",
              "description" : "An array of glossary category created successfully in bulk.",
              "items" : {
                "$ref" : "#/definitions/json_AtlasGlossaryCategory"
              }
            }
          },
          "400" : {
            "description" : "If ANY glossary category definition has invalid or missing information."
          }
        }
      }
    },
    "/v2/glossary/category" : {
      "post" : {
        "tags" : [ "GlossaryREST" ],
        "description" : "Creates a glossary category.",
        "operationId" : "GlossaryREST_CreateGlossaryCategory",
        "x-ms-examples" : {
          "GlossaryREST_CreateGlossaryCategory" : {
            "$ref" : "./examples/GlossaryREST_CreateGlossaryCategory.json"
          }
        },
        "parameters" : [ {
          "in" : "body",
          "name" : "glossaryCategory",
          "description" : "The glossary category definition. A category must be anchored to a Glossary when creating.\nOptionally, terms belonging to the category and the hierarchy can also be defined during creation.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/json_AtlasGlossaryCategory"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. If glossary category creation was successful.",
            "schema" : {
              "$ref" : "#/definitions/json_AtlasGlossaryCategory"
            }
          },
          "400" : {
            "description" : "If glossary category definition has invalid or missing information."
          },
          "409" : {
            "description" : "If glossary category already exists (duplicate qualifiedName)."
          }
        }
      }
    },
    "/v2/glossary/category/{categoryGuid}" : {
      "get" : {
        "tags" : [ "GlossaryREST" ],
        "description" : "Gets specific glossary category by its GUID.",
        "operationId" : "GlossaryREST_GetGlossaryCategory",
        "x-ms-examples" : {
          "GlossaryREST_GetGlossaryCategory" : {
            "$ref" : "./examples/GlossaryREST_GetGlossaryCategory.json"
          }
        },
        "parameters" : [ {
          "$ref" : "#/parameters/categoryGuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. If glossary category exists for given GUID.",
            "schema" : {
              "$ref" : "#/definitions/json_AtlasGlossaryCategory"
            }
          },
          "404" : {
            "description" : "If glossary category GUID is invalid."
          }
        }
      },
      "put" : {
        "tags" : [ "GlossaryREST" ],
        "description" : "Updates the given glossary category by its GUID.",
        "operationId" : "GlossaryREST_UpdateGlossaryCategory",
        "x-ms-examples" : {
          "GlossaryREST_UpdateGlossaryCategory" : {
            "$ref" : "./examples/GlossaryREST_UpdateGlossaryCategory.json"
          }
        },
        "parameters" : [ {
          "$ref" : "#/parameters/categoryGuid"
        }, {
          "in" : "body",
          "name" : "glossaryCategory",
          "description" : "The glossary category to be updated.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/json_AtlasGlossaryCategory"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. If glossary category partial update was successful.",
            "schema" : {
              "$ref" : "#/definitions/json_AtlasGlossaryCategory"
            }
          },
          "400" : {
            "description" : "If glossary category definition has invalid or missing information."
          },
          "404" : {
            "description" : "If glossary category GUID is invalid."
          }
        }
      },
      "delete" : {
        "tags" : [ "GlossaryREST" ],
        "description" : "Deletes a glossary category.",
        "operationId" : "GlossaryREST_DeleteGlossaryCategory",
        "x-ms-examples" : {
          "GlossaryREST_DeleteGlossaryCategory" : {
            "$ref" : "./examples/GlossaryREST_DeleteGlossaryCategory.json"
          }
        },
        "parameters" : [ {
          "$ref" : "#/parameters/categoryGuid"
        } ],
        "responses" : {
          "204" : {
            "description" : "OK. If glossary category delete was successful."
          },
          "404" : {
            "description" : "If glossary category GUID is invalid."
          }
        }
      }
    },
    "/v2/glossary/category/{categoryGuid}/partial" : {
      "put" : {
        "tags" : [ "GlossaryREST" ],
        "description" : "Updates the glossary category partially.",
        "operationId" : "GlossaryREST_PartialUpdateGlossaryCategory",
        "x-ms-examples" : {
          "GlossaryREST_PartialUpdateGlossaryCategory" : {
            "$ref" : "./examples/GlossaryREST_PartialUpdateGlossaryCategory.json"
          }
        },
        "parameters" : [ {
          "$ref" : "#/parameters/categoryGuid"
        }, {
          "in" : "body",
          "name" : "partialUpdates",
          "description" : "A map containing keys as attribute names and values as corresponding attribute values for partial update.",
          "required" : true,
          "schema" : {
            "type" : "object",
            "description" : "A map containing keys as attribute names and values as corresponding attribute values.",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. If glossary category partial update was successful.",
            "schema" : {
              "$ref" : "#/definitions/json_AtlasGlossaryCategory"
            }
          },
          "400" : {
            "description" : "If category attributes are invalid."
          },
          "404" : {
            "description" : "If glossary category GUID is invalid."
          }
        }
      }
    },
    "/v2/glossary/category/{categoryGuid}/related" : {
      "get" : {
        "tags" : [ "GlossaryREST" ],
        "description" : "Gets all related categories (parent and children). Limit, offset, and sort parameters are currently not being enabled and won't work even they are passed.",
        "operationId" : "GlossaryREST_GetRelatedCategories",
        "x-ms-examples" : {
          "GlossaryREST_GetRelatedCategories" : {
            "$ref" : "./examples/GlossaryREST_GetRelatedCategories.json"
          }
        },
        "parameters" : [ {
          "$ref" : "#/parameters/categoryGuid"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. Gets an array of related categories.",
            "schema" : {
              "type" : "object",
              "description" : "An array of related categories.",
              "additionalProperties" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/definitions/json_AtlasRelatedCategoryHeader"
                }
              }
            }
          }
        }
      }
    },
    "/v2/glossary/category/{categoryGuid}/terms" : {
      "get" : {
        "tags" : [ "GlossaryREST" ],
        "description" : "Gets all terms associated with the specific category.",
        "operationId" : "GlossaryREST_GetCategoryTerms",
        "x-ms-examples" : {
          "GlossaryREST_GetCategoryTerms" : {
            "$ref" : "./examples/GlossaryREST_GetCategoryTerms.json"
          }
        },
        "parameters" : [ {
          "$ref" : "#/parameters/categoryGuid"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "An array of terms for the given category or an empty list.",
            "schema" : {
              "type" : "array",
              "description" : "An array of terms for the given category or an empty list.",
              "items" : {
                "$ref" : "#/definitions/json_AtlasRelatedTermHeader"
              }
            }
          },
          "404" : {
            "description" : "If glossary category GUID is invalid."
          }
        }
      }
    },
    "/v2/glossary/term" : {
      "post" : {
        "tags" : [ "GlossaryREST" ],
        "description" : "Creates a glossary term.",
        "operationId" : "GlossaryREST_CreateGlossaryTerm",
        "x-ms-examples" : {
          "GlossaryREST_CreateGlossaryTerm" : {
            "$ref" : "./examples/GlossaryREST_CreateGlossaryTerm.json"
          }
        },
        "parameters" : [ {
          "in" : "body",
          "name" : "glossaryTerm",
          "description" : "The glossary term definition. A term must be anchored to a Glossary at the time of creation.\nOptionally it can be categorized as well.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/json_AtlasGlossaryTerm"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. If glossary term creation was successful.",
            "schema" : {
              "$ref" : "#/definitions/json_AtlasGlossaryTerm"
            }
          },
          "400" : {
            "description" : "If glossary term definition has invalid or missing information."
          },
          "409" : {
            "description" : "If glossary term already exists (duplicate qualifiedName)."
          }
        }
      }
    },
    "/v2/glossary/term/{termGuid}" : {
      "get" : {
        "tags" : [ "GlossaryREST" ],
        "description" : "Gets a specific glossary term by its GUID.",
        "operationId" : "GlossaryREST_GetGlossaryTerm",
        "x-ms-examples" : {
          "GlossaryREST_GetGlossaryTerm" : {
            "$ref" : "./examples/GlossaryREST_GetGlossaryTerm.json"
          }
        },
        "parameters" : [ {
          "$ref" : "#/parameters/termGuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. If glossary term exists for given GUID.",
            "schema" : {
              "$ref" : "#/definitions/json_AtlasGlossaryTerm"
            }
          },
          "404" : {
            "description" : "If glossary term GUID is invalid."
          }
        }
      },
      "put" : {
        "tags" : [ "GlossaryREST" ],
        "description" : "Updates the given glossary term by its GUID.",
        "operationId" : "GlossaryREST_UpdateGlossaryTerm",
        "x-ms-examples" : {
          "GlossaryREST_UpdateGlossaryTerm" : {
            "$ref" : "./examples/GlossaryREST_UpdateGlossaryTerm.json"
          }
        },
        "parameters" : [ {
          "$ref" : "#/parameters/termGuid"
        }, {
          "in" : "body",
          "name" : "glossaryTerm",
          "description" : "The glossary term to be updated.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/json_AtlasGlossaryTerm"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. If glossary term update was successful.",
            "schema" : {
              "$ref" : "#/definitions/json_AtlasGlossaryTerm"
            }
          },
          "400" : {
            "description" : "If glossary temr definition has invalid or missing information."
          },
          "404" : {
            "description" : "If glossary term GUID is invalid."
          }
        }
      },
      "delete" : {
        "tags" : [ "GlossaryREST" ],
        "description" : "Deletes a glossary term.",
        "operationId" : "GlossaryREST_DeleteGlossaryTerm",
        "parameters" : [ {
          "$ref" : "#/parameters/termGuid"
        } ],
        "responses" : {
          "204" : {
            "description" : "OK. If glossary term delete was successful."
          },
          "404" : {
            "description" : "If glossary term guid in invalid."
          }
        }
      }
    },
    "/v2/glossary/term/{termGuid}/partial" : {
      "put" : {
        "tags" : [ "GlossaryREST" ],
        "description" : "Updates the glossary term partially.",
        "operationId" : "GlossaryREST_PartialUpdateGlossaryTerm",
        "x-ms-examples" : {
          "GlossaryREST_PartialUpdateGlossaryTerm" : {
            "$ref" : "./examples/GlossaryREST_PartialUpdateGlossaryTerm.json"
          }
        },
        "parameters" : [ {
          "$ref" : "#/parameters/termGuid"
        }, {
          "in" : "body",
          "name" : "partialUpdates",
          "description" : "A map containing keys as attribute names and values as corresponding attribute values to be updated.",
          "required" : true,
          "schema" : {
            "type" : "object",
            "description" : "A map containing keys as attribute names and values as corresponding attribute values.",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. If glossary partial update was successful.",
            "schema" : {
              "$ref" : "#/definitions/json_AtlasGlossaryTerm"
            }
          },
          "400" : {
            "description" : "If partial attributes are invalid."
          },
          "404" : {
            "description" : "If glossary term guid in invalid."
          }
        }
      }
    },
    "/v2/glossary/terms" : {
      "post" : {
        "tags" : [ "GlossaryREST" ],
        "description" : "Creates glossary terms in bulk.",
        "operationId" : "GlossaryREST_CreateGlossaryTerms",
        "x-ms-examples" : {
          "GlossaryREST_CreateGlossaryTerms" : {
            "$ref" : "./examples/GlossaryREST_CreateGlossaryTerms.json"
          }
        },
        "parameters" : [ {
          "in" : "body",
          "name" : "glossaryTerm",
          "description" : "An array of glossary term definitions to be created in bulk.",
          "required" : true,
          "schema" : {
            "type" : "array",
            "description" : "An array of glossary term definitions.",
            "items" : {
              "$ref" : "#/definitions/json_AtlasGlossaryTerm"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. If bulk glossary terms creation was successful.",
            "schema" : {
              "type" : "array",
              "description" : "If bulk glossary terms creation was successful.",
              "items" : {
                "$ref" : "#/definitions/json_AtlasGlossaryTerm"
              }
            }
          },
          "400" : {
            "description" : "If any glossary term definition has invalid or missing information."
          }
        }
      }
    },
    "/v2/glossary/terms/{termGuid}/assignedEntities" : {
      "get" : {
        "tags" : [ "GlossaryREST" ],
        "description" : "Gets all related objects assigned with the specified term.",
        "operationId" : "GlossaryREST_GetEntitiesAssignedWithTerm",
        "x-ms-examples" : {
          "GlossaryREST_GetEntitiesAssignedWithTerm" : {
            "$ref" : "./examples/GlossaryREST_GetEntitiesAssignedWithTerm.json"
          }
        },
        "parameters" : [ {
          "$ref" : "#/parameters/termGuid"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. An array of related objects (if any) for the given glossary or an empty list.",
            "schema" : {
              "type" : "array",
              "description" : "An array of related objects (if any) for the given glossary or an empty list.",
              "items" : {
                "$ref" : "#/definitions/json_AtlasRelatedObjectId"
              }
            }
          },
          "404" : {
            "description" : "If glossary term GUID is invalid."
          }
        }
      },
      "post" : {
        "tags" : [ "GlossaryREST" ],
        "description" : "Assigns the given term to the provided list of related objects.",
        "operationId" : "GlossaryREST_AssignTermToEntities",
        "x-ms-examples" : {
          "GlossaryREST_AssignTermToEntities" : {
            "$ref" : "./examples/GlossaryREST_AssignTermToEntities.json"
          }
        },
        "parameters" : [ {
          "$ref" : "#/parameters/termGuid"
        }, {
          "in" : "body",
          "name" : "relatedObjectIds",
          "description" : "An array of related object IDs to which the term has to be associated.",
          "required" : true,
          "schema" : {
            "type" : "array",
            "description" : "An array of related object IDs to which the term has to be associated.",
            "items" : {
              "$ref" : "#/definitions/json_AtlasRelatedObjectId"
            }
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "OK. If the term assignment was successful."
          },
          "400" : {
            "description" : "If ANY of the related objects is invalid."
          },
          "404" : {
            "description" : "If glossary term GUID is invalid."
          }
        }
      },
      "delete" : {
        "tags" : [ "GlossaryREST" ],
        "description" : "Deletes the term assignment for the given list of related objects.",
        "operationId" : "GlossaryREST_RemoveTermAssignmentFromEntities",
        "x-ms-examples" : {
          "GlossaryREST_RemoveTermAssignmentFromEntities" : {
            "$ref" : "./examples/GlossaryREST_RemoveTermAssignmentFromEntities.json"
          }
        },
        "parameters" : [ {
          "$ref" : "#/parameters/termGuid"
        }, {
          "in" : "body",
          "name" : "relatedObjectIds",
          "description" : "An array of related object IDs from which the term has to be dissociated.",
          "required" : true,
          "schema" : {
            "type" : "array",
            "description" : "An array of related object IDs from which the term has to be dissociated.",
            "items" : {
              "$ref" : "#/definitions/json_AtlasRelatedObjectId"
            }
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "OK. If glossary term dissociation was successful."
          },
          "400" : {
            "description" : "If ANY of the related objects is invalid."
          },
          "404" : {
            "description" : "If glossary term GUID is invalid."
          }
        }
      }
    },
    "/v2/glossary/terms/{termGuid}/related" : {
      "get" : {
        "tags" : [ "GlossaryREST" ],
        "description" : "Gets all related terms for a specific term by its GUID. Limit, offset, and sort parameters are currently not being enabled and won't work even they are passed.",
        "operationId" : "GlossaryREST_GetRelatedTerms",
        "x-ms-examples" : {
          "GlossaryREST_GetRelatedTerms" : {
            "$ref" : "./examples/GlossaryREST_GetRelatedTerms.json"
          }
        },
        "parameters" : [ {
          "$ref" : "#/parameters/termGuid"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. An array of related glossary terms for the given glossary or an empty list.",
            "schema" : {
              "type" : "object",
              "description" : "An array of related glossary terms for the given glossary or an empty list.",
              "additionalProperties" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/definitions/json_AtlasRelatedTermHeader"
                }
              }
            }
          },
          "404" : {
            "description" : "If glossary term GUID is invalid."
          }
        }
      }
    },
    "/v2/glossary/{glossaryGuid}" : {
      "get" : {
        "tags" : [ "GlossaryREST" ],
        "description" : "Gets a specific Glossary by its GUID.",
        "operationId" : "GlossaryREST_GetGlossary",
        "x-ms-examples" : {
          "GlossaryREST_GetGlossary" : {
            "$ref" : "./examples/GlossaryREST_GetGlossary.json"
          }
        },
        "parameters" : [ {
          "$ref" : "#/parameters/glossaryGuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. If glossary with given guid exists.",
            "schema" : {
              "$ref" : "#/definitions/json_AtlasGlossary"
            }
          },
          "404" : {
            "description" : "If glossary GUID is invalid."
          }
        }
      },
      "put" : {
        "tags" : [ "GlossaryREST" ],
        "description" : "Updates the given glossary.",
        "operationId" : "GlossaryREST_UpdateGlossary",
        "x-ms-examples" : {
          "GlossaryREST_UpdateGlossary" : {
            "$ref" : "./examples/GlossaryREST_UpdateGlossary.json"
          }
        },
        "parameters" : [ {
          "$ref" : "#/parameters/glossaryGuid"
        }, {
          "in" : "body",
          "name" : "updatedGlossary",
          "description" : "The glossary definition to be updated.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/json_AtlasGlossary"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. If glossary update was successful.",
            "schema" : {
              "$ref" : "#/definitions/json_AtlasGlossary"
            }
          },
          "400" : {
            "description" : "If glossary definition has invalid or missing information."
          },
          "404" : {
            "description" : "If glossary GUID is invalid."
          }
        }
      },
      "delete" : {
        "tags" : [ "GlossaryREST" ],
        "description" : "Deletes a glossary.",
        "operationId" : "GlossaryREST_DeleteGlossary",
        "parameters" : [ {
          "$ref" : "#/parameters/glossaryGuid"
        } ],
        "responses" : {
          "204" : {
            "description" : "OK. If glossary delete was successful."
          },
          "404" : {
            "description" : "If glossary GUID in invalid."
          }
        }
      }
    },
    "/v2/glossary/{glossaryGuid}/categories" : {
      "get" : {
        "tags" : [ "GlossaryREST" ],
        "description" : "Gets the categories belonging to a specific glossary.",
        "operationId" : "GlossaryREST_GetGlossaryCategories",
        "x-ms-examples" : {
          "GlossaryREST_GetGlossaryCategories" : {
            "$ref" : "./examples/GlossaryREST_GetGlossaryCategories.json"
          }
        },
        "parameters" : [ {
          "$ref" : "#/parameters/glossaryGuid"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. An array of glossary categories for the given glossary or an empty list.",
            "schema" : {
              "type" : "array",
              "description" : "An array of glossary categories for the given glossary or an empty list.",
              "items" : {
                "$ref" : "#/definitions/json_AtlasGlossaryCategory"
              }
            }
          },
          "404" : {
            "description" : "If glossary guid is invalid."
          }
        }
      }
    },
    "/v2/glossary/{glossaryGuid}/categories/headers" : {
      "get" : {
        "tags" : [ "GlossaryREST" ],
        "description" : "Gets the category headers belonging to a specific glossary.",
        "operationId" : "GlossaryREST_GetGlossaryCategoriesHeaders",
        "x-ms-examples" : {
          "GlossaryREST_GetGlossaryCategoriesHeaders" : {
            "$ref" : "./examples/GlossaryREST_GetGlossaryCategoriesHeaders.json"
          }
        },
        "parameters" : [ {
          "$ref" : "#/parameters/glossaryGuid"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. An array of glossary category headers for the given glossary or an empty list.",
            "schema" : {
              "type" : "array",
              "description" : "An array of glossary category headers for the given glossary or an empty list.",
              "items" : {
                "$ref" : "#/definitions/json_AtlasRelatedCategoryHeader"
              }
            }
          },
          "404" : {
            "description" : "If glossary GUID is invalid."
          }
        }
      }
    },
    "/v2/glossary/{glossaryGuid}/detailed" : {
      "get" : {
        "tags" : [ "GlossaryREST" ],
        "description" : "Gets a specific glossary with detailed information.",
        "operationId" : "GlossaryREST_GetDetailedGlossary",
        "x-ms-examples" : {
          "GlossaryREST_GetDetailedGlossary" : {
            "$ref" : "./examples/GlossaryREST_GetDetailedGlossary.json"
          }
        },
        "parameters" : [ {
          "$ref" : "#/parameters/glossaryGuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. If glossary exists for given GUID.",
            "schema" : {
              "$ref" : "#/definitions/json_AtlasGlossaryExtInfo"
            }
          },
          "404" : {
            "description" : "If glossary GUID is invalid."
          }
        }
      }
    },
    "/v2/glossary/{glossaryGuid}/partial" : {
      "put" : {
        "tags" : [ "GlossaryREST" ],
        "description" : "Updates the glossary partially. Some properties such as qualifiedName are not allowed to be updated.",
        "operationId" : "GlossaryREST_PartialUpdateGlossary",
        "x-ms-examples" : {
          "GlossaryREST_PartialUpdateGlossary" : {
            "$ref" : "./examples/GlossaryREST_PartialUpdateGlossary.json"
          }
        },
        "parameters" : [ {
          "$ref" : "#/parameters/glossaryGuid"
        }, {
          "in" : "body",
          "name" : "partialUpdates",
          "description" : "A map containing keys as attribute names and values as corresponding attribute values.",
          "required" : true,
          "schema" : {
            "type" : "object",
            "description" : "A map containing keys as attribute names and values as corresponding attribute values.",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. If glossary partial update was successful.",
            "schema" : {
              "$ref" : "#/definitions/json_AtlasGlossary"
            }
          },
          "400" : {
            "description" : "If partial update parameters are invalid."
          },
          "404" : {
            "description" : "If glossary GUID is invalid."
          }
        }
      }
    },
    "/v2/glossary/{glossaryGuid}/terms" : {
      "get" : {
        "tags" : [ "GlossaryREST" ],
        "description" : "Gets terms belonging to a specific glossary.",
        "operationId" : "GlossaryREST_GetGlossaryTerms",
        "x-ms-examples" : {
          "GlossaryREST_GetGlossaryTerms" : {
            "$ref" : "./examples/GlossaryREST_GetGlossaryTerms.json"
          }
        },
        "parameters" : [ {
          "$ref" : "#/parameters/glossaryGuid"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. An array of glossary terms for the given glossary or an empty list.",
            "schema" : {
              "type" : "array",
              "description" : "An array of glossary terms for the given glossary or an empty list.",
              "items" : {
                "$ref" : "#/definitions/json_AtlasGlossaryTerm"
              }
            }
          },
          "404" : {
            "description" : "If glossary GUID is invalid."
          }
        }
      }
    },
    "/v2/glossary/{glossaryGuid}/terms/headers" : {
      "get" : {
        "tags" : [ "GlossaryREST" ],
        "description" : "Gets term headers belonging to a specific glossary.",
        "operationId" : "GlossaryREST_GetGlossaryTermHeaders",
        "x-ms-examples" : {
          "GlossaryREST_GetGlossaryTermHeaders" : {
            "$ref" : "./examples/GlossaryREST_GetGlossaryTermHeaders.json"
          }
        },
        "parameters" : [ {
          "$ref" : "#/parameters/glossaryGuid"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/offset"
        }, {
          "$ref" : "#/parameters/sort"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. An array of glossary terms for the given glossary or an empty list.",
            "schema" : {
              "type" : "array",
              "description" : "An array of glossary terms for the given glossary or an empty list.",
              "items" : {
                "$ref" : "#/definitions/json_AtlasRelatedTermHeader"
              }
            }
          },
          "404" : {
            "description" : "If glossary GUID is invalid."
          }
        }
      }
    },
    "/v2/glossary/name/{glossaryName}/terms" : {
      "get" : {
        "tags" : [ "GlossaryREST" ],
        "description" : "Gets terms by glossary name.",
        "operationId" : "GlossaryREST_GetTermsByGlossaryName",
        "x-ms-examples" : {
          "GlossaryREST_GetTermsByGlossaryName" : {
            "$ref" : "./examples/GlossaryREST_GetTermsByGlossaryName.json"
          }
        },
        "parameters" : [ {
          "$ref" : "#/parameters/glossaryName"
        }, {
          "$ref" : "#/parameters/limit"
        }, {
          "$ref" : "#/parameters/offset"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. An array of glossary terms for the given glossary or an empty list.",
            "schema" : {
              "type" : "array",
              "description" : "An array of glossary terms for the given glossary or an empty list.",
              "items" : {
                "$ref" : "#/definitions/json_AtlasGlossaryTerm"
              }
            }
          }
        }
      }
    },
    "/v2/search/basic" : {
      "get" : {
        "tags" : [ "DiscoveryREST" ],
        "description" : "Gets data for the specified basic query.",
        "operationId" : "DiscoveryREST_SearchUsingBasic",
        "x-ms-examples" : {
          "DiscoveryREST_SearchUsingBasic" : {
            "$ref" : "./examples/DiscoveryREST_SearchUsingBasic.json"
          }
        },
        "parameters" : [ {
          "$ref" : "#/parameters/searchClassification"
        }, {
          "$ref" : "#/parameters/searchExcludeDeletedEntities"
        }, {
          "$ref" : "#/parameters/searchLimit"
        }, {
          "$ref" : "#/parameters/searchOffset"
        }, {
          "$ref" : "#/parameters/searchQuery"
        }, {
          "$ref" : "#/parameters/searchTypeName"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. On successful basic lookup with some results, might return an empty list if execution succeeded\nwithout any results.",
            "schema" : {
              "$ref" : "#/definitions/json_AtlasSearchResult"
            }
          },
          "400" : {
            "description" : "Invalid query parameters."
          }
        }
      },
      "post" : {
        "tags" : [ "DiscoveryREST" ],
        "description" : "Gets attribute based search result for entities satisfying the search parameters.",
        "operationId" : "DiscoveryREST_SearchWithParameters",
        "x-ms-examples" : {
          "DiscoveryREST_SearchWithParameters" : {
            "$ref" : "./examples/DiscoveryREST_SearchWithParameters.json"
          }
        },
        "parameters" : [ {
          "in" : "body",
          "name" : "parameters",
          "description" : "The search parameter object.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/json_SearchParameters"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. On successful search result returned.",
            "schema" : {
              "$ref" : "#/definitions/json_AtlasSearchResult"
            }
          },
          "400" : {
            "description" : "Tag/Entity doesn't exist or tag/entity filter is present without tag/type name."
          }
        }
      }
    },
    "/v2/search/fulltext" : {
      "get" : {
        "tags" : [ "DiscoveryREST" ],
        "description" : "Gets data for the specified fulltext query.",
        "operationId" : "DiscoveryREST_SearchUsingFullText",
        "x-ms-examples" : {
          "DiscoveryREST_SearchUsingFullText" : {
            "$ref" : "./examples/DiscoveryREST_SearchUsingFullText.json"
          }
        },
        "parameters" : [ {
          "$ref" : "#/parameters/searchExcludeDeletedEntities"
        }, {
          "$ref" : "#/parameters/searchLimit"
        }, {
          "$ref" : "#/parameters/searchOffset"
        }, {
          "$ref" : "#/parameters/searchQuery"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. On successful fullText lookup with some results, might return an empty list if execution succeeded\nwithout any results.",
            "schema" : {
              "$ref" : "#/definitions/json_AtlasSearchResult"
            }
          },
          "400" : {
            "description" : "Invalid fulltext or query parameters."
          }
        }
      }
    },
    "/v2/search/advanced" : {
      "post" : {
        "tags" : [ "DiscoveryREST" ],
        "description" : "Gets data using advanced search by query string.",
        "operationId" : "DiscoveryREST_SearchAdvanced",
        "x-ms-examples" : {
          "DiscoveryREST_SearchAdvanced" : {
            "$ref" : "./examples/DiscoveryREST_SearchAdvanced.json"
          },
          "DiscoveryREST_SearchAdvanced_And" : {
            "$ref" : "./examples/DiscoveryREST_SearchAdvanced_And.json"
          },
          "DiscoveryREST_SearchAdvanced_Not" : {
            "$ref" : "./examples/DiscoveryREST_SearchAdvanced_Not.json"
          },
          "DiscoveryREST_SearchAdvanced_AndOrNested" : {
            "$ref" : "./examples/DiscoveryREST_SearchAdvanced_AndOrNested.json"
          },
          "DiscoveryREST_SearchAdvanced_Attribute" : {
            "$ref" : "./examples/DiscoveryREST_SearchAdvanced_Attribute.json"
          },
          "DiscoveryREST_SearchAdvanced_Classification" : {
            "$ref" : "./examples/DiscoveryREST_SearchAdvanced_Classification.json"
          },
          "DiscoveryREST_SearchAdvanced_ClassificationScope" : {
            "$ref" : "./examples/DiscoveryREST_SearchAdvanced_ClassificationScope.json"
          },
          "DiscoveryREST_SearchAdvanced_ClassificationScope_Not" : {
            "$ref" : "./examples/DiscoveryREST_SearchAdvanced_ClassificationScope_Not.json"
          }
        },
        "parameters" : [ {
          "in" : "body",
          "name" : "searchRequest",
          "description" : "An object specifying the search criteria.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/json_SearchRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. On successful lookup of the advanced search.",
            "schema" : {
              "$ref" : "#/definitions/json_AdvancedResult"
            }
          },
          "400" : {
            "description" : "Illegal argument exception thrown."
          }
        }
      }
    },
    "/v2/search/suggest" : {
      "post" : {
        "tags" : [ "DiscoveryREST" ],
        "description" : "Gets search suggestions by query string.",
        "operationId" : "DiscoveryREST_Suggest",
        "x-ms-examples" : {
          "DiscoveryREST_Suggest" : {
            "$ref" : "./examples/DiscoveryREST_Suggest.json"
          }
        },
        "parameters" : [ {
          "in" : "body",
          "name" : "suggestRequest",
          "description" : "An object specifying the suggest criteria.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/json_SuggestRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. On successful lookup of the suggestions.",
            "schema" : {
              "$ref" : "#/definitions/json_SuggestResult"
            }
          },
          "400" : {
            "description" : "Illegal argument exception thrown."
          }
        }
      }
    },
    "/v2/search/autocomplete" : {
      "get" : {
        "tags" : [ "DiscoveryREST" ],
        "description" : "Gets auto complete options.",
        "operationId" : "DiscoveryREST_AutoComplete",
        "x-ms-examples" : {
          "DiscoveryREST_AutoComplete" : {
            "$ref" : "./examples/DiscoveryREST_AutoComplete.json"
          }
        },
        "parameters" : [ {
          "$ref" : "#/parameters/searchKeyword"
        }, {
          "$ref" : "#/parameters/searchLimit"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. On successful lookup of the auto complete options.",
            "schema" : {
              "$ref" : "#/definitions/json_SuggestResult"
            }
          },
          "400" : {
            "description" : "Illegal argument exception thrown."
          }
        }
      }
    },
    "/v2/lineage/{guid}" : {
      "get" : {
        "tags" : [ "LineageREST" ],
        "description" : "Gets lineage info about the specified entity by GUID.",
        "operationId" : "LineageREST_GetLineageGraph",
        "x-ms-examples" : {
          "LineageREST_GetLineageGraph" : {
            "$ref" : "./examples/LineageREST_GetLineageGraph.json"
          }
        },
        "parameters" : [ {
          "$ref" : "#/parameters/guid"
        }, {
          "$ref" : "#/parameters/depth"
        }, {
          "$ref" : "#/parameters/direction"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. If Lineage exists for the given entity.",
            "schema" : {
              "$ref" : "#/definitions/json_AtlasLineageInfo"
            }
          },
          "400" : {
            "description" : "Bad query parameters."
          },
          "404" : {
            "description" : "If no lineage is found for the given entity."
          }
        }
      }
    },
    "/v2/relationship" : {
      "post" : {
        "tags" : [ "RelationshipREST" ],
        "description" : "Creates a new relationship between entities.",
        "operationId" : "RelationshipREST_Create",
        "x-ms-examples" : {
          "RelationshipREST_Create" : {
            "$ref" : "./examples/RelationshipREST_Create.json"
          }
        },
        "parameters" : [ {
          "in" : "body",
          "name" : "relationship",
          "description" : "The AtlasRelationship object containing the information for the relationship to be created.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/json_AtlasRelationship"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "OK. The relationship is created.",
            "schema" : {
              "$ref" : "#/definitions/json_AtlasRelationship"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "RelationshipREST" ],
        "description" : "Updates an existing relationship between entities.",
        "operationId" : "RelationshipREST_Update",
        "x-ms-examples" : {
          "RelationshipREST_Update" : {
            "$ref" : "./examples/RelationshipREST_Update.json"
          }
        },
        "parameters" : [ {
          "in" : "body",
          "name" : "relationship",
          "description" : "The AtlasRelationship object containing the information for the relationship to be created.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/json_AtlasRelationship"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "OK. The relationship is updated.",
            "schema" : {
              "$ref" : "#/definitions/json_AtlasRelationship"
            }
          }
        }
      }
    },
    "/v2/relationship/guid/{guid}" : {
      "get" : {
        "tags" : [ "RelationshipREST" ],
        "description" : "Gets relationship information between entities by its GUID.",
        "operationId" : "RelationshipREST_GetById2",
        "x-ms-examples" : {
          "RelationshipREST_GetById2" : {
            "$ref" : "./examples/RelationshipREST_GetById2.json"
          }
        },
        "parameters" : [ {
          "$ref" : "#/parameters/relationshipRestRelationshipGuid"
        }, {
          "$ref" : "#/parameters/extendedInfo"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK.",
            "schema" : {
              "$ref" : "#/definitions/json_AtlasRelationshipWithExtInfo"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "RelationshipREST" ],
        "description" : "Deletes a relationship between entities by its GUID.",
        "operationId" : "RelationshipREST_DeleteById",
        "x-ms-examples" : {
          "RelationshipREST_DeleteById" : {
            "$ref" : "./examples/RelationshipREST_DeleteById.json"
          }
        },
        "parameters" : [ {
          "$ref" : "#/parameters/relationshipRestRelationshipGuid"
        } ],
        "responses" : {
          "204" : {
            "description" : "OK. The relationship is deleted."
          }
        }
      }
    },
    "/v2/types/classificationdef/guid/{guid}" : {
      "get" : {
        "tags" : [ "TypesREST" ],
        "description" : "Gets the classification definition for the given GUID.",
        "operationId" : "TypesREST_GetClassificationDefByGuid",
        "x-ms-examples" : {
          "TypesREST_GetClassificationDefByGuid" : {
            "$ref" : "./examples/TypesREST_GetClassificationDefByGuid.json"
          }
        },
        "parameters" : [ {
          "$ref" : "#/parameters/typesRestClassificationGuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. On successful lookup of the the classification definition by its GUID.",
            "schema" : {
              "$ref" : "#/definitions/json_AtlasClassificationDef"
            }
          },
          "404" : {
            "description" : "On failed lookup for the given GUID."
          }
        }
      }
    },
    "/v2/types/classificationdef/name/{name}" : {
      "get" : {
        "tags" : [ "TypesREST" ],
        "description" : "Gets the classification definition by its name (unique).",
        "operationId" : "TypesREST_GetClassificationDefByName",
        "x-ms-examples" : {
          "TypesREST_GetClassificationDefByName" : {
            "$ref" : "./examples/TypesREST_GetClassificationDefByName.json"
          }
        },
        "parameters" : [ {
          "$ref" : "#/parameters/typesRestClassificationName"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. On successful lookup of the the classification definition by its name.",
            "schema" : {
              "$ref" : "#/definitions/json_AtlasClassificationDef"
            }
          },
          "404" : {
            "description" : "On failed lookup for the given name."
          }
        }
      }
    },
    "/v2/types/entitydef/guid/{guid}" : {
      "get" : {
        "tags" : [ "TypesREST" ],
        "description" : "Gets the Entity definition for the given GUID.",
        "operationId" : "TypesREST_GetEntityDefByGuid",
        "x-ms-examples" : {
          "TypesREST_GetEntityDefByGuid" : {
            "$ref" : "./examples/TypesREST_GetEntityDefByGuid.json"
          }
        },
        "parameters" : [ {
          "$ref" : "#/parameters/typesRestEntityGuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. On successful lookup of the the entity definition by its GUID.",
            "schema" : {
              "$ref" : "#/definitions/json_AtlasEntityDef"
            }
          },
          "404" : {
            "description" : "On Failed lookup for the given GUID."
          }
        }
      }
    },
    "/v2/types/entitydef/name/{name}" : {
      "get" : {
        "tags" : [ "TypesREST" ],
        "description" : "Gets the entity definition by its name (unique).",
        "operationId" : "TypesREST_GetEntityDefByName",
        "x-ms-examples" : {
          "TypesREST_GetEntityDefByName" : {
            "$ref" : "./examples/TypesREST_GetEntityDefByName.json"
          }
        },
        "parameters" : [ {
          "$ref" : "#/parameters/typesRestEntityName"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. On successful lookup of the the entity definition by its name.",
            "schema" : {
              "$ref" : "#/definitions/json_AtlasEntityDef"
            }
          },
          "404" : {
            "description" : "On failed lookup for the given name."
          }
        }
      }
    },
    "/v2/types/enumdef/guid/{guid}" : {
      "get" : {
        "tags" : [ "TypesREST" ],
        "description" : "Gets the enum definition for the given GUID.",
        "operationId" : "TypesREST_GetEnumDefByGuid",
        "x-ms-examples" : {
          "TypesREST_GetEnumDefByGuid" : {
            "$ref" : "./examples/TypesREST_GetEnumDefByGuid.json"
          }
        },
        "parameters" : [ {
          "$ref" : "#/parameters/typesRestEnumGuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. On successful lookup of the the enum definition by its GUID.",
            "schema" : {
              "$ref" : "#/definitions/json_AtlasEnumDef"
            }
          },
          "404" : {
            "description" : "On failed lookup for the given GUID."
          }
        }
      }
    },
    "/v2/types/enumdef/name/{name}" : {
      "get" : {
        "tags" : [ "TypesREST" ],
        "description" : "Gets the enum definition by its name (unique).",
        "operationId" : "TypesREST_GetEnumDefByName",
        "x-ms-examples" : {
          "TypesREST_GetEnumDefByName" : {
            "$ref" : "./examples/TypesREST_GetEnumDefByName.json"
          }
        },
        "parameters" : [ {
          "$ref" : "#/parameters/typesRestEnumName"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. On successful lookup of the the enum definition by its name.",
            "schema" : {
              "$ref" : "#/definitions/json_AtlasEnumDef"
            }
          },
          "404" : {
            "description" : "On failed lookup for the given name."
          }
        }
      }
    },
    "/v2/types/relationshipdef/guid/{guid}" : {
      "get" : {
        "tags" : [ "TypesREST" ],
        "description" : "Gets the relationship definition for the given GUID.",
        "operationId" : "TypesREST_GetRelationshipDefByGuid",
        "x-ms-examples" : {
          "TypesREST_GetRelationshipDefByGuid" : {
            "$ref" : "./examples/TypesREST_GetRelationshipDefByGuid.json"
          }
        },
        "parameters" : [ {
          "$ref" : "#/parameters/typesRestRelationshipGuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. On successful lookup of the the relationship definition by its GUID.",
            "schema" : {
              "$ref" : "#/definitions/json_AtlasRelationshipDef"
            }
          },
          "404" : {
            "description" : "On failed lookup for the given GUID."
          }
        }
      }
    },
    "/v2/types/relationshipdef/name/{name}" : {
      "get" : {
        "tags" : [ "TypesREST" ],
        "description" : "Gets the relationship definition by its name (unique).",
        "operationId" : "TypesREST_GetRelationshipDefByName",
        "x-ms-examples" : {
          "TypesREST_GetRelationshipDefByName" : {
            "$ref" : "./examples/TypesREST_GetRelationshipDefByName.json"
          }
        },
        "parameters" : [ {
          "$ref" : "#/parameters/typesRestRelationshipName"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. On successful lookup of the the relationship definition by its name.",
            "schema" : {
              "$ref" : "#/definitions/json_AtlasRelationshipDef"
            }
          },
          "404" : {
            "description" : "On failed lookup for the given name."
          }
        }
      }
    },
    "/v2/types/structdef/guid/{guid}" : {
      "get" : {
        "tags" : [ "TypesREST" ],
        "description" : "Gets the struct definition for the given GUID.",
        "operationId" : "TypesREST_GetStructDefByGuid",
        "x-ms-examples" : {
          "TypesREST_GetStructDefByGuid" : {
            "$ref" : "./examples/TypesREST_GetStructDefByGuid.json"
          }
        },
        "parameters" : [ {
          "$ref" : "#/parameters/typesRestStructGuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. On successful lookup of the the struct definition by its GUID.",
            "schema" : {
              "$ref" : "#/definitions/json_AtlasStructDef"
            }
          },
          "404" : {
            "description" : "On failed lookup for the given GUID."
          }
        }
      }
    },
    "/v2/types/structdef/name/{name}" : {
      "get" : {
        "tags" : [ "TypesREST" ],
        "description" : "Gets the struct definition by its name (unique).",
        "operationId" : "TypesREST_GetStructDefByName",
        "x-ms-examples" : {
          "TypesREST_GetStructDefByName" : {
            "$ref" : "./examples/TypesREST_GetStructDefByName.json"
          }
        },
        "parameters" : [ {
          "$ref" : "#/parameters/typesRestStructName"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. On successful lookup of the the struct definition by its name.",
            "schema" : {
              "$ref" : "#/definitions/json_AtlasStructDef"
            }
          },
          "404" : {
            "description" : "On failed lookup for the given name."
          }
        }
      }
    },
    "/v2/types/typedef/guid/{guid}" : {
      "get" : {
        "tags" : [ "TypesREST" ],
        "description" : "Gets the type definition for the given GUID.",
        "operationId" : "TypesREST_GetTypeDefByGuid",
        "x-ms-examples" : {
          "TypesREST_GetTypeDefByGuid" : {
            "$ref" : "./examples/TypesREST_GetTypeDefByGuid.json"
          }
        },
        "parameters" : [ {
          "$ref" : "#/parameters/typesRestTypeGuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. On successful lookup of the the type definition by its GUID.",
            "schema" : {
              "$ref" : "#/definitions/json_AtlasBaseTypeDef"
            }
          },
          "404" : {
            "description" : "On failed lookup for the given GUID."
          }
        }
      }
    },
    "/v2/types/typedef/name/{name}" : {
      "get" : {
        "tags" : [ "TypesREST" ],
        "description" : "Gets the type definition by its name (unique).",
        "operationId" : "TypesREST_GetTypeDefByName",
        "x-ms-examples" : {
          "TypesREST_GetTypeDefByName" : {
            "$ref" : "./examples/TypesREST_GetTypeDefByName.json"
          }
        },
        "parameters" : [ {
          "$ref" : "#/parameters/typesRestTypeName"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. On successful lookup of the the type definition by its name.",
            "schema" : {
              "$ref" : "#/definitions/json_AtlasBaseTypeDef"
            }
          },
          "404" : {
            "description" : "On failed lookup for the given name."
          }
        }
      }
    },
    "/v2/types/typedefs" : {
      "get" : {
        "tags" : [ "TypesREST" ],
        "description" : "Gets all type definitions in Atlas in bulk.",
        "operationId" : "TypesREST_GetAllTypeDefs",
        "x-ms-examples" : {
          "TypesREST_GetAllTypeDefs" : {
            "$ref" : "./examples/TypesREST_GetAllTypeDefs.json"
          }
        },
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK. AtlasTypesDef with type definitions matching the search criteria or else returns empty list of type definitions.",
            "schema" : {
              "$ref" : "#/definitions/json_AtlasTypesDef"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "TypesREST" ],
        "description" : "Creates all atlas type definitions in bulk, only new definitions will be created.\nAny changes to the existing definitions will be discarded.",
        "operationId" : "TypesREST_CreateAtlasTypeDefs",
        "x-ms-examples" : {
          "TypesREST_CreateAtlasTypeDefs" : {
            "$ref" : "./examples/TypesREST_CreateAtlasTypeDefs.json"
          }
        },
        "parameters" : [ {
          "in" : "body",
          "name" : "typesDef",
          "description" : "A composite wrapper object with corresponding lists of the type definition.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/json_AtlasTypesDef"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. On successful update of requested type definitions.",
            "schema" : {
              "$ref" : "#/definitions/json_AtlasTypesDef"
            }
          },
          "400" : {
            "description" : "On validation failure for any type definitions."
          }
        }
      },
      "put" : {
        "tags" : [ "TypesREST" ],
        "description" : "Updates all types in bulk, changes detected in the type definitions would be persisted.",
        "operationId" : "TypesREST_UpdateAtlasTypeDefs",
        "x-ms-examples" : {
          "TypesREST_UpdateAtlasTypeDefs" : {
            "$ref" : "./examples/TypesREST_UpdateAtlasTypeDefs.json"
          }
        },
        "parameters" : [ {
          "in" : "body",
          "name" : "typesDef",
          "description" : "A composite object that captures all type definition changes.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/json_AtlasTypesDef"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. On successful update of requested type definitions.",
            "schema" : {
              "$ref" : "#/definitions/json_AtlasTypesDef"
            }
          },
          "400" : {
            "description" : "On validation failure for any type definitions."
          }
        }
      },
      "delete" : {
        "tags" : [ "TypesREST" ],
        "description" : "Deletes API for all types in bulk.",
        "operationId" : "TypesREST_DeleteAtlasTypeDefs",
        "x-ms-examples" : {
          "TypesREST_DeleteAtlasTypeDefs" : {
            "$ref" : "./examples/TypesREST_DeleteAtlasTypeDefs.json"
          }
        },
        "parameters" : [ {
          "in" : "body",
          "name" : "typesDef",
          "description" : "A composite object that captures all types to be deleted",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/json_AtlasTypesDef"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "OK. On successful deletion of the requested type definitions."
          },
          "400" : {
            "description" : "On validation failure for any type definitions."
          }
        }
      }
    },
    "/v2/types/typedefs/headers" : {
      "get" : {
        "tags" : [ "TypesREST" ],
        "description" : "Lists all type definitions returned as a list of minimal information header.",
        "operationId" : "TypesREST_GetTypeDefHeaders",
        "x-ms-examples" : {
          "TypesREST_GetTypeDefHeaders" : {
            "$ref" : "./examples/TypesREST_GetTypeDefHeaders.json"
          }
        },
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "An array of AtlasTypeDefHeader matching the search criteria\nor an empty list if no match.",
            "schema" : {
              "type" : "array",
              "description" : "An array of AtlasTypeDefHeader matching the search criteria\nor an empty list if no match.",
              "items" : {
                "$ref" : "#/definitions/json_AtlasTypeDefHeader"
              }
            }
          }
        }
      }
    },
    "/access/admin/{userId}" : {
      "put" : {
        "tags" : [ "AccessControlREST" ],
        "description" : "Creates an admin user.",
        "operationId" : "AccessControlREST_AddAdmin",
        "x-ms-examples" : {
          "AccessControlREST_AddAdmin" : {
            "$ref" : "./examples/AccessControlREST_AddAdmin.json"
          }
        },
        "parameters" : [ {
          "$ref" : "#/parameters/userId"
        } ],
        "responses" : {
          "204" : {
            "description" : "OK. On successful adding of the admin user."
          }
        }
      },
      "delete" : {
        "tags" : [ "AccessControlREST" ],
        "description" : "Deletes an admin user.",
        "operationId" : "AccessControlREST_DeleteAdmin",
        "x-ms-examples" : {
          "AccessControlREST_DeleteAdmin" : {
            "$ref" : "./examples/AccessControlREST_DeleteAdmin.json"
          }
        },
        "parameters" : [ {
          "$ref" : "#/parameters/userId"
        } ],
        "responses" : {
          "204" : {
            "description" : "OK. On successful deletion of the admin user."
          }
        }
      }
    },
    "/access/admins" : {
      "get" : {
        "tags" : [ "AccessControlREST" ],
        "description" : "Lists admin users.",
        "operationId" : "AccessControlREST_GetAdmins",
        "x-ms-examples" : {
          "AccessControlREST_GetAdmins" : {
            "$ref" : "./examples/AccessControlREST_GetAdmins.json"
          }
        },
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK. On successful lookup of the admin users.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/json_AzureCatalogUser"
              }
            }
          }
        }
      }
    }
  },
  "definitions" : {
    "json_AtlasAttributeDef" : {
      "type" : "object",
      "properties" : {
        "cardinality" : {
          "$ref" : "#/definitions/json_Cardinality"
        },
        "constraints" : {
          "type" : "array",
          "description" : "An array of constraints.",
          "items" : {
            "$ref" : "#/definitions/json_AtlasConstraintDef"
          }
        },
        "defaultValue" : {
          "type" : "string",
          "description" : "The default value of the attribute."
        },
        "description" : {
          "type" : "string",
          "description" : "The description of the attribute."
        },
        "includeInNotification" : {
          "type" : "boolean",
          "description" : "Determines if it is included in notification."
        },
        "isIndexable" : {
          "type" : "boolean",
          "description" : "Determines if it is indexable."
        },
        "isOptional" : {
          "type" : "boolean",
          "description" : "Determines if it is optional."
        },
        "isUnique" : {
          "type" : "boolean",
          "description" : "Determines if it unique."
        },
        "name" : {
          "type" : "string",
          "description" : "The name of the attribute."
        },
        "options" : {
          "type" : "object",
          "description" : "The options for the attribute.",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "typeName" : {
          "type" : "string",
          "description" : "The name of the type."
        },
        "valuesMaxCount" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The maximum count of the values."
        },
        "valuesMinCount" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The minimum count of the values."
        }
      },
      "title" : "AtlasAttributeDef",
      "description" : "class that captures details of a struct-attribute.",
      "example" : {
        "cardinality" : "LIST",
        "constraints" : [ {
          "params" : {
            "property1" : { },
            "property2" : { }
          },
          "type" : "..."
        }, {
          "params" : {
            "property1" : { },
            "property2" : { }
          },
          "type" : "..."
        } ],
        "defaultValue" : "...",
        "description" : "...",
        "includeInNotification" : true,
        "isIndexable" : true,
        "isOptional" : true,
        "isUnique" : true,
        "name" : "...",
        "options" : {
          "property1" : "...",
          "property2" : "..."
        },
        "typeName" : "...",
        "valuesMaxCount" : 12345,
        "valuesMinCount" : 12345
      }
    },
    "json_AtlasBaseModelObject" : {
      "type" : "object",
      "properties" : {
        "guid" : {
          "type" : "string",
          "description" : "The GUID of the object."
        }
      },
      "title" : "AtlasBaseModelObject",
      "description" : "The base model object.",
      "example" : {
        "guid" : "..."
      }
    },
    "json_AtlasBaseTypeDef" : {
      "type" : "object",
      "properties" : {
        "category" : {
          "$ref" : "#/definitions/json_TypeCategory"
        },
        "createTime" : {
          "type" : "number",
          "description" : "The created time of the record."
        },
        "createdBy" : {
          "type" : "string",
          "description" : "The user who created the record."
        },
        "dateFormatter" : {
          "$ref" : "#/definitions/json_DateFormat"
        },
        "description" : {
          "type" : "string",
          "description" : "The description of the type definition."
        },
        "guid" : {
          "type" : "string",
          "description" : "The GUID of the type definition."
        },
        "name" : {
          "type" : "string",
          "description" : "The name of the type definition."
        },
        "options" : {
          "type" : "object",
          "description" : "The options for the type definition.",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "typeVersion" : {
          "type" : "string",
          "description" : "The version of the type."
        },
        "updateTime" : {
          "type" : "number",
          "description" : "The update time of the record."
        },
        "updatedBy" : {
          "type" : "string",
          "description" : "The user who updated the record."
        },
        "version" : {
          "type" : "number",
          "description" : "The version of the record."
        }
      },
      "title" : "AtlasBaseTypeDef",
      "description" : "Base class that captures common-attributes for all Atlas types.",
      "example" : {
        "category" : "CLASSIFICATION",
        "createTime" : 12345,
        "createdBy" : "...",
        "dateFormatter" : {
          "availableLocales" : [ "...", "..." ],
          "calendar" : 12345,
          "dateInstance" : { },
          "dateTimeInstance" : { },
          "instance" : { },
          "lenient" : true,
          "numberFormat" : {
            "availableLocales" : [ "...", "..." ],
            "currency" : "...",
            "currencyInstance" : { },
            "groupingUsed" : true,
            "instance" : { },
            "integerInstance" : { },
            "maximumFractionDigits" : 12345,
            "maximumIntegerDigits" : 12345,
            "minimumFractionDigits" : 12345,
            "minimumIntegerDigits" : 12345,
            "numberInstance" : { },
            "parseIntegerOnly" : true,
            "percentInstance" : { },
            "roundingMode" : "HALF_EVEN"
          },
          "timeInstance" : { },
          "timeZone" : {
            "DSTSavings" : 12345,
            "ID" : "...",
            "availableIDs" : [ "...", "..." ],
            "default" : { },
            "displayName" : "...",
            "rawOffset" : 12345
          }
        },
        "description" : "...",
        "guid" : "...",
        "name" : "...",
        "options" : {
          "property1" : "...",
          "property2" : "..."
        },
        "typeVersion" : "...",
        "updateTime" : 12345,
        "updatedBy" : "...",
        "version" : 12345
      }
    },
    "json_AtlasClassification" : {
      "title" : "AtlasClassification",
      "allOf" : [ {
        "$ref" : "#/definitions/json_AtlasStruct"
      }, {
        "properties" : {
          "entityGuid" : {
            "type" : "string",
            "description" : "The GUID of the entity."
          },
          "entityStatus" : {
            "$ref" : "#/definitions/json_Status"
          },
          "propagate" : {
            "type" : "boolean",
            "description" : "Determines if the classification will be propagated."
          },
          "removePropagationsOnEntityDelete" : {
            "type" : "boolean",
            "description" : "Determines if propagations will be removed on entity deletion."
          },
          "validityPeriods" : {
            "type" : "array",
            "description" : "An array of time boundaries indicating validity periods.",
            "items" : {
              "$ref" : "#/definitions/json_TimeBoundary"
            }
          }
        }
      } ],
      "description" : "An instance of a classification; it doesn't have an identity, this object exists only when associated with an entity.",
      "example" : {
        "entityGuid" : "...",
        "entityStatus" : "DELETED",
        "propagate" : true,
        "removePropagationsOnEntityDelete" : true,
        "validityPeriods" : [ {
          "endTime" : "...",
          "startTime" : "...",
          "timeZone" : "..."
        }, {
          "endTime" : "...",
          "startTime" : "...",
          "timeZone" : "..."
        } ],
        "attributes" : {
          "property1" : { },
          "property2" : { }
        },
        "typeName" : "..."
      }
    },
    "json_AtlasClassificationDef" : {
      "title" : "AtlasClassificationDef",
      "allOf" : [ {
        "$ref" : "#/definitions/json_AtlasStructDef"
      }, {
        "properties" : {
          "entityTypes" : {
            "type" : "array",
            "description" : "Specifying a list of entityType names in the classificationDef, ensures that classifications can\nonly be applied to those entityTypes.\n<ul>\n<li>Any subtypes of the entity types inherit the restriction</li>\n<li>Any classificationDef subtypes inherit the parents entityTypes restrictions</li>\n<li>Any classificationDef subtypes can further restrict the parents entityTypes restrictions by specifying a subset of the entityTypes</li>\n<li>An empty entityTypes list when there are no parent restrictions means there are no restrictions</li>\n<li>An empty entityTypes list when there are parent restrictions means that the subtype picks up the parents restrictions</li>\n<li>If a list of entityTypes are supplied, where one inherits from another, this will be rejected. This should encourage cleaner classificationsDefs</li>\n</ul>",
            "items" : {
              "type" : "string"
            }
          },
          "subTypes" : {
            "type" : "array",
            "description" : "An array of sub types.",
            "items" : {
              "type" : "string"
            }
          },
          "superTypes" : {
            "type" : "array",
            "description" : "An array of super types.",
            "items" : {
              "type" : "string"
            }
          }
        }
      } ],
      "description" : "class that captures details of a classification-type.",
      "example" : {
        "entityTypes" : [ "...", "..." ],
        "subTypes" : [ "...", "..." ],
        "superTypes" : [ "...", "..." ],
        "attributeDefs" : [ {
          "cardinality" : "LIST",
          "constraints" : [ {
            "params" : {
              "property1" : { },
              "property2" : { }
            },
            "type" : "..."
          }, {
            "params" : {
              "property1" : { },
              "property2" : { }
            },
            "type" : "..."
          } ],
          "defaultValue" : "...",
          "description" : "...",
          "includeInNotification" : true,
          "isIndexable" : true,
          "isOptional" : true,
          "isUnique" : true,
          "name" : "...",
          "options" : {
            "property1" : "...",
            "property2" : "..."
          },
          "typeName" : "...",
          "valuesMaxCount" : 12345,
          "valuesMinCount" : 12345
        }, {
          "cardinality" : "SET",
          "constraints" : [ {
            "params" : {
              "property1" : { },
              "property2" : { }
            },
            "type" : "..."
          }, {
            "params" : {
              "property1" : { },
              "property2" : { }
            },
            "type" : "..."
          } ],
          "defaultValue" : "...",
          "description" : "...",
          "includeInNotification" : true,
          "isIndexable" : true,
          "isOptional" : true,
          "isUnique" : true,
          "name" : "...",
          "options" : {
            "property1" : "...",
            "property2" : "..."
          },
          "typeName" : "...",
          "valuesMaxCount" : 12345,
          "valuesMinCount" : 12345
        } ],
        "category" : "ENUM",
        "createTime" : 12345,
        "createdBy" : "...",
        "dateFormatter" : {
          "availableLocales" : [ "...", "..." ],
          "calendar" : 12345,
          "dateInstance" : { },
          "dateTimeInstance" : { },
          "instance" : { },
          "lenient" : true,
          "numberFormat" : {
            "availableLocales" : [ "...", "..." ],
            "currency" : "...",
            "currencyInstance" : { },
            "groupingUsed" : true,
            "instance" : { },
            "integerInstance" : { },
            "maximumFractionDigits" : 12345,
            "maximumIntegerDigits" : 12345,
            "minimumFractionDigits" : 12345,
            "minimumIntegerDigits" : 12345,
            "numberInstance" : { },
            "parseIntegerOnly" : true,
            "percentInstance" : { },
            "roundingMode" : "DOWN"
          },
          "timeInstance" : { },
          "timeZone" : {
            "DSTSavings" : 12345,
            "ID" : "...",
            "availableIDs" : [ "...", "..." ],
            "default" : { },
            "displayName" : "...",
            "rawOffset" : 12345
          }
        },
        "description" : "...",
        "guid" : "...",
        "name" : "...",
        "options" : {
          "property1" : "...",
          "property2" : "..."
        },
        "typeVersion" : "...",
        "updateTime" : 12345,
        "updatedBy" : "...",
        "version" : 12345
      }
    },
    "json_AtlasClassifications" : {
      "title" : "AtlasClassifications",
      "allOf" : [ {
        "$ref" : "#/definitions/json_PList"
      }, { } ],
      "description" : "REST serialization friendly list.",
      "example" : {
        "list" : [ { }, { } ],
        "pageSize" : 12345,
        "sortBy" : "...",
        "sortType" : "NONE",
        "startIndex" : 12345,
        "totalCount" : 12345
      }
    },
    "json_AtlasConstraintDef" : {
      "type" : "object",
      "properties" : {
        "params" : {
          "type" : "object",
          "description" : "The parameters of the constraint definition.",
          "additionalProperties" : {
            "type" : "object",
            "properties" : { }
          }
        },
        "type" : {
          "type" : "string",
          "description" : "The type of the constraint."
        }
      },
      "title" : "AtlasConstraintDef",
      "description" : "class that captures details of a constraint.",
      "example" : {
        "params" : {
          "property1" : { },
          "property2" : { }
        },
        "type" : "..."
      }
    },
    "json_AtlasEntitiesWithExtInfo" : {
      "title" : "AtlasEntitiesWithExtInfo",
      "allOf" : [ {
        "$ref" : "#/definitions/json_AtlasEntityExtInfo"
      }, {
        "properties" : {
          "entities" : {
            "type" : "array",
            "description" : "An array of entities.",
            "items" : {
              "$ref" : "#/definitions/json_AtlasEntity"
            }
          }
        }
      } ],
      "description" : "An instance of an entity along with extended info - like hive_table, hive_database.",
      "example" : {
        "entities" : [ {
          "classifications" : [ {
            "entityGuid" : "...",
            "entityStatus" : "ACTIVE",
            "propagate" : true,
            "removePropagationsOnEntityDelete" : true,
            "validityPeriods" : [ { }, { } ],
            "attributes" : {
              "property1" : { },
              "property2" : { }
            },
            "typeName" : "..."
          }, {
            "entityGuid" : "...",
            "entityStatus" : "ACTIVE",
            "propagate" : true,
            "removePropagationsOnEntityDelete" : true,
            "validityPeriods" : [ { }, { } ],
            "attributes" : {
              "property1" : { },
              "property2" : { }
            },
            "typeName" : "..."
          } ],
          "createTime" : 12345,
          "createdBy" : "...",
          "guid" : "...",
          "homeId" : "...",
          "meanings" : [ {
            "confidence" : 12345,
            "createdBy" : "...",
            "description" : "...",
            "displayText" : "...",
            "expression" : "...",
            "relationGuid" : "...",
            "source" : "...",
            "status" : "VALIDATED",
            "steward" : "...",
            "termGuid" : "..."
          }, {
            "confidence" : 12345,
            "createdBy" : "...",
            "description" : "...",
            "displayText" : "...",
            "expression" : "...",
            "relationGuid" : "...",
            "source" : "...",
            "status" : "VALIDATED",
            "steward" : "...",
            "termGuid" : "..."
          } ],
          "proxy" : true,
          "relationshipAttributes" : {
            "property1" : { },
            "property2" : { }
          },
          "status" : "DELETED",
          "updateTime" : 12345,
          "updatedBy" : "...",
          "version" : 12345,
          "attributes" : {
            "property1" : { },
            "property2" : { }
          },
          "typeName" : "..."
        }, {
          "classifications" : [ {
            "entityGuid" : "...",
            "entityStatus" : "ACTIVE",
            "propagate" : true,
            "removePropagationsOnEntityDelete" : true,
            "validityPeriods" : [ { }, { } ],
            "attributes" : {
              "property1" : { },
              "property2" : { }
            },
            "typeName" : "..."
          }, {
            "entityGuid" : "...",
            "entityStatus" : "ACTIVE",
            "propagate" : true,
            "removePropagationsOnEntityDelete" : true,
            "validityPeriods" : [ { }, { } ],
            "attributes" : {
              "property1" : { },
              "property2" : { }
            },
            "typeName" : "..."
          } ],
          "createTime" : 12345,
          "createdBy" : "...",
          "guid" : "...",
          "homeId" : "...",
          "meanings" : [ {
            "confidence" : 12345,
            "createdBy" : "...",
            "description" : "...",
            "displayText" : "...",
            "expression" : "...",
            "relationGuid" : "...",
            "source" : "...",
            "status" : "OTHER",
            "steward" : "...",
            "termGuid" : "..."
          }, {
            "confidence" : 12345,
            "createdBy" : "...",
            "description" : "...",
            "displayText" : "...",
            "expression" : "...",
            "relationGuid" : "...",
            "source" : "...",
            "status" : "DISCOVERED",
            "steward" : "...",
            "termGuid" : "..."
          } ],
          "proxy" : true,
          "relationshipAttributes" : {
            "property1" : { },
            "property2" : { }
          },
          "status" : "DELETED",
          "updateTime" : 12345,
          "updatedBy" : "...",
          "version" : 12345,
          "attributes" : {
            "property1" : { },
            "property2" : { }
          },
          "typeName" : "..."
        } ],
        "referredEntities" : {
          "property1" : {
            "classifications" : [ {
              "entityGuid" : "...",
              "entityStatus" : "DELETED",
              "propagate" : true,
              "removePropagationsOnEntityDelete" : true,
              "validityPeriods" : [ { }, { } ],
              "attributes" : {
                "property1" : { },
                "property2" : { }
              },
              "typeName" : "..."
            }, {
              "entityGuid" : "...",
              "entityStatus" : "ACTIVE",
              "propagate" : true,
              "removePropagationsOnEntityDelete" : true,
              "validityPeriods" : [ { }, { } ],
              "attributes" : {
                "property1" : { },
                "property2" : { }
              },
              "typeName" : "..."
            } ],
            "createTime" : 12345,
            "createdBy" : "...",
            "guid" : "...",
            "homeId" : "...",
            "meanings" : [ {
              "confidence" : 12345,
              "createdBy" : "...",
              "description" : "...",
              "displayText" : "...",
              "expression" : "...",
              "relationGuid" : "...",
              "source" : "...",
              "status" : "OBSOLETE",
              "steward" : "...",
              "termGuid" : "..."
            }, {
              "confidence" : 12345,
              "createdBy" : "...",
              "description" : "...",
              "displayText" : "...",
              "expression" : "...",
              "relationGuid" : "...",
              "source" : "...",
              "status" : "OBSOLETE",
              "steward" : "...",
              "termGuid" : "..."
            } ],
            "proxy" : true,
            "relationshipAttributes" : {
              "property1" : { },
              "property2" : { }
            },
            "status" : "ACTIVE",
            "updateTime" : 12345,
            "updatedBy" : "...",
            "version" : 12345,
            "attributes" : {
              "property1" : { },
              "property2" : { }
            },
            "typeName" : "..."
          },
          "property2" : {
            "classifications" : [ {
              "entityGuid" : "...",
              "entityStatus" : "DELETED",
              "propagate" : true,
              "removePropagationsOnEntityDelete" : true,
              "validityPeriods" : [ { }, { } ],
              "attributes" : {
                "property1" : { },
                "property2" : { }
              },
              "typeName" : "..."
            }, {
              "entityGuid" : "...",
              "entityStatus" : "ACTIVE",
              "propagate" : true,
              "removePropagationsOnEntityDelete" : true,
              "validityPeriods" : [ { }, { } ],
              "attributes" : {
                "property1" : { },
                "property2" : { }
              },
              "typeName" : "..."
            } ],
            "createTime" : 12345,
            "createdBy" : "...",
            "guid" : "...",
            "homeId" : "...",
            "meanings" : [ {
              "confidence" : 12345,
              "createdBy" : "...",
              "description" : "...",
              "displayText" : "...",
              "expression" : "...",
              "relationGuid" : "...",
              "source" : "...",
              "status" : "DEPRECATED",
              "steward" : "...",
              "termGuid" : "..."
            }, {
              "confidence" : 12345,
              "createdBy" : "...",
              "description" : "...",
              "displayText" : "...",
              "expression" : "...",
              "relationGuid" : "...",
              "source" : "...",
              "status" : "VALIDATED",
              "steward" : "...",
              "termGuid" : "..."
            } ],
            "proxy" : true,
            "relationshipAttributes" : {
              "property1" : { },
              "property2" : { }
            },
            "status" : "DELETED",
            "updateTime" : 12345,
            "updatedBy" : "...",
            "version" : 12345,
            "attributes" : {
              "property1" : { },
              "property2" : { }
            },
            "typeName" : "..."
          }
        }
      }
    },
    "json_AtlasEntity" : {
      "title" : "AtlasEntity",
      "allOf" : [ {
        "$ref" : "#/definitions/json_AtlasStruct"
      }, {
        "properties" : {
          "classifications" : {
            "type" : "array",
            "description" : "An array of classifications.",
            "items" : {
              "$ref" : "#/definitions/json_AtlasClassification"
            }
          },
          "createTime" : {
            "type" : "number",
            "description" : "The created time of the record."
          },
          "createdBy" : {
            "type" : "string",
            "description" : "The user who created the record."
          },
          "guid" : {
            "type" : "string",
            "description" : "The GUID of the entity."
          },
          "homeId" : {
            "type" : "string",
            "description" : "The home ID of the entity."
          },
          "meanings" : {
            "type" : "array",
            "description" : "An array of term assignment headers indicating the meanings of the entity.",
            "items" : {
              "$ref" : "#/definitions/json_AtlasTermAssignmentHeader"
            }
          },
          "proxy" : {
            "type" : "boolean",
            "description" : "Determines if there's a proxy."
          },
          "relationshipAttributes" : {
            "type" : "object",
            "description" : "The attributes of relationship.",
            "additionalProperties" : {
              "type" : "object",
              "properties" : { }
            }
          },
          "status" : {
            "$ref" : "#/definitions/json_Status"
          },
          "updateTime" : {
            "type" : "number",
            "description" : "The update time of the record."
          },
          "updatedBy" : {
            "type" : "string",
            "description" : "The user who updated the record."
          },
          "version" : {
            "type" : "number",
            "description" : "The version of the entity."
          }
        }
      } ],
      "description" : "An instance of an entity - like hive_table, hive_database.",
      "example" : {
        "classifications" : [ {
          "entityGuid" : "...",
          "entityStatus" : "ACTIVE",
          "propagate" : true,
          "removePropagationsOnEntityDelete" : true,
          "validityPeriods" : [ {
            "endTime" : "...",
            "startTime" : "...",
            "timeZone" : "..."
          }, {
            "endTime" : "...",
            "startTime" : "...",
            "timeZone" : "..."
          } ],
          "attributes" : {
            "property1" : { },
            "property2" : { }
          },
          "typeName" : "..."
        }, {
          "entityGuid" : "...",
          "entityStatus" : "DELETED",
          "propagate" : true,
          "removePropagationsOnEntityDelete" : true,
          "validityPeriods" : [ {
            "endTime" : "...",
            "startTime" : "...",
            "timeZone" : "..."
          }, {
            "endTime" : "...",
            "startTime" : "...",
            "timeZone" : "..."
          } ],
          "attributes" : {
            "property1" : { },
            "property2" : { }
          },
          "typeName" : "..."
        } ],
        "createTime" : 12345,
        "createdBy" : "...",
        "guid" : "...",
        "homeId" : "...",
        "meanings" : [ {
          "confidence" : 12345,
          "createdBy" : "...",
          "description" : "...",
          "displayText" : "...",
          "expression" : "...",
          "relationGuid" : "...",
          "source" : "...",
          "status" : "OBSOLETE",
          "steward" : "...",
          "termGuid" : "..."
        }, {
          "confidence" : 12345,
          "createdBy" : "...",
          "description" : "...",
          "displayText" : "...",
          "expression" : "...",
          "relationGuid" : "...",
          "source" : "...",
          "status" : "OTHER",
          "steward" : "...",
          "termGuid" : "..."
        } ],
        "proxy" : true,
        "relationshipAttributes" : {
          "property1" : { },
          "property2" : { }
        },
        "status" : "ACTIVE",
        "updateTime" : 12345,
        "updatedBy" : "...",
        "version" : 12345,
        "attributes" : {
          "property1" : { },
          "property2" : { }
        },
        "typeName" : "..."
      }
    },
    "json_AtlasEntityDef" : {
      "title" : "AtlasEntityDef",
      "allOf" : [ {
        "$ref" : "#/definitions/json_AtlasStructDef"
      }, {
        "properties" : {
          "subTypes" : {
            "type" : "array",
            "description" : "An array of sub types.",
            "items" : {
              "type" : "string"
            }
          },
          "superTypes" : {
            "type" : "array",
            "description" : "An array of super types.",
            "items" : {
              "type" : "string"
            }
          }
        }
      } ],
      "description" : "class that captures details of a entity-type.",
      "example" : {
        "subTypes" : [ "...", "..." ],
        "superTypes" : [ "...", "..." ],
        "attributeDefs" : [ {
          "cardinality" : "LIST",
          "constraints" : [ {
            "params" : {
              "property1" : { },
              "property2" : { }
            },
            "type" : "..."
          }, {
            "params" : {
              "property1" : { },
              "property2" : { }
            },
            "type" : "..."
          } ],
          "defaultValue" : "...",
          "description" : "...",
          "includeInNotification" : true,
          "isIndexable" : true,
          "isOptional" : true,
          "isUnique" : true,
          "name" : "...",
          "options" : {
            "property1" : "...",
            "property2" : "..."
          },
          "typeName" : "...",
          "valuesMaxCount" : 12345,
          "valuesMinCount" : 12345
        }, {
          "cardinality" : "SET",
          "constraints" : [ {
            "params" : {
              "property1" : { },
              "property2" : { }
            },
            "type" : "..."
          }, {
            "params" : {
              "property1" : { },
              "property2" : { }
            },
            "type" : "..."
          } ],
          "defaultValue" : "...",
          "description" : "...",
          "includeInNotification" : true,
          "isIndexable" : true,
          "isOptional" : true,
          "isUnique" : true,
          "name" : "...",
          "options" : {
            "property1" : "...",
            "property2" : "..."
          },
          "typeName" : "...",
          "valuesMaxCount" : 12345,
          "valuesMinCount" : 12345
        } ],
        "category" : "STRUCT",
        "createTime" : 12345,
        "createdBy" : "...",
        "dateFormatter" : {
          "availableLocales" : [ "...", "..." ],
          "calendar" : 12345,
          "dateInstance" : { },
          "dateTimeInstance" : { },
          "instance" : { },
          "lenient" : true,
          "numberFormat" : {
            "availableLocales" : [ "...", "..." ],
            "currency" : "...",
            "currencyInstance" : { },
            "groupingUsed" : true,
            "instance" : { },
            "integerInstance" : { },
            "maximumFractionDigits" : 12345,
            "maximumIntegerDigits" : 12345,
            "minimumFractionDigits" : 12345,
            "minimumIntegerDigits" : 12345,
            "numberInstance" : { },
            "parseIntegerOnly" : true,
            "percentInstance" : { },
            "roundingMode" : "UNNECESSARY"
          },
          "timeInstance" : { },
          "timeZone" : {
            "DSTSavings" : 12345,
            "ID" : "...",
            "availableIDs" : [ "...", "..." ],
            "default" : { },
            "displayName" : "...",
            "rawOffset" : 12345
          }
        },
        "description" : "...",
        "guid" : "...",
        "name" : "...",
        "options" : {
          "property1" : "...",
          "property2" : "..."
        },
        "typeVersion" : "...",
        "updateTime" : 12345,
        "updatedBy" : "...",
        "version" : 12345
      }
    },
    "json_AtlasEntityExtInfo" : {
      "type" : "object",
      "properties" : {
        "referredEntities" : {
          "type" : "object",
          "description" : "The referred entities.",
          "additionalProperties" : {
            "$ref" : "#/definitions/json_AtlasEntity"
          }
        }
      },
      "title" : "AtlasEntityExtInfo",
      "description" : "An instance of an entity along with extended info - like hive_table, hive_database.",
      "example" : {
        "referredEntities" : {
          "property1" : {
            "classifications" : [ {
              "entityGuid" : "...",
              "entityStatus" : "ACTIVE",
              "propagate" : true,
              "removePropagationsOnEntityDelete" : true,
              "validityPeriods" : [ { }, { } ],
              "attributes" : {
                "property1" : { },
                "property2" : { }
              },
              "typeName" : "..."
            }, {
              "entityGuid" : "...",
              "entityStatus" : "DELETED",
              "propagate" : true,
              "removePropagationsOnEntityDelete" : true,
              "validityPeriods" : [ { }, { } ],
              "attributes" : {
                "property1" : { },
                "property2" : { }
              },
              "typeName" : "..."
            } ],
            "createTime" : 12345,
            "createdBy" : "...",
            "guid" : "...",
            "homeId" : "...",
            "meanings" : [ {
              "confidence" : 12345,
              "createdBy" : "...",
              "description" : "...",
              "displayText" : "...",
              "expression" : "...",
              "relationGuid" : "...",
              "source" : "...",
              "status" : "PROPOSED",
              "steward" : "...",
              "termGuid" : "..."
            }, {
              "confidence" : 12345,
              "createdBy" : "...",
              "description" : "...",
              "displayText" : "...",
              "expression" : "...",
              "relationGuid" : "...",
              "source" : "...",
              "status" : "PROPOSED",
              "steward" : "...",
              "termGuid" : "..."
            } ],
            "proxy" : true,
            "relationshipAttributes" : {
              "property1" : { },
              "property2" : { }
            },
            "status" : "DELETED",
            "updateTime" : 12345,
            "updatedBy" : "...",
            "version" : 12345,
            "attributes" : {
              "property1" : { },
              "property2" : { }
            },
            "typeName" : "..."
          },
          "property2" : {
            "classifications" : [ {
              "entityGuid" : "...",
              "entityStatus" : "DELETED",
              "propagate" : true,
              "removePropagationsOnEntityDelete" : true,
              "validityPeriods" : [ { }, { } ],
              "attributes" : {
                "property1" : { },
                "property2" : { }
              },
              "typeName" : "..."
            }, {
              "entityGuid" : "...",
              "entityStatus" : "ACTIVE",
              "propagate" : true,
              "removePropagationsOnEntityDelete" : true,
              "validityPeriods" : [ { }, { } ],
              "attributes" : {
                "property1" : { },
                "property2" : { }
              },
              "typeName" : "..."
            } ],
            "createTime" : 12345,
            "createdBy" : "...",
            "guid" : "...",
            "homeId" : "...",
            "meanings" : [ {
              "confidence" : 12345,
              "createdBy" : "...",
              "description" : "...",
              "displayText" : "...",
              "expression" : "...",
              "relationGuid" : "...",
              "source" : "...",
              "status" : "OBSOLETE",
              "steward" : "...",
              "termGuid" : "..."
            }, {
              "confidence" : 12345,
              "createdBy" : "...",
              "description" : "...",
              "displayText" : "...",
              "expression" : "...",
              "relationGuid" : "...",
              "source" : "...",
              "status" : "OTHER",
              "steward" : "...",
              "termGuid" : "..."
            } ],
            "proxy" : true,
            "relationshipAttributes" : {
              "property1" : { },
              "property2" : { }
            },
            "status" : "DELETED",
            "updateTime" : 12345,
            "updatedBy" : "...",
            "version" : 12345,
            "attributes" : {
              "property1" : { },
              "property2" : { }
            },
            "typeName" : "..."
          }
        }
      }
    },
    "json_AtlasEntityHeader" : {
      "title" : "AtlasEntityHeader",
      "allOf" : [ {
        "$ref" : "#/definitions/json_AtlasStruct"
      }, {
        "properties" : {
          "classificationNames" : {
            "type" : "array",
            "description" : "An array of classification names.",
            "items" : {
              "type" : "string"
            }
          },
          "classifications" : {
            "type" : "array",
            "description" : "An array of classifications.",
            "items" : {
              "$ref" : "#/definitions/json_AtlasClassification"
            }
          },
          "displayText" : {
            "type" : "string",
            "description" : "The display text."
          },
          "guid" : {
            "type" : "string",
            "description" : "The GUID of the record."
          },
          "meaningNames" : {
            "type" : "array",
            "description" : "An array of meanings.",
            "items" : {
              "type" : "string"
            }
          },
          "meanings" : {
            "type" : "array",
            "description" : "An array of term assignment headers.",
            "items" : {
              "$ref" : "#/definitions/json_AtlasTermAssignmentHeader"
            }
          },
          "status" : {
            "$ref" : "#/definitions/json_Status"
          }
        }
      } ],
      "description" : "An instance of an entity - like hive_table, hive_database.",
      "example" : {
        "classificationNames" : [ "...", "..." ],
        "classifications" : [ {
          "entityGuid" : "...",
          "entityStatus" : "ACTIVE",
          "propagate" : true,
          "removePropagationsOnEntityDelete" : true,
          "validityPeriods" : [ {
            "endTime" : "...",
            "startTime" : "...",
            "timeZone" : "..."
          }, {
            "endTime" : "...",
            "startTime" : "...",
            "timeZone" : "..."
          } ],
          "attributes" : {
            "property1" : { },
            "property2" : { }
          },
          "typeName" : "..."
        }, {
          "entityGuid" : "...",
          "entityStatus" : "DELETED",
          "propagate" : true,
          "removePropagationsOnEntityDelete" : true,
          "validityPeriods" : [ {
            "endTime" : "...",
            "startTime" : "...",
            "timeZone" : "..."
          }, {
            "endTime" : "...",
            "startTime" : "...",
            "timeZone" : "..."
          } ],
          "attributes" : {
            "property1" : { },
            "property2" : { }
          },
          "typeName" : "..."
        } ],
        "displayText" : "...",
        "guid" : "...",
        "meaningNames" : [ "...", "..." ],
        "meanings" : [ {
          "confidence" : 12345,
          "createdBy" : "...",
          "description" : "...",
          "displayText" : "...",
          "expression" : "...",
          "relationGuid" : "...",
          "source" : "...",
          "status" : "DEPRECATED",
          "steward" : "...",
          "termGuid" : "..."
        }, {
          "confidence" : 12345,
          "createdBy" : "...",
          "description" : "...",
          "displayText" : "...",
          "expression" : "...",
          "relationGuid" : "...",
          "source" : "...",
          "status" : "OTHER",
          "steward" : "...",
          "termGuid" : "..."
        } ],
        "status" : "ACTIVE",
        "attributes" : {
          "property1" : { },
          "property2" : { }
        },
        "typeName" : "..."
      }
    },
    "json_AtlasEntityWithExtInfo" : {
      "title" : "AtlasEntityWithExtInfo",
      "allOf" : [ {
        "$ref" : "#/definitions/json_AtlasEntityExtInfo"
      }, {
        "properties" : {
          "entity" : {
            "$ref" : "#/definitions/json_AtlasEntity"
          }
        }
      } ],
      "description" : "An instance of an entity along with extended info - like hive_table, hive_database.",
      "example" : {
        "entity" : {
          "classifications" : [ {
            "entityGuid" : "...",
            "entityStatus" : "ACTIVE",
            "propagate" : true,
            "removePropagationsOnEntityDelete" : true,
            "validityPeriods" : [ { }, { } ],
            "attributes" : {
              "property1" : { },
              "property2" : { }
            },
            "typeName" : "..."
          }, {
            "entityGuid" : "...",
            "entityStatus" : "DELETED",
            "propagate" : true,
            "removePropagationsOnEntityDelete" : true,
            "validityPeriods" : [ { }, { } ],
            "attributes" : {
              "property1" : { },
              "property2" : { }
            },
            "typeName" : "..."
          } ],
          "createTime" : 12345,
          "createdBy" : "...",
          "guid" : "...",
          "homeId" : "...",
          "meanings" : [ {
            "confidence" : 12345,
            "createdBy" : "...",
            "description" : "...",
            "displayText" : "...",
            "expression" : "...",
            "relationGuid" : "...",
            "source" : "...",
            "status" : "DISCOVERED",
            "steward" : "...",
            "termGuid" : "..."
          }, {
            "confidence" : 12345,
            "createdBy" : "...",
            "description" : "...",
            "displayText" : "...",
            "expression" : "...",
            "relationGuid" : "...",
            "source" : "...",
            "status" : "VALIDATED",
            "steward" : "...",
            "termGuid" : "..."
          } ],
          "proxy" : true,
          "relationshipAttributes" : {
            "property1" : { },
            "property2" : { }
          },
          "status" : "DELETED",
          "updateTime" : 12345,
          "updatedBy" : "...",
          "version" : 12345,
          "attributes" : {
            "property1" : { },
            "property2" : { }
          },
          "typeName" : "..."
        },
        "referredEntities" : {
          "property1" : {
            "classifications" : [ {
              "entityGuid" : "...",
              "entityStatus" : "DELETED",
              "propagate" : true,
              "removePropagationsOnEntityDelete" : true,
              "validityPeriods" : [ { }, { } ],
              "attributes" : {
                "property1" : { },
                "property2" : { }
              },
              "typeName" : "..."
            }, {
              "entityGuid" : "...",
              "entityStatus" : "DELETED",
              "propagate" : true,
              "removePropagationsOnEntityDelete" : true,
              "validityPeriods" : [ { }, { } ],
              "attributes" : {
                "property1" : { },
                "property2" : { }
              },
              "typeName" : "..."
            } ],
            "createTime" : 12345,
            "createdBy" : "...",
            "guid" : "...",
            "homeId" : "...",
            "meanings" : [ {
              "confidence" : 12345,
              "createdBy" : "...",
              "description" : "...",
              "displayText" : "...",
              "expression" : "...",
              "relationGuid" : "...",
              "source" : "...",
              "status" : "IMPORTED",
              "steward" : "...",
              "termGuid" : "..."
            }, {
              "confidence" : 12345,
              "createdBy" : "...",
              "description" : "...",
              "displayText" : "...",
              "expression" : "...",
              "relationGuid" : "...",
              "source" : "...",
              "status" : "IMPORTED",
              "steward" : "...",
              "termGuid" : "..."
            } ],
            "proxy" : true,
            "relationshipAttributes" : {
              "property1" : { },
              "property2" : { }
            },
            "status" : "DELETED",
            "updateTime" : 12345,
            "updatedBy" : "...",
            "version" : 12345,
            "attributes" : {
              "property1" : { },
              "property2" : { }
            },
            "typeName" : "..."
          },
          "property2" : {
            "classifications" : [ {
              "entityGuid" : "...",
              "entityStatus" : "DELETED",
              "propagate" : true,
              "removePropagationsOnEntityDelete" : true,
              "validityPeriods" : [ { }, { } ],
              "attributes" : {
                "property1" : { },
                "property2" : { }
              },
              "typeName" : "..."
            }, {
              "entityGuid" : "...",
              "entityStatus" : "ACTIVE",
              "propagate" : true,
              "removePropagationsOnEntityDelete" : true,
              "validityPeriods" : [ { }, { } ],
              "attributes" : {
                "property1" : { },
                "property2" : { }
              },
              "typeName" : "..."
            } ],
            "createTime" : 12345,
            "createdBy" : "...",
            "guid" : "...",
            "homeId" : "...",
            "meanings" : [ {
              "confidence" : 12345,
              "createdBy" : "...",
              "description" : "...",
              "displayText" : "...",
              "expression" : "...",
              "relationGuid" : "...",
              "source" : "...",
              "status" : "DEPRECATED",
              "steward" : "...",
              "termGuid" : "..."
            }, {
              "confidence" : 12345,
              "createdBy" : "...",
              "description" : "...",
              "displayText" : "...",
              "expression" : "...",
              "relationGuid" : "...",
              "source" : "...",
              "status" : "IMPORTED",
              "steward" : "...",
              "termGuid" : "..."
            } ],
            "proxy" : true,
            "relationshipAttributes" : {
              "property1" : { },
              "property2" : { }
            },
            "status" : "DELETED",
            "updateTime" : 12345,
            "updatedBy" : "...",
            "version" : 12345,
            "attributes" : {
              "property1" : { },
              "property2" : { }
            },
            "typeName" : "..."
          }
        }
      }
    },
    "json_AtlasEnumDef" : {
      "title" : "AtlasEnumDef",
      "allOf" : [ {
        "$ref" : "#/definitions/json_AtlasBaseTypeDef"
      }, {
        "properties" : {
          "defaultValue" : {
            "type" : "string",
            "description" : "The default value."
          },
          "elementDefs" : {
            "type" : "array",
            "description" : "An array of enum element definitions.",
            "items" : {
              "$ref" : "#/definitions/json_AtlasEnumElementDef"
            }
          }
        }
      } ],
      "description" : "class that captures details of an enum-type.",
      "example" : {
        "defaultValue" : "...",
        "elementDefs" : [ {
          "description" : "...",
          "ordinal" : 12345,
          "value" : "..."
        }, {
          "description" : "...",
          "ordinal" : 12345,
          "value" : "..."
        } ],
        "category" : "OBJECT_ID_TYPE",
        "createTime" : 12345,
        "createdBy" : "...",
        "dateFormatter" : {
          "availableLocales" : [ "...", "..." ],
          "calendar" : 12345,
          "dateInstance" : { },
          "dateTimeInstance" : { },
          "instance" : { },
          "lenient" : true,
          "numberFormat" : {
            "availableLocales" : [ "...", "..." ],
            "currency" : "...",
            "currencyInstance" : { },
            "groupingUsed" : true,
            "instance" : { },
            "integerInstance" : { },
            "maximumFractionDigits" : 12345,
            "maximumIntegerDigits" : 12345,
            "minimumFractionDigits" : 12345,
            "minimumIntegerDigits" : 12345,
            "numberInstance" : { },
            "parseIntegerOnly" : true,
            "percentInstance" : { },
            "roundingMode" : "HALF_UP"
          },
          "timeInstance" : { },
          "timeZone" : {
            "DSTSavings" : 12345,
            "ID" : "...",
            "availableIDs" : [ "...", "..." ],
            "default" : { },
            "displayName" : "...",
            "rawOffset" : 12345
          }
        },
        "description" : "...",
        "guid" : "...",
        "name" : "...",
        "options" : {
          "property1" : "...",
          "property2" : "..."
        },
        "typeVersion" : "...",
        "updateTime" : 12345,
        "updatedBy" : "...",
        "version" : 12345
      }
    },
    "json_AtlasEnumElementDef" : {
      "type" : "object",
      "properties" : {
        "description" : {
          "type" : "string",
          "description" : "The description of the enum element definition."
        },
        "ordinal" : {
          "type" : "number",
          "description" : "The ordinal of the enum element definition."
        },
        "value" : {
          "type" : "string",
          "description" : "The value of the enum element definition."
        }
      },
      "title" : "AtlasEnumElementDef",
      "description" : "class that captures details of an enum-element.",
      "example" : {
        "description" : "...",
        "ordinal" : 12345,
        "value" : "..."
      }
    },
    "json_AtlasFullTextResult" : {
      "type" : "object",
      "properties" : {
        "entity" : {
          "$ref" : "#/definitions/json_AtlasEntityHeader"
        },
        "score" : {
          "type" : "number",
          "description" : "The score of the full text search result."
        }
      },
      "title" : "AtlasFullTextResult",
      "description" : "The result of the full text search.",
      "example" : {
        "entity" : {
          "classificationNames" : [ "...", "..." ],
          "classifications" : [ {
            "entityGuid" : "...",
            "entityStatus" : "ACTIVE",
            "propagate" : true,
            "removePropagationsOnEntityDelete" : true,
            "validityPeriods" : [ { }, { } ],
            "attributes" : {
              "property1" : { },
              "property2" : { }
            },
            "typeName" : "..."
          }, {
            "entityGuid" : "...",
            "entityStatus" : "DELETED",
            "propagate" : true,
            "removePropagationsOnEntityDelete" : true,
            "validityPeriods" : [ { }, { } ],
            "attributes" : {
              "property1" : { },
              "property2" : { }
            },
            "typeName" : "..."
          } ],
          "displayText" : "...",
          "guid" : "...",
          "meaningNames" : [ "...", "..." ],
          "meanings" : [ {
            "confidence" : 12345,
            "createdBy" : "...",
            "description" : "...",
            "displayText" : "...",
            "expression" : "...",
            "relationGuid" : "...",
            "source" : "...",
            "status" : "OBSOLETE",
            "steward" : "...",
            "termGuid" : "..."
          }, {
            "confidence" : 12345,
            "createdBy" : "...",
            "description" : "...",
            "displayText" : "...",
            "expression" : "...",
            "relationGuid" : "...",
            "source" : "...",
            "status" : "OBSOLETE",
            "steward" : "...",
            "termGuid" : "..."
          } ],
          "status" : "DELETED",
          "attributes" : {
            "property1" : { },
            "property2" : { }
          },
          "typeName" : "..."
        },
        "score" : 12345
      }
    },
    "json_AtlasGlossary" : {
      "title" : "AtlasGlossary",
      "allOf" : [ {
        "$ref" : "#/definitions/json_AtlasGlossaryBaseObject"
      }, {
        "properties" : {
          "categories" : {
            "type" : "array",
            "description" : "An array of categories.",
            "items" : {
              "$ref" : "#/definitions/json_AtlasRelatedCategoryHeader"
            }
          },
          "language" : {
            "type" : "string",
            "description" : "The language of the glossary."
          },
          "terms" : {
            "type" : "array",
            "description" : "An array of related term headers.",
            "items" : {
              "$ref" : "#/definitions/json_AtlasRelatedTermHeader"
            }
          },
          "usage" : {
            "type" : "string",
            "description" : "The usage of the glossary."
          }
        }
      } ],
      "description" : "The glossary object.",
      "example" : {
        "categories" : [ {
          "categoryGuid" : "...",
          "description" : "...",
          "displayText" : "...",
          "parentCategoryGuid" : "...",
          "relationGuid" : "..."
        }, {
          "categoryGuid" : "...",
          "description" : "...",
          "displayText" : "...",
          "parentCategoryGuid" : "...",
          "relationGuid" : "..."
        } ],
        "language" : "...",
        "terms" : [ {
          "description" : "...",
          "displayText" : "...",
          "expression" : "...",
          "relationGuid" : "...",
          "source" : "...",
          "status" : "OTHER",
          "steward" : "...",
          "termGuid" : "..."
        }, {
          "description" : "...",
          "displayText" : "...",
          "expression" : "...",
          "relationGuid" : "...",
          "source" : "...",
          "status" : "DRAFT",
          "steward" : "...",
          "termGuid" : "..."
        } ],
        "usage" : "...",
        "classifications" : [ {
          "entityGuid" : "...",
          "entityStatus" : "DELETED",
          "propagate" : true,
          "removePropagationsOnEntityDelete" : true,
          "validityPeriods" : [ {
            "endTime" : "...",
            "startTime" : "...",
            "timeZone" : "..."
          }, {
            "endTime" : "...",
            "startTime" : "...",
            "timeZone" : "..."
          } ],
          "attributes" : {
            "property1" : { },
            "property2" : { }
          },
          "typeName" : "..."
        }, {
          "entityGuid" : "...",
          "entityStatus" : "DELETED",
          "propagate" : true,
          "removePropagationsOnEntityDelete" : true,
          "validityPeriods" : [ {
            "endTime" : "...",
            "startTime" : "...",
            "timeZone" : "..."
          }, {
            "endTime" : "...",
            "startTime" : "...",
            "timeZone" : "..."
          } ],
          "attributes" : {
            "property1" : { },
            "property2" : { }
          },
          "typeName" : "..."
        } ],
        "longDescription" : "...",
        "name" : "...",
        "qualifiedName" : "...",
        "shortDescription" : "...",
        "guid" : "..."
      }
    },
    "json_AtlasGlossaryBaseObject" : {
      "title" : "AtlasGlossaryBaseObject",
      "allOf" : [ {
        "$ref" : "#/definitions/json_AtlasBaseModelObject"
      }, {
        "properties" : {
          "classifications" : {
            "type" : "array",
            "description" : "An array of classifications.",
            "items" : {
              "$ref" : "#/definitions/json_AtlasClassification"
            }
          },
          "longDescription" : {
            "type" : "string",
            "description" : "The long version description."
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the glossary object."
          },
          "qualifiedName" : {
            "type" : "string",
            "description" : "The qualified name of the glossary object."
          },
          "shortDescription" : {
            "type" : "string",
            "description" : "The short version of description."
          }
        }
      } ],
      "description" : "The glossary base object.",
      "example" : {
        "classifications" : [ {
          "entityGuid" : "...",
          "entityStatus" : "DELETED",
          "propagate" : true,
          "removePropagationsOnEntityDelete" : true,
          "validityPeriods" : [ {
            "endTime" : "...",
            "startTime" : "...",
            "timeZone" : "..."
          }, {
            "endTime" : "...",
            "startTime" : "...",
            "timeZone" : "..."
          } ],
          "attributes" : {
            "property1" : { },
            "property2" : { }
          },
          "typeName" : "..."
        }, {
          "entityGuid" : "...",
          "entityStatus" : "DELETED",
          "propagate" : true,
          "removePropagationsOnEntityDelete" : true,
          "validityPeriods" : [ {
            "endTime" : "...",
            "startTime" : "...",
            "timeZone" : "..."
          }, {
            "endTime" : "...",
            "startTime" : "...",
            "timeZone" : "..."
          } ],
          "attributes" : {
            "property1" : { },
            "property2" : { }
          },
          "typeName" : "..."
        } ],
        "longDescription" : "...",
        "name" : "...",
        "qualifiedName" : "...",
        "shortDescription" : "...",
        "guid" : "..."
      }
    },
    "json_AtlasGlossaryCategory" : {
      "title" : "AtlasGlossaryCategory",
      "allOf" : [ {
        "$ref" : "#/definitions/json_AtlasGlossaryBaseObject"
      }, {
        "properties" : {
          "anchor" : {
            "$ref" : "#/definitions/json_AtlasGlossaryHeader"
          },
          "childrenCategories" : {
            "type" : "array",
            "description" : "An array of children categories.",
            "items" : {
              "$ref" : "#/definitions/json_AtlasRelatedCategoryHeader"
            }
          },
          "parentCategory" : {
            "$ref" : "#/definitions/json_AtlasRelatedCategoryHeader"
          },
          "terms" : {
            "type" : "array",
            "description" : "An array of related term headers.",
            "items" : {
              "$ref" : "#/definitions/json_AtlasRelatedTermHeader"
            }
          }
        }
      } ],
      "description" : "The glossary category.",
      "example" : {
        "anchor" : {
          "displayText" : "...",
          "glossaryGuid" : "...",
          "relationGuid" : "..."
        },
        "childrenCategories" : [ {
          "categoryGuid" : "...",
          "description" : "...",
          "displayText" : "...",
          "parentCategoryGuid" : "...",
          "relationGuid" : "..."
        }, {
          "categoryGuid" : "...",
          "description" : "...",
          "displayText" : "...",
          "parentCategoryGuid" : "...",
          "relationGuid" : "..."
        } ],
        "parentCategory" : {
          "categoryGuid" : "...",
          "description" : "...",
          "displayText" : "...",
          "parentCategoryGuid" : "...",
          "relationGuid" : "..."
        },
        "terms" : [ {
          "description" : "...",
          "displayText" : "...",
          "expression" : "...",
          "relationGuid" : "...",
          "source" : "...",
          "status" : "DRAFT",
          "steward" : "...",
          "termGuid" : "..."
        }, {
          "description" : "...",
          "displayText" : "...",
          "expression" : "...",
          "relationGuid" : "...",
          "source" : "...",
          "status" : "OTHER",
          "steward" : "...",
          "termGuid" : "..."
        } ],
        "classifications" : [ {
          "entityGuid" : "...",
          "entityStatus" : "DELETED",
          "propagate" : true,
          "removePropagationsOnEntityDelete" : true,
          "validityPeriods" : [ {
            "endTime" : "...",
            "startTime" : "...",
            "timeZone" : "..."
          }, {
            "endTime" : "...",
            "startTime" : "...",
            "timeZone" : "..."
          } ],
          "attributes" : {
            "property1" : { },
            "property2" : { }
          },
          "typeName" : "..."
        }, {
          "entityGuid" : "...",
          "entityStatus" : "DELETED",
          "propagate" : true,
          "removePropagationsOnEntityDelete" : true,
          "validityPeriods" : [ {
            "endTime" : "...",
            "startTime" : "...",
            "timeZone" : "..."
          }, {
            "endTime" : "...",
            "startTime" : "...",
            "timeZone" : "..."
          } ],
          "attributes" : {
            "property1" : { },
            "property2" : { }
          },
          "typeName" : "..."
        } ],
        "longDescription" : "...",
        "name" : "...",
        "qualifiedName" : "...",
        "shortDescription" : "...",
        "guid" : "..."
      }
    },
    "json_AtlasGlossaryExtInfo" : {
      "title" : "AtlasGlossaryExtInfo",
      "allOf" : [ {
        "$ref" : "#/definitions/json_AtlasGlossary"
      }, {
        "properties" : {
          "categoryInfo" : {
            "type" : "object",
            "description" : "The glossary category information.",
            "additionalProperties" : {
              "$ref" : "#/definitions/json_AtlasGlossaryCategory"
            }
          },
          "termInfo" : {
            "type" : "object",
            "description" : "The glossary term information.",
            "additionalProperties" : {
              "$ref" : "#/definitions/json_AtlasGlossaryTerm"
            }
          }
        }
      } ],
      "description" : "The extended information of glossary.",
      "example" : {
        "categoryInfo" : {
          "property1" : {
            "anchor" : {
              "displayText" : "...",
              "glossaryGuid" : "...",
              "relationGuid" : "..."
            },
            "childrenCategories" : [ {
              "categoryGuid" : "...",
              "description" : "...",
              "displayText" : "...",
              "parentCategoryGuid" : "...",
              "relationGuid" : "..."
            }, {
              "categoryGuid" : "...",
              "description" : "...",
              "displayText" : "...",
              "parentCategoryGuid" : "...",
              "relationGuid" : "..."
            } ],
            "parentCategory" : {
              "categoryGuid" : "...",
              "description" : "...",
              "displayText" : "...",
              "parentCategoryGuid" : "...",
              "relationGuid" : "..."
            },
            "terms" : [ {
              "description" : "...",
              "displayText" : "...",
              "expression" : "...",
              "relationGuid" : "...",
              "source" : "...",
              "status" : "OBSOLETE",
              "steward" : "...",
              "termGuid" : "..."
            }, {
              "description" : "...",
              "displayText" : "...",
              "expression" : "...",
              "relationGuid" : "...",
              "source" : "...",
              "status" : "DRAFT",
              "steward" : "...",
              "termGuid" : "..."
            } ],
            "classifications" : [ {
              "entityGuid" : "...",
              "entityStatus" : "DELETED",
              "propagate" : true,
              "removePropagationsOnEntityDelete" : true,
              "validityPeriods" : [ { }, { } ],
              "attributes" : {
                "property1" : { },
                "property2" : { }
              },
              "typeName" : "..."
            }, {
              "entityGuid" : "...",
              "entityStatus" : "ACTIVE",
              "propagate" : true,
              "removePropagationsOnEntityDelete" : true,
              "validityPeriods" : [ { }, { } ],
              "attributes" : {
                "property1" : { },
                "property2" : { }
              },
              "typeName" : "..."
            } ],
            "longDescription" : "...",
            "name" : "...",
            "qualifiedName" : "...",
            "shortDescription" : "...",
            "guid" : "..."
          },
          "property2" : {
            "anchor" : {
              "displayText" : "...",
              "glossaryGuid" : "...",
              "relationGuid" : "..."
            },
            "childrenCategories" : [ {
              "categoryGuid" : "...",
              "description" : "...",
              "displayText" : "...",
              "parentCategoryGuid" : "...",
              "relationGuid" : "..."
            }, {
              "categoryGuid" : "...",
              "description" : "...",
              "displayText" : "...",
              "parentCategoryGuid" : "...",
              "relationGuid" : "..."
            } ],
            "parentCategory" : {
              "categoryGuid" : "...",
              "description" : "...",
              "displayText" : "...",
              "parentCategoryGuid" : "...",
              "relationGuid" : "..."
            },
            "terms" : [ {
              "description" : "...",
              "displayText" : "...",
              "expression" : "...",
              "relationGuid" : "...",
              "source" : "...",
              "status" : "DEPRECATED",
              "steward" : "...",
              "termGuid" : "..."
            }, {
              "description" : "...",
              "displayText" : "...",
              "expression" : "...",
              "relationGuid" : "...",
              "source" : "...",
              "status" : "OTHER",
              "steward" : "...",
              "termGuid" : "..."
            } ],
            "classifications" : [ {
              "entityGuid" : "...",
              "entityStatus" : "ACTIVE",
              "propagate" : true,
              "removePropagationsOnEntityDelete" : true,
              "validityPeriods" : [ { }, { } ],
              "attributes" : {
                "property1" : { },
                "property2" : { }
              },
              "typeName" : "..."
            }, {
              "entityGuid" : "...",
              "entityStatus" : "ACTIVE",
              "propagate" : true,
              "removePropagationsOnEntityDelete" : true,
              "validityPeriods" : [ { }, { } ],
              "attributes" : {
                "property1" : { },
                "property2" : { }
              },
              "typeName" : "..."
            } ],
            "longDescription" : "...",
            "name" : "...",
            "qualifiedName" : "...",
            "shortDescription" : "...",
            "guid" : "..."
          }
        },
        "termInfo" : {
          "property1" : {
            "abbreviation" : "...",
            "anchor" : {
              "displayText" : "...",
              "glossaryGuid" : "...",
              "relationGuid" : "..."
            },
            "antonyms" : [ {
              "description" : "...",
              "displayText" : "...",
              "expression" : "...",
              "relationGuid" : "...",
              "source" : "...",
              "status" : "ACTIVE",
              "steward" : "...",
              "termGuid" : "..."
            }, {
              "description" : "...",
              "displayText" : "...",
              "expression" : "...",
              "relationGuid" : "...",
              "source" : "...",
              "status" : "DRAFT",
              "steward" : "...",
              "termGuid" : "..."
            } ],
            "assignedEntities" : [ {
              "displayText" : "...",
              "entityStatus" : "DELETED",
              "relationshipAttributes" : { },
              "relationshipGuid" : "...",
              "relationshipStatus" : "ACTIVE",
              "guid" : "...",
              "typeName" : "...",
              "uniqueAttributes" : {
                "property1" : { },
                "property2" : { }
              }
            }, {
              "displayText" : "...",
              "entityStatus" : "DELETED",
              "relationshipAttributes" : { },
              "relationshipGuid" : "...",
              "relationshipStatus" : "DELETED",
              "guid" : "...",
              "typeName" : "...",
              "uniqueAttributes" : {
                "property1" : { },
                "property2" : { }
              }
            } ],
            "categories" : [ {
              "categoryGuid" : "...",
              "description" : "...",
              "displayText" : "...",
              "relationGuid" : "...",
              "status" : "DRAFT"
            }, {
              "categoryGuid" : "...",
              "description" : "...",
              "displayText" : "...",
              "relationGuid" : "...",
              "status" : "DEPRECATED"
            } ],
            "classifies" : [ {
              "description" : "...",
              "displayText" : "...",
              "expression" : "...",
              "relationGuid" : "...",
              "source" : "...",
              "status" : "OTHER",
              "steward" : "...",
              "termGuid" : "..."
            }, {
              "description" : "...",
              "displayText" : "...",
              "expression" : "...",
              "relationGuid" : "...",
              "source" : "...",
              "status" : "DEPRECATED",
              "steward" : "...",
              "termGuid" : "..."
            } ],
            "examples" : [ "...", "..." ],
            "isA" : [ {
              "description" : "...",
              "displayText" : "...",
              "expression" : "...",
              "relationGuid" : "...",
              "source" : "...",
              "status" : "OTHER",
              "steward" : "...",
              "termGuid" : "..."
            }, {
              "description" : "...",
              "displayText" : "...",
              "expression" : "...",
              "relationGuid" : "...",
              "source" : "...",
              "status" : "ACTIVE",
              "steward" : "...",
              "termGuid" : "..."
            } ],
            "preferredTerms" : [ {
              "description" : "...",
              "displayText" : "...",
              "expression" : "...",
              "relationGuid" : "...",
              "source" : "...",
              "status" : "DRAFT",
              "steward" : "...",
              "termGuid" : "..."
            }, {
              "description" : "...",
              "displayText" : "...",
              "expression" : "...",
              "relationGuid" : "...",
              "source" : "...",
              "status" : "OTHER",
              "steward" : "...",
              "termGuid" : "..."
            } ],
            "preferredToTerms" : [ {
              "description" : "...",
              "displayText" : "...",
              "expression" : "...",
              "relationGuid" : "...",
              "source" : "...",
              "status" : "DEPRECATED",
              "steward" : "...",
              "termGuid" : "..."
            }, {
              "description" : "...",
              "displayText" : "...",
              "expression" : "...",
              "relationGuid" : "...",
              "source" : "...",
              "status" : "DEPRECATED",
              "steward" : "...",
              "termGuid" : "..."
            } ],
            "replacedBy" : [ {
              "description" : "...",
              "displayText" : "...",
              "expression" : "...",
              "relationGuid" : "...",
              "source" : "...",
              "status" : "OTHER",
              "steward" : "...",
              "termGuid" : "..."
            }, {
              "description" : "...",
              "displayText" : "...",
              "expression" : "...",
              "relationGuid" : "...",
              "source" : "...",
              "status" : "OTHER",
              "steward" : "...",
              "termGuid" : "..."
            } ],
            "replacementTerms" : [ {
              "description" : "...",
              "displayText" : "...",
              "expression" : "...",
              "relationGuid" : "...",
              "source" : "...",
              "status" : "OBSOLETE",
              "steward" : "...",
              "termGuid" : "..."
            }, {
              "description" : "...",
              "displayText" : "...",
              "expression" : "...",
              "relationGuid" : "...",
              "source" : "...",
              "status" : "DRAFT",
              "steward" : "...",
              "termGuid" : "..."
            } ],
            "seeAlso" : [ {
              "description" : "...",
              "displayText" : "...",
              "expression" : "...",
              "relationGuid" : "...",
              "source" : "...",
              "status" : "OTHER",
              "steward" : "...",
              "termGuid" : "..."
            }, {
              "description" : "...",
              "displayText" : "...",
              "expression" : "...",
              "relationGuid" : "...",
              "source" : "...",
              "status" : "OTHER",
              "steward" : "...",
              "termGuid" : "..."
            } ],
            "synonyms" : [ {
              "description" : "...",
              "displayText" : "...",
              "expression" : "...",
              "relationGuid" : "...",
              "source" : "...",
              "status" : "OTHER",
              "steward" : "...",
              "termGuid" : "..."
            }, {
              "description" : "...",
              "displayText" : "...",
              "expression" : "...",
              "relationGuid" : "...",
              "source" : "...",
              "status" : "DEPRECATED",
              "steward" : "...",
              "termGuid" : "..."
            } ],
            "translatedTerms" : [ {
              "description" : "...",
              "displayText" : "...",
              "expression" : "...",
              "relationGuid" : "...",
              "source" : "...",
              "status" : "ACTIVE",
              "steward" : "...",
              "termGuid" : "..."
            }, {
              "description" : "...",
              "displayText" : "...",
              "expression" : "...",
              "relationGuid" : "...",
              "source" : "...",
              "status" : "DRAFT",
              "steward" : "...",
              "termGuid" : "..."
            } ],
            "translationTerms" : [ {
              "description" : "...",
              "displayText" : "...",
              "expression" : "...",
              "relationGuid" : "...",
              "source" : "...",
              "status" : "ACTIVE",
              "steward" : "...",
              "termGuid" : "..."
            }, {
              "description" : "...",
              "displayText" : "...",
              "expression" : "...",
              "relationGuid" : "...",
              "source" : "...",
              "status" : "OBSOLETE",
              "steward" : "...",
              "termGuid" : "..."
            } ],
            "usage" : "...",
            "validValues" : [ {
              "description" : "...",
              "displayText" : "...",
              "expression" : "...",
              "relationGuid" : "...",
              "source" : "...",
              "status" : "ACTIVE",
              "steward" : "...",
              "termGuid" : "..."
            }, {
              "description" : "...",
              "displayText" : "...",
              "expression" : "...",
              "relationGuid" : "...",
              "source" : "...",
              "status" : "DRAFT",
              "steward" : "...",
              "termGuid" : "..."
            } ],
            "validValuesFor" : [ {
              "description" : "...",
              "displayText" : "...",
              "expression" : "...",
              "relationGuid" : "...",
              "source" : "...",
              "status" : "ACTIVE",
              "steward" : "...",
              "termGuid" : "..."
            }, {
              "description" : "...",
              "displayText" : "...",
              "expression" : "...",
              "relationGuid" : "...",
              "source" : "...",
              "status" : "DEPRECATED",
              "steward" : "...",
              "termGuid" : "..."
            } ],
            "classifications" : [ {
              "entityGuid" : "...",
              "entityStatus" : "ACTIVE",
              "propagate" : true,
              "removePropagationsOnEntityDelete" : true,
              "validityPeriods" : [ { }, { } ],
              "attributes" : {
                "property1" : { },
                "property2" : { }
              },
              "typeName" : "..."
            }, {
              "entityGuid" : "...",
              "entityStatus" : "ACTIVE",
              "propagate" : true,
              "removePropagationsOnEntityDelete" : true,
              "validityPeriods" : [ { }, { } ],
              "attributes" : {
                "property1" : { },
                "property2" : { }
              },
              "typeName" : "..."
            } ],
            "longDescription" : "...",
            "name" : "...",
            "qualifiedName" : "...",
            "shortDescription" : "...",
            "guid" : "..."
          },
          "property2" : {
            "abbreviation" : "...",
            "anchor" : {
              "displayText" : "...",
              "glossaryGuid" : "...",
              "relationGuid" : "..."
            },
            "antonyms" : [ {
              "description" : "...",
              "displayText" : "...",
              "expression" : "...",
              "relationGuid" : "...",
              "source" : "...",
              "status" : "OTHER",
              "steward" : "...",
              "termGuid" : "..."
            }, {
              "description" : "...",
              "displayText" : "...",
              "expression" : "...",
              "relationGuid" : "...",
              "source" : "...",
              "status" : "OTHER",
              "steward" : "...",
              "termGuid" : "..."
            } ],
            "assignedEntities" : [ {
              "displayText" : "...",
              "entityStatus" : "DELETED",
              "relationshipAttributes" : { },
              "relationshipGuid" : "...",
              "relationshipStatus" : "DELETED",
              "guid" : "...",
              "typeName" : "...",
              "uniqueAttributes" : {
                "property1" : { },
                "property2" : { }
              }
            }, {
              "displayText" : "...",
              "entityStatus" : "ACTIVE",
              "relationshipAttributes" : { },
              "relationshipGuid" : "...",
              "relationshipStatus" : "DELETED",
              "guid" : "...",
              "typeName" : "...",
              "uniqueAttributes" : {
                "property1" : { },
                "property2" : { }
              }
            } ],
            "categories" : [ {
              "categoryGuid" : "...",
              "description" : "...",
              "displayText" : "...",
              "relationGuid" : "...",
              "status" : "DRAFT"
            }, {
              "categoryGuid" : "...",
              "description" : "...",
              "displayText" : "...",
              "relationGuid" : "...",
              "status" : "OTHER"
            } ],
            "classifies" : [ {
              "description" : "...",
              "displayText" : "...",
              "expression" : "...",
              "relationGuid" : "...",
              "source" : "...",
              "status" : "DRAFT",
              "steward" : "...",
              "termGuid" : "..."
            }, {
              "description" : "...",
              "displayText" : "...",
              "expression" : "...",
              "relationGuid" : "...",
              "source" : "...",
              "status" : "ACTIVE",
              "steward" : "...",
              "termGuid" : "..."
            } ],
            "examples" : [ "...", "..." ],
            "isA" : [ {
              "description" : "...",
              "displayText" : "...",
              "expression" : "...",
              "relationGuid" : "...",
              "source" : "...",
              "status" : "OBSOLETE",
              "steward" : "...",
              "termGuid" : "..."
            }, {
              "description" : "...",
              "displayText" : "...",
              "expression" : "...",
              "relationGuid" : "...",
              "source" : "...",
              "status" : "OTHER",
              "steward" : "...",
              "termGuid" : "..."
            } ],
            "preferredTerms" : [ {
              "description" : "...",
              "displayText" : "...",
              "expression" : "...",
              "relationGuid" : "...",
              "source" : "...",
              "status" : "ACTIVE",
              "steward" : "...",
              "termGuid" : "..."
            }, {
              "description" : "...",
              "displayText" : "...",
              "expression" : "...",
              "relationGuid" : "...",
              "source" : "...",
              "status" : "DRAFT",
              "steward" : "...",
              "termGuid" : "..."
            } ],
            "preferredToTerms" : [ {
              "description" : "...",
              "displayText" : "...",
              "expression" : "...",
              "relationGuid" : "...",
              "source" : "...",
              "status" : "DRAFT",
              "steward" : "...",
              "termGuid" : "..."
            }, {
              "description" : "...",
              "displayText" : "...",
              "expression" : "...",
              "relationGuid" : "...",
              "source" : "...",
              "status" : "DRAFT",
              "steward" : "...",
              "termGuid" : "..."
            } ],
            "replacedBy" : [ {
              "description" : "...",
              "displayText" : "...",
              "expression" : "...",
              "relationGuid" : "...",
              "source" : "...",
              "status" : "DRAFT",
              "steward" : "...",
              "termGuid" : "..."
            }, {
              "description" : "...",
              "displayText" : "...",
              "expression" : "...",
              "relationGuid" : "...",
              "source" : "...",
              "status" : "DRAFT",
              "steward" : "...",
              "termGuid" : "..."
            } ],
            "replacementTerms" : [ {
              "description" : "...",
              "displayText" : "...",
              "expression" : "...",
              "relationGuid" : "...",
              "source" : "...",
              "status" : "ACTIVE",
              "steward" : "...",
              "termGuid" : "..."
            }, {
              "description" : "...",
              "displayText" : "...",
              "expression" : "...",
              "relationGuid" : "...",
              "source" : "...",
              "status" : "OBSOLETE",
              "steward" : "...",
              "termGuid" : "..."
            } ],
            "seeAlso" : [ {
              "description" : "...",
              "displayText" : "...",
              "expression" : "...",
              "relationGuid" : "...",
              "source" : "...",
              "status" : "ACTIVE",
              "steward" : "...",
              "termGuid" : "..."
            }, {
              "description" : "...",
              "displayText" : "...",
              "expression" : "...",
              "relationGuid" : "...",
              "source" : "...",
              "status" : "DRAFT",
              "steward" : "...",
              "termGuid" : "..."
            } ],
            "synonyms" : [ {
              "description" : "...",
              "displayText" : "...",
              "expression" : "...",
              "relationGuid" : "...",
              "source" : "...",
              "status" : "OBSOLETE",
              "steward" : "...",
              "termGuid" : "..."
            }, {
              "description" : "...",
              "displayText" : "...",
              "expression" : "...",
              "relationGuid" : "...",
              "source" : "...",
              "status" : "DEPRECATED",
              "steward" : "...",
              "termGuid" : "..."
            } ],
            "translatedTerms" : [ {
              "description" : "...",
              "displayText" : "...",
              "expression" : "...",
              "relationGuid" : "...",
              "source" : "...",
              "status" : "DRAFT",
              "steward" : "...",
              "termGuid" : "..."
            }, {
              "description" : "...",
              "displayText" : "...",
              "expression" : "...",
              "relationGuid" : "...",
              "source" : "...",
              "status" : "OBSOLETE",
              "steward" : "...",
              "termGuid" : "..."
            } ],
            "translationTerms" : [ {
              "description" : "...",
              "displayText" : "...",
              "expression" : "...",
              "relationGuid" : "...",
              "source" : "...",
              "status" : "DRAFT",
              "steward" : "...",
              "termGuid" : "..."
            }, {
              "description" : "...",
              "displayText" : "...",
              "expression" : "...",
              "relationGuid" : "...",
              "source" : "...",
              "status" : "DRAFT",
              "steward" : "...",
              "termGuid" : "..."
            } ],
            "usage" : "...",
            "validValues" : [ {
              "description" : "...",
              "displayText" : "...",
              "expression" : "...",
              "relationGuid" : "...",
              "source" : "...",
              "status" : "OTHER",
              "steward" : "...",
              "termGuid" : "..."
            }, {
              "description" : "...",
              "displayText" : "...",
              "expression" : "...",
              "relationGuid" : "...",
              "source" : "...",
              "status" : "DRAFT",
              "steward" : "...",
              "termGuid" : "..."
            } ],
            "validValuesFor" : [ {
              "description" : "...",
              "displayText" : "...",
              "expression" : "...",
              "relationGuid" : "...",
              "source" : "...",
              "status" : "DEPRECATED",
              "steward" : "...",
              "termGuid" : "..."
            }, {
              "description" : "...",
              "displayText" : "...",
              "expression" : "...",
              "relationGuid" : "...",
              "source" : "...",
              "status" : "DRAFT",
              "steward" : "...",
              "termGuid" : "..."
            } ],
            "classifications" : [ {
              "entityGuid" : "...",
              "entityStatus" : "ACTIVE",
              "propagate" : true,
              "removePropagationsOnEntityDelete" : true,
              "validityPeriods" : [ { }, { } ],
              "attributes" : {
                "property1" : { },
                "property2" : { }
              },
              "typeName" : "..."
            }, {
              "entityGuid" : "...",
              "entityStatus" : "DELETED",
              "propagate" : true,
              "removePropagationsOnEntityDelete" : true,
              "validityPeriods" : [ { }, { } ],
              "attributes" : {
                "property1" : { },
                "property2" : { }
              },
              "typeName" : "..."
            } ],
            "longDescription" : "...",
            "name" : "...",
            "qualifiedName" : "...",
            "shortDescription" : "...",
            "guid" : "..."
          }
        },
        "categories" : [ {
          "categoryGuid" : "...",
          "description" : "...",
          "displayText" : "...",
          "parentCategoryGuid" : "...",
          "relationGuid" : "..."
        }, {
          "categoryGuid" : "...",
          "description" : "...",
          "displayText" : "...",
          "parentCategoryGuid" : "...",
          "relationGuid" : "..."
        } ],
        "language" : "...",
        "terms" : [ {
          "description" : "...",
          "displayText" : "...",
          "expression" : "...",
          "relationGuid" : "...",
          "source" : "...",
          "status" : "OTHER",
          "steward" : "...",
          "termGuid" : "..."
        }, {
          "description" : "...",
          "displayText" : "...",
          "expression" : "...",
          "relationGuid" : "...",
          "source" : "...",
          "status" : "OTHER",
          "steward" : "...",
          "termGuid" : "..."
        } ],
        "usage" : "...",
        "classifications" : [ {
          "entityGuid" : "...",
          "entityStatus" : "DELETED",
          "propagate" : true,
          "removePropagationsOnEntityDelete" : true,
          "validityPeriods" : [ {
            "endTime" : "...",
            "startTime" : "...",
            "timeZone" : "..."
          }, {
            "endTime" : "...",
            "startTime" : "...",
            "timeZone" : "..."
          } ],
          "attributes" : {
            "property1" : { },
            "property2" : { }
          },
          "typeName" : "..."
        }, {
          "entityGuid" : "...",
          "entityStatus" : "ACTIVE",
          "propagate" : true,
          "removePropagationsOnEntityDelete" : true,
          "validityPeriods" : [ {
            "endTime" : "...",
            "startTime" : "...",
            "timeZone" : "..."
          }, {
            "endTime" : "...",
            "startTime" : "...",
            "timeZone" : "..."
          } ],
          "attributes" : {
            "property1" : { },
            "property2" : { }
          },
          "typeName" : "..."
        } ],
        "longDescription" : "...",
        "name" : "...",
        "qualifiedName" : "...",
        "shortDescription" : "...",
        "guid" : "..."
      }
    },
    "json_AtlasGlossaryHeader" : {
      "type" : "object",
      "properties" : {
        "displayText" : {
          "type" : "string",
          "description" : "The display text."
        },
        "glossaryGuid" : {
          "type" : "string",
          "description" : "The GUID of the glossary."
        },
        "relationGuid" : {
          "type" : "string",
          "description" : "The GUID of the relationship."
        }
      },
      "title" : "AtlasGlossaryHeader",
      "description" : "The glossary header with basic information.",
      "example" : {
        "displayText" : "...",
        "glossaryGuid" : "...",
        "relationGuid" : "..."
      }
    },
    "json_AtlasGlossaryTerm" : {
      "title" : "AtlasGlossaryTerm",
      "allOf" : [ {
        "$ref" : "#/definitions/json_AtlasGlossaryBaseObject"
      }, {
        "properties" : {
          "abbreviation" : {
            "type" : "string",
            "description" : "The abbreviation of the term."
          },
          "anchor" : {
            "$ref" : "#/definitions/json_AtlasGlossaryHeader"
          },
          "antonyms" : {
            "type" : "array",
            "description" : "An array of related term headers as antonyms.",
            "items" : {
              "$ref" : "#/definitions/json_AtlasRelatedTermHeader"
            }
          },
          "assignedEntities" : {
            "type" : "array",
            "description" : "An array of related object IDs.",
            "items" : {
              "$ref" : "#/definitions/json_AtlasRelatedObjectId"
            }
          },
          "categories" : {
            "type" : "array",
            "description" : "An array of term categorization headers.",
            "items" : {
              "$ref" : "#/definitions/json_AtlasTermCategorizationHeader"
            }
          },
          "classifies" : {
            "type" : "array",
            "description" : "An array of related term headers.",
            "items" : {
              "$ref" : "#/definitions/json_AtlasRelatedTermHeader"
            }
          },
          "examples" : {
            "type" : "array",
            "description" : "An array of examples.",
            "items" : {
              "type" : "string"
            }
          },
          "isA" : {
            "type" : "array",
            "description" : "An array of related term headers indicating the is-a relationship.",
            "items" : {
              "$ref" : "#/definitions/json_AtlasRelatedTermHeader"
            }
          },
          "preferredTerms" : {
            "type" : "array",
            "description" : "An array of preferred related term headers.",
            "items" : {
              "$ref" : "#/definitions/json_AtlasRelatedTermHeader"
            }
          },
          "preferredToTerms" : {
            "type" : "array",
            "description" : "An array of related term headers that are preferred to.",
            "items" : {
              "$ref" : "#/definitions/json_AtlasRelatedTermHeader"
            }
          },
          "replacedBy" : {
            "type" : "array",
            "description" : "An array of related term headers that are replaced by.",
            "items" : {
              "$ref" : "#/definitions/json_AtlasRelatedTermHeader"
            }
          },
          "replacementTerms" : {
            "type" : "array",
            "description" : "An array of related term headers for replacement.",
            "items" : {
              "$ref" : "#/definitions/json_AtlasRelatedTermHeader"
            }
          },
          "seeAlso" : {
            "type" : "array",
            "description" : "An array of related term headers for see also.",
            "items" : {
              "$ref" : "#/definitions/json_AtlasRelatedTermHeader"
            }
          },
          "synonyms" : {
            "type" : "array",
            "description" : "An array of related term headers as synonyms.",
            "items" : {
              "$ref" : "#/definitions/json_AtlasRelatedTermHeader"
            }
          },
          "translatedTerms" : {
            "type" : "array",
            "description" : "An array of translated related term headers.",
            "items" : {
              "$ref" : "#/definitions/json_AtlasRelatedTermHeader"
            }
          },
          "translationTerms" : {
            "type" : "array",
            "description" : "An array of related term headers for translation.",
            "items" : {
              "$ref" : "#/definitions/json_AtlasRelatedTermHeader"
            }
          },
          "usage" : {
            "type" : "string",
            "description" : "The usage of the term."
          },
          "validValues" : {
            "type" : "array",
            "description" : "An array of related term headers as valid values.",
            "items" : {
              "$ref" : "#/definitions/json_AtlasRelatedTermHeader"
            }
          },
          "validValuesFor" : {
            "type" : "array",
            "description" : "An array of related term headers as valid values for other records.",
            "items" : {
              "$ref" : "#/definitions/json_AtlasRelatedTermHeader"
            }
          }
        }
      } ],
      "description" : "The glossary term.",
      "example" : {
        "abbreviation" : "...",
        "anchor" : {
          "displayText" : "...",
          "glossaryGuid" : "...",
          "relationGuid" : "..."
        },
        "antonyms" : [ {
          "description" : "...",
          "displayText" : "...",
          "expression" : "...",
          "relationGuid" : "...",
          "source" : "...",
          "status" : "DRAFT",
          "steward" : "...",
          "termGuid" : "..."
        }, {
          "description" : "...",
          "displayText" : "...",
          "expression" : "...",
          "relationGuid" : "...",
          "source" : "...",
          "status" : "OBSOLETE",
          "steward" : "...",
          "termGuid" : "..."
        } ],
        "assignedEntities" : [ {
          "displayText" : "...",
          "entityStatus" : "ACTIVE",
          "relationshipAttributes" : {
            "attributes" : {
              "property1" : { },
              "property2" : { }
            },
            "typeName" : "..."
          },
          "relationshipGuid" : "...",
          "relationshipStatus" : "ACTIVE",
          "guid" : "...",
          "typeName" : "...",
          "uniqueAttributes" : {
            "property1" : { },
            "property2" : { }
          }
        }, {
          "displayText" : "...",
          "entityStatus" : "DELETED",
          "relationshipAttributes" : {
            "attributes" : {
              "property1" : { },
              "property2" : { }
            },
            "typeName" : "..."
          },
          "relationshipGuid" : "...",
          "relationshipStatus" : "DELETED",
          "guid" : "...",
          "typeName" : "...",
          "uniqueAttributes" : {
            "property1" : { },
            "property2" : { }
          }
        } ],
        "categories" : [ {
          "categoryGuid" : "...",
          "description" : "...",
          "displayText" : "...",
          "relationGuid" : "...",
          "status" : "ACTIVE"
        }, {
          "categoryGuid" : "...",
          "description" : "...",
          "displayText" : "...",
          "relationGuid" : "...",
          "status" : "OTHER"
        } ],
        "classifies" : [ {
          "description" : "...",
          "displayText" : "...",
          "expression" : "...",
          "relationGuid" : "...",
          "source" : "...",
          "status" : "OBSOLETE",
          "steward" : "...",
          "termGuid" : "..."
        }, {
          "description" : "...",
          "displayText" : "...",
          "expression" : "...",
          "relationGuid" : "...",
          "source" : "...",
          "status" : "DEPRECATED",
          "steward" : "...",
          "termGuid" : "..."
        } ],
        "examples" : [ "...", "..." ],
        "isA" : [ {
          "description" : "...",
          "displayText" : "...",
          "expression" : "...",
          "relationGuid" : "...",
          "source" : "...",
          "status" : "DEPRECATED",
          "steward" : "...",
          "termGuid" : "..."
        }, {
          "description" : "...",
          "displayText" : "...",
          "expression" : "...",
          "relationGuid" : "...",
          "source" : "...",
          "status" : "DEPRECATED",
          "steward" : "...",
          "termGuid" : "..."
        } ],
        "preferredTerms" : [ {
          "description" : "...",
          "displayText" : "...",
          "expression" : "...",
          "relationGuid" : "...",
          "source" : "...",
          "status" : "DEPRECATED",
          "steward" : "...",
          "termGuid" : "..."
        }, {
          "description" : "...",
          "displayText" : "...",
          "expression" : "...",
          "relationGuid" : "...",
          "source" : "...",
          "status" : "DRAFT",
          "steward" : "...",
          "termGuid" : "..."
        } ],
        "preferredToTerms" : [ {
          "description" : "...",
          "displayText" : "...",
          "expression" : "...",
          "relationGuid" : "...",
          "source" : "...",
          "status" : "ACTIVE",
          "steward" : "...",
          "termGuid" : "..."
        }, {
          "description" : "...",
          "displayText" : "...",
          "expression" : "...",
          "relationGuid" : "...",
          "source" : "...",
          "status" : "ACTIVE",
          "steward" : "...",
          "termGuid" : "..."
        } ],
        "replacedBy" : [ {
          "description" : "...",
          "displayText" : "...",
          "expression" : "...",
          "relationGuid" : "...",
          "source" : "...",
          "status" : "ACTIVE",
          "steward" : "...",
          "termGuid" : "..."
        }, {
          "description" : "...",
          "displayText" : "...",
          "expression" : "...",
          "relationGuid" : "...",
          "source" : "...",
          "status" : "DRAFT",
          "steward" : "...",
          "termGuid" : "..."
        } ],
        "replacementTerms" : [ {
          "description" : "...",
          "displayText" : "...",
          "expression" : "...",
          "relationGuid" : "...",
          "source" : "...",
          "status" : "DEPRECATED",
          "steward" : "...",
          "termGuid" : "..."
        }, {
          "description" : "...",
          "displayText" : "...",
          "expression" : "...",
          "relationGuid" : "...",
          "source" : "...",
          "status" : "DRAFT",
          "steward" : "...",
          "termGuid" : "..."
        } ],
        "seeAlso" : [ {
          "description" : "...",
          "displayText" : "...",
          "expression" : "...",
          "relationGuid" : "...",
          "source" : "...",
          "status" : "OTHER",
          "steward" : "...",
          "termGuid" : "..."
        }, {
          "description" : "...",
          "displayText" : "...",
          "expression" : "...",
          "relationGuid" : "...",
          "source" : "...",
          "status" : "OBSOLETE",
          "steward" : "...",
          "termGuid" : "..."
        } ],
        "synonyms" : [ {
          "description" : "...",
          "displayText" : "...",
          "expression" : "...",
          "relationGuid" : "...",
          "source" : "...",
          "status" : "ACTIVE",
          "steward" : "...",
          "termGuid" : "..."
        }, {
          "description" : "...",
          "displayText" : "...",
          "expression" : "...",
          "relationGuid" : "...",
          "source" : "...",
          "status" : "ACTIVE",
          "steward" : "...",
          "termGuid" : "..."
        } ],
        "translatedTerms" : [ {
          "description" : "...",
          "displayText" : "...",
          "expression" : "...",
          "relationGuid" : "...",
          "source" : "...",
          "status" : "DEPRECATED",
          "steward" : "...",
          "termGuid" : "..."
        }, {
          "description" : "...",
          "displayText" : "...",
          "expression" : "...",
          "relationGuid" : "...",
          "source" : "...",
          "status" : "ACTIVE",
          "steward" : "...",
          "termGuid" : "..."
        } ],
        "translationTerms" : [ {
          "description" : "...",
          "displayText" : "...",
          "expression" : "...",
          "relationGuid" : "...",
          "source" : "...",
          "status" : "OBSOLETE",
          "steward" : "...",
          "termGuid" : "..."
        }, {
          "description" : "...",
          "displayText" : "...",
          "expression" : "...",
          "relationGuid" : "...",
          "source" : "...",
          "status" : "DEPRECATED",
          "steward" : "...",
          "termGuid" : "..."
        } ],
        "usage" : "...",
        "validValues" : [ {
          "description" : "...",
          "displayText" : "...",
          "expression" : "...",
          "relationGuid" : "...",
          "source" : "...",
          "status" : "OTHER",
          "steward" : "...",
          "termGuid" : "..."
        }, {
          "description" : "...",
          "displayText" : "...",
          "expression" : "...",
          "relationGuid" : "...",
          "source" : "...",
          "status" : "DRAFT",
          "steward" : "...",
          "termGuid" : "..."
        } ],
        "validValuesFor" : [ {
          "description" : "...",
          "displayText" : "...",
          "expression" : "...",
          "relationGuid" : "...",
          "source" : "...",
          "status" : "DRAFT",
          "steward" : "...",
          "termGuid" : "..."
        }, {
          "description" : "...",
          "displayText" : "...",
          "expression" : "...",
          "relationGuid" : "...",
          "source" : "...",
          "status" : "ACTIVE",
          "steward" : "...",
          "termGuid" : "..."
        } ],
        "classifications" : [ {
          "entityGuid" : "...",
          "entityStatus" : "DELETED",
          "propagate" : true,
          "removePropagationsOnEntityDelete" : true,
          "validityPeriods" : [ {
            "endTime" : "...",
            "startTime" : "...",
            "timeZone" : "..."
          }, {
            "endTime" : "...",
            "startTime" : "...",
            "timeZone" : "..."
          } ],
          "attributes" : {
            "property1" : { },
            "property2" : { }
          },
          "typeName" : "..."
        }, {
          "entityGuid" : "...",
          "entityStatus" : "DELETED",
          "propagate" : true,
          "removePropagationsOnEntityDelete" : true,
          "validityPeriods" : [ {
            "endTime" : "...",
            "startTime" : "...",
            "timeZone" : "..."
          }, {
            "endTime" : "...",
            "startTime" : "...",
            "timeZone" : "..."
          } ],
          "attributes" : {
            "property1" : { },
            "property2" : { }
          },
          "typeName" : "..."
        } ],
        "longDescription" : "...",
        "name" : "...",
        "qualifiedName" : "...",
        "shortDescription" : "...",
        "guid" : "..."
      }
    },
    "json_AtlasLineageInfo" : {
      "type" : "object",
      "properties" : {
        "baseEntityGuid" : {
          "type" : "string",
          "description" : "The GUID of the base entity."
        },
        "guidEntityMap" : {
          "type" : "object",
          "description" : "The GUID entity map.",
          "additionalProperties" : {
            "$ref" : "#/definitions/json_AtlasEntityHeader"
          }
        },
        "lineageDepth" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The depth of lineage."
        },
        "lineageDirection" : {
          "$ref" : "#/definitions/json_LineageDirection"
        },
        "relations" : {
          "type" : "array",
          "description" : "An array of lineage relations.",
          "items" : {
            "$ref" : "#/definitions/json_LineageRelation"
          }
        }
      },
      "title" : "AtlasLineageInfo",
      "description" : "The lineage information.",
      "example" : {
        "baseEntityGuid" : "...",
        "guidEntityMap" : {
          "property1" : {
            "classificationNames" : [ "...", "..." ],
            "classifications" : [ {
              "entityGuid" : "...",
              "entityStatus" : "DELETED",
              "propagate" : true,
              "removePropagationsOnEntityDelete" : true,
              "validityPeriods" : [ { }, { } ],
              "attributes" : {
                "property1" : { },
                "property2" : { }
              },
              "typeName" : "..."
            }, {
              "entityGuid" : "...",
              "entityStatus" : "ACTIVE",
              "propagate" : true,
              "removePropagationsOnEntityDelete" : true,
              "validityPeriods" : [ { }, { } ],
              "attributes" : {
                "property1" : { },
                "property2" : { }
              },
              "typeName" : "..."
            } ],
            "displayText" : "...",
            "guid" : "...",
            "meaningNames" : [ "...", "..." ],
            "meanings" : [ {
              "confidence" : 12345,
              "createdBy" : "...",
              "description" : "...",
              "displayText" : "...",
              "expression" : "...",
              "relationGuid" : "...",
              "source" : "...",
              "status" : "VALIDATED",
              "steward" : "...",
              "termGuid" : "..."
            }, {
              "confidence" : 12345,
              "createdBy" : "...",
              "description" : "...",
              "displayText" : "...",
              "expression" : "...",
              "relationGuid" : "...",
              "source" : "...",
              "status" : "DISCOVERED",
              "steward" : "...",
              "termGuid" : "..."
            } ],
            "status" : "DELETED",
            "attributes" : {
              "property1" : { },
              "property2" : { }
            },
            "typeName" : "..."
          },
          "property2" : {
            "classificationNames" : [ "...", "..." ],
            "classifications" : [ {
              "entityGuid" : "...",
              "entityStatus" : "ACTIVE",
              "propagate" : true,
              "removePropagationsOnEntityDelete" : true,
              "validityPeriods" : [ { }, { } ],
              "attributes" : {
                "property1" : { },
                "property2" : { }
              },
              "typeName" : "..."
            }, {
              "entityGuid" : "...",
              "entityStatus" : "ACTIVE",
              "propagate" : true,
              "removePropagationsOnEntityDelete" : true,
              "validityPeriods" : [ { }, { } ],
              "attributes" : {
                "property1" : { },
                "property2" : { }
              },
              "typeName" : "..."
            } ],
            "displayText" : "...",
            "guid" : "...",
            "meaningNames" : [ "...", "..." ],
            "meanings" : [ {
              "confidence" : 12345,
              "createdBy" : "...",
              "description" : "...",
              "displayText" : "...",
              "expression" : "...",
              "relationGuid" : "...",
              "source" : "...",
              "status" : "IMPORTED",
              "steward" : "...",
              "termGuid" : "..."
            }, {
              "confidence" : 12345,
              "createdBy" : "...",
              "description" : "...",
              "displayText" : "...",
              "expression" : "...",
              "relationGuid" : "...",
              "source" : "...",
              "status" : "VALIDATED",
              "steward" : "...",
              "termGuid" : "..."
            } ],
            "status" : "DELETED",
            "attributes" : {
              "property1" : { },
              "property2" : { }
            },
            "typeName" : "..."
          }
        },
        "lineageDepth" : 12345,
        "lineageDirection" : "INPUT",
        "relations" : [ {
          "fromEntityId" : "...",
          "relationshipId" : "...",
          "toEntityId" : "..."
        }, {
          "fromEntityId" : "...",
          "relationshipId" : "...",
          "toEntityId" : "..."
        } ]
      }
    },
    "json_AtlasObjectId" : {
      "type" : "object",
      "properties" : {
        "guid" : {
          "type" : "string",
          "description" : "The GUID of the object."
        },
        "typeName" : {
          "type" : "string",
          "description" : "The name of the type."
        },
        "uniqueAttributes" : {
          "type" : "object",
          "description" : "The unique attributes of the object.",
          "additionalProperties" : {
            "type" : "object",
            "properties" : { }
          }
        }
      },
      "title" : "AtlasObjectId",
      "description" : "Reference to an object-instance of an Atlas type - like entity.",
      "example" : {
        "guid" : "...",
        "typeName" : "...",
        "uniqueAttributes" : {
          "property1" : { },
          "property2" : { }
        }
      }
    },
    "json_AtlasQueryType" : {
      "type" : "string",
      "title" : "AtlasQueryType",
      "description" : "The type of query.",
      "enum" : [ "DSL", "FULL_TEXT", "GREMLIN", "BASIC", "ATTRIBUTE", "RELATIONSHIP" ]
    },
    "json_AtlasRelatedCategoryHeader" : {
      "type" : "object",
      "properties" : {
        "categoryGuid" : {
          "type" : "string",
          "description" : "The GUID of the category."
        },
        "description" : {
          "type" : "string",
          "description" : "The description of the category header."
        },
        "displayText" : {
          "type" : "string",
          "description" : "The display text."
        },
        "parentCategoryGuid" : {
          "type" : "string",
          "description" : "The GUID of the parent category."
        },
        "relationGuid" : {
          "type" : "string",
          "description" : "The GUID of the relationship."
        }
      },
      "title" : "AtlasRelatedCategoryHeader",
      "description" : "The header of the related category.",
      "example" : {
        "categoryGuid" : "...",
        "description" : "...",
        "displayText" : "...",
        "parentCategoryGuid" : "...",
        "relationGuid" : "..."
      }
    },
    "json_AtlasRelatedObjectId" : {
      "title" : "AtlasRelatedObjectId",
      "allOf" : [ {
        "$ref" : "#/definitions/json_AtlasObjectId"
      }, {
        "properties" : {
          "displayText" : {
            "type" : "string",
            "description" : "The display text."
          },
          "entityStatus" : {
            "$ref" : "#/definitions/json_Status"
          },
          "relationshipAttributes" : {
            "$ref" : "#/definitions/json_AtlasStruct"
          },
          "relationshipGuid" : {
            "type" : "string",
            "description" : "The GUID of the relationship."
          },
          "relationshipStatus" : {
            "$ref" : "#/definitions/json_Status_AtlasRelationship"
          }
        }
      } ],
      "description" : "Reference to an object-instance of AtlasEntity type used in relationship attribute values",
      "example" : {
        "displayText" : "...",
        "entityStatus" : "ACTIVE",
        "relationshipAttributes" : {
          "attributes" : {
            "property1" : { },
            "property2" : { }
          },
          "typeName" : "..."
        },
        "relationshipGuid" : "...",
        "relationshipStatus" : "ACTIVE",
        "guid" : "...",
        "typeName" : "...",
        "uniqueAttributes" : {
          "property1" : { },
          "property2" : { }
        }
      }
    },
    "json_AtlasObjectIdWithParentGuid" : {
      "title" : "AtlasObjectIdWithParentGuid",
      "allOf" : [ {
        "$ref" : "#/definitions/json_AtlasObjectId"
      }, {
        "properties" : {
          "parentEntityGuid" : {
            "type" : "string",
            "description" : "The parent entity guid."
          }
        }
      } ],
      "description" : "Reference to an object-instance of AtlasEntity type along with its parent entity guid",
      "example" : {
        "guid" : "...",
        "typeName" : "...",
        "uniqueAttributes" : {
          "property1" : { },
          "property2" : { }
        },
        "parentEntityGuid": "..."
      }
    },
    "json_AtlasRelatedTermHeader" : {
      "type" : "object",
      "properties" : {
        "description" : {
          "type" : "string",
          "description" : "The description of the related term."
        },
        "displayText" : {
          "type" : "string",
          "description" : "The display text."
        },
        "expression" : {
          "type" : "string",
          "description" : "The expression of the term."
        },
        "relationGuid" : {
          "type" : "string",
          "description" : "The GUID of the relationship."
        },
        "source" : {
          "type" : "string",
          "description" : "The source of the term."
        },
        "status" : {
          "$ref" : "#/definitions/json_AtlasTermRelationshipStatus"
        },
        "steward" : {
          "type" : "string",
          "description" : "The steward of the term."
        },
        "termGuid" : {
          "type" : "string",
          "description" : "The GUID of the term."
        }
      },
      "title" : "AtlasRelatedTermHeader",
      "description" : "The header of the related term.",
      "example" : {
        "description" : "...",
        "displayText" : "...",
        "expression" : "...",
        "relationGuid" : "...",
        "source" : "...",
        "status" : "DRAFT",
        "steward" : "...",
        "termGuid" : "..."
      }
    },
    "json_AtlasRelationship" : {
      "title" : "AtlasRelationship",
      "allOf" : [ {
        "$ref" : "#/definitions/json_AtlasStruct"
      }, {
        "properties" : {
          "blockedPropagatedClassifications" : {
            "type" : "array",
            "description" : "An array of blocked propagated classifications.",
            "items" : {
              "$ref" : "#/definitions/json_AtlasClassification"
            }
          },
          "createTime" : {
            "type" : "number",
            "description" : "The created time of the record."
          },
          "createdBy" : {
            "type" : "string",
            "description" : "The user who created the record."
          },
          "end1" : {
            "$ref" : "#/definitions/json_AtlasObjectId"
          },
          "end2" : {
            "$ref" : "#/definitions/json_AtlasObjectId"
          },
          "guid" : {
            "type" : "string",
            "description" : "The GUID of the relationship."
          },
          "homeId" : {
            "type" : "string",
            "description" : "The home ID of the relationship."
          },
          "label" : {
            "type" : "string",
            "description" : "The label of the relationship."
          },
          "propagateTags" : {
            "$ref" : "#/definitions/json_PropagateTags"
          },
          "propagatedClassifications" : {
            "type" : "array",
            "description" : "An array of propagated classifications.",
            "items" : {
              "$ref" : "#/definitions/json_AtlasClassification"
            }
          },
          "status" : {
            "$ref" : "#/definitions/json_Status_AtlasRelationship"
          },
          "updateTime" : {
            "type" : "number",
            "description" : "The update time of the record."
          },
          "updatedBy" : {
            "type" : "string",
            "description" : "The user who updated the record."
          },
          "version" : {
            "type" : "number",
            "description" : "The version of the relationship."
          }
        }
      } ],
      "description" : "Atlas relationship instance.",
      "example" : {
        "blockedPropagatedClassifications" : [ {
          "entityGuid" : "...",
          "entityStatus" : "ACTIVE",
          "propagate" : true,
          "removePropagationsOnEntityDelete" : true,
          "validityPeriods" : [ {
            "endTime" : "...",
            "startTime" : "...",
            "timeZone" : "..."
          }, {
            "endTime" : "...",
            "startTime" : "...",
            "timeZone" : "..."
          } ],
          "attributes" : {
            "property1" : { },
            "property2" : { }
          },
          "typeName" : "..."
        }, {
          "entityGuid" : "...",
          "entityStatus" : "DELETED",
          "propagate" : true,
          "removePropagationsOnEntityDelete" : true,
          "validityPeriods" : [ {
            "endTime" : "...",
            "startTime" : "...",
            "timeZone" : "..."
          }, {
            "endTime" : "...",
            "startTime" : "...",
            "timeZone" : "..."
          } ],
          "attributes" : {
            "property1" : { },
            "property2" : { }
          },
          "typeName" : "..."
        } ],
        "createTime" : 12345,
        "createdBy" : "...",
        "end1" : {
          "guid" : "...",
          "typeName" : "...",
          "uniqueAttributes" : {
            "property1" : { },
            "property2" : { }
          }
        },
        "end2" : {
          "guid" : "...",
          "typeName" : "...",
          "uniqueAttributes" : {
            "property1" : { },
            "property2" : { }
          }
        },
        "guid" : "...",
        "homeId" : "...",
        "label" : "...",
        "propagateTags" : "TWO_TO_ONE",
        "propagatedClassifications" : [ {
          "entityGuid" : "...",
          "entityStatus" : "ACTIVE",
          "propagate" : true,
          "removePropagationsOnEntityDelete" : true,
          "validityPeriods" : [ {
            "endTime" : "...",
            "startTime" : "...",
            "timeZone" : "..."
          }, {
            "endTime" : "...",
            "startTime" : "...",
            "timeZone" : "..."
          } ],
          "attributes" : {
            "property1" : { },
            "property2" : { }
          },
          "typeName" : "..."
        }, {
          "entityGuid" : "...",
          "entityStatus" : "DELETED",
          "propagate" : true,
          "removePropagationsOnEntityDelete" : true,
          "validityPeriods" : [ {
            "endTime" : "...",
            "startTime" : "...",
            "timeZone" : "..."
          }, {
            "endTime" : "...",
            "startTime" : "...",
            "timeZone" : "..."
          } ],
          "attributes" : {
            "property1" : { },
            "property2" : { }
          },
          "typeName" : "..."
        } ],
        "status" : "DELETED",
        "updateTime" : 12345,
        "updatedBy" : "...",
        "version" : 12345,
        "attributes" : {
          "property1" : { },
          "property2" : { }
        },
        "typeName" : "..."
      }
    },
    "json_AtlasRelationshipDef" : {
      "title" : "AtlasRelationshipDef",
      "allOf" : [ {
        "$ref" : "#/definitions/json_AtlasStructDef"
      }, {
        "properties" : {
          "endDef1" : {
            "$ref" : "#/definitions/json_AtlasRelationshipEndDef"
          },
          "endDef2" : {
            "$ref" : "#/definitions/json_AtlasRelationshipEndDef"
          },
          "propagateTags" : {
            "$ref" : "#/definitions/json_PropagateTags"
          },
          "relationshipCategory" : {
            "$ref" : "#/definitions/json_RelationshipCategory"
          },
          "relationshipLabel" : {
            "type" : "string",
            "description" : "The label of the relationship."
          }
        }
      } ],
      "description" : "AtlasRelationshipDef is a TypeDef that defines a relationship.\n<p>\nAs with other typeDefs the AtlasRelationshipDef has a name. Once created the RelationshipDef has a guid.\nThe name and the guid are the 2 ways that the RelationshipDef is identified.\n<p>\nRelationshipDefs have 2 ends, each of which specify cardinality, an EntityDef type name and name and optionally\nwhether the end is a container.\n<p>\nRelationshipDefs can have AttributeDefs - though only primitive types are allowed. <br>\nRelationshipDefs have a relationshipCategory specifying the UML type of relationship required <br>\nRelationshipDefs also have a PropogateTag - indicating which way tags could flow over the relationships.\n<p>\nThe way EntityDefs and RelationshipDefs are intended to be used is that EntityDefs will define AttributeDefs these AttributeDefs\nwill not specify an EntityDef type name as their types.\n<p>\nRelationshipDefs introduce new atributes to the entity instances. For example\n<p>\nEntityDef A might have attributes attr1,attr2,attr3 <br>\nEntityDef B might have attributes attr4,attr5,attr6 <br>\nRelationshipDef AtoB might define 2 ends <br>\n\n<pre>\n   end1:  type A, name attr7\n   end2:  type B, name attr8  </pre>\n\n<p>\nWhen an instance of EntityDef A is created, it will have attributes attr1,attr2,attr3,attr7 <br>\nWhen an instance of EntityDef B is created, it will have attributes attr4,attr5,attr6,attr8\n<p>\nIn this way relationshipDefs can be authored separately from entityDefs and can inject relationship attributes into\nthe entity instances",
      "example" : {
        "endDef1" : {
          "cardinality" : "LIST",
          "description" : "...",
          "isContainer" : true,
          "isLegacyAttribute" : true,
          "name" : "...",
          "type" : "..."
        },
        "endDef2" : {
          "cardinality" : "SET",
          "description" : "...",
          "isContainer" : true,
          "isLegacyAttribute" : true,
          "name" : "...",
          "type" : "..."
        },
        "propagateTags" : "ONE_TO_TWO",
        "relationshipCategory" : "ASSOCIATION",
        "relationshipLabel" : "...",
        "attributeDefs" : [ {
          "cardinality" : "SINGLE",
          "constraints" : [ {
            "params" : {
              "property1" : { },
              "property2" : { }
            },
            "type" : "..."
          }, {
            "params" : {
              "property1" : { },
              "property2" : { }
            },
            "type" : "..."
          } ],
          "defaultValue" : "...",
          "description" : "...",
          "includeInNotification" : true,
          "isIndexable" : true,
          "isOptional" : true,
          "isUnique" : true,
          "name" : "...",
          "options" : {
            "property1" : "...",
            "property2" : "..."
          },
          "typeName" : "...",
          "valuesMaxCount" : 12345,
          "valuesMinCount" : 12345
        }, {
          "cardinality" : "LIST",
          "constraints" : [ {
            "params" : {
              "property1" : { },
              "property2" : { }
            },
            "type" : "..."
          }, {
            "params" : {
              "property1" : { },
              "property2" : { }
            },
            "type" : "..."
          } ],
          "defaultValue" : "...",
          "description" : "...",
          "includeInNotification" : true,
          "isIndexable" : true,
          "isOptional" : true,
          "isUnique" : true,
          "name" : "...",
          "options" : {
            "property1" : "...",
            "property2" : "..."
          },
          "typeName" : "...",
          "valuesMaxCount" : 12345,
          "valuesMinCount" : 12345
        } ],
        "category" : "MAP",
        "createTime" : 12345,
        "createdBy" : "...",
        "dateFormatter" : {
          "availableLocales" : [ "...", "..." ],
          "calendar" : 12345,
          "dateInstance" : { },
          "dateTimeInstance" : { },
          "instance" : { },
          "lenient" : true,
          "numberFormat" : {
            "availableLocales" : [ "...", "..." ],
            "currency" : "...",
            "currencyInstance" : { },
            "groupingUsed" : true,
            "instance" : { },
            "integerInstance" : { },
            "maximumFractionDigits" : 12345,
            "maximumIntegerDigits" : 12345,
            "minimumFractionDigits" : 12345,
            "minimumIntegerDigits" : 12345,
            "numberInstance" : { },
            "parseIntegerOnly" : true,
            "percentInstance" : { },
            "roundingMode" : "HALF_UP"
          },
          "timeInstance" : { },
          "timeZone" : {
            "DSTSavings" : 12345,
            "ID" : "...",
            "availableIDs" : [ "...", "..." ],
            "default" : { },
            "displayName" : "...",
            "rawOffset" : 12345
          }
        },
        "description" : "...",
        "guid" : "...",
        "name" : "...",
        "options" : {
          "property1" : "...",
          "property2" : "..."
        },
        "typeVersion" : "...",
        "updateTime" : 12345,
        "updatedBy" : "...",
        "version" : 12345
      }
    },
    "json_AtlasRelationshipEndDef" : {
      "type" : "object",
      "properties" : {
        "cardinality" : {
          "$ref" : "#/definitions/json_Cardinality"
        },
        "description" : {
          "type" : "string",
          "description" : "The description of the relationship end definition."
        },
        "isContainer" : {
          "type" : "boolean",
          "description" : "Determines if it is container."
        },
        "isLegacyAttribute" : {
          "type" : "boolean",
          "description" : "Determines if it is a legacy attribute."
        },
        "name" : {
          "type" : "string",
          "description" : "The name of the relationship end definition."
        },
        "type" : {
          "type" : "string",
          "description" : "The type of the relationship end."
        }
      },
      "title" : "AtlasRelationshipEndDef",
      "description" : "The relationshipEndDef represents an end of the relationship. The end of the relationship is defined by a type, an\nattribute name, cardinality and whether it  is the container end of the relationship.",
      "example" : {
        "cardinality" : "LIST",
        "description" : "...",
        "isContainer" : true,
        "isLegacyAttribute" : true,
        "name" : "...",
        "type" : "..."
      }
    },
    "json_AtlasRelationshipWithExtInfo" : {
      "type" : "object",
      "properties" : {
        "referredEntities" : {
          "type" : "object",
          "description" : "The referred entity header.",
          "additionalProperties" : {
            "$ref" : "#/definitions/json_AtlasEntityHeader"
          }
        },
        "relationship" : {
          "$ref" : "#/definitions/json_AtlasRelationship"
        }
      },
      "title" : "AtlasRelationshipWithExtInfo",
      "description" : "The relationship with extended information.",
      "example" : {
        "referredEntities" : {
          "property1" : {
            "classificationNames" : [ "...", "..." ],
            "classifications" : [ {
              "entityGuid" : "...",
              "entityStatus" : "DELETED",
              "propagate" : true,
              "removePropagationsOnEntityDelete" : true,
              "validityPeriods" : [ { }, { } ],
              "attributes" : {
                "property1" : { },
                "property2" : { }
              },
              "typeName" : "..."
            }, {
              "entityGuid" : "...",
              "entityStatus" : "DELETED",
              "propagate" : true,
              "removePropagationsOnEntityDelete" : true,
              "validityPeriods" : [ { }, { } ],
              "attributes" : {
                "property1" : { },
                "property2" : { }
              },
              "typeName" : "..."
            } ],
            "displayText" : "...",
            "guid" : "...",
            "meaningNames" : [ "...", "..." ],
            "meanings" : [ {
              "confidence" : 12345,
              "createdBy" : "...",
              "description" : "...",
              "displayText" : "...",
              "expression" : "...",
              "relationGuid" : "...",
              "source" : "...",
              "status" : "IMPORTED",
              "steward" : "...",
              "termGuid" : "..."
            }, {
              "confidence" : 12345,
              "createdBy" : "...",
              "description" : "...",
              "displayText" : "...",
              "expression" : "...",
              "relationGuid" : "...",
              "source" : "...",
              "status" : "PROPOSED",
              "steward" : "...",
              "termGuid" : "..."
            } ],
            "status" : "DELETED",
            "attributes" : {
              "property1" : { },
              "property2" : { }
            },
            "typeName" : "..."
          },
          "property2" : {
            "classificationNames" : [ "...", "..." ],
            "classifications" : [ {
              "entityGuid" : "...",
              "entityStatus" : "ACTIVE",
              "propagate" : true,
              "removePropagationsOnEntityDelete" : true,
              "validityPeriods" : [ { }, { } ],
              "attributes" : {
                "property1" : { },
                "property2" : { }
              },
              "typeName" : "..."
            }, {
              "entityGuid" : "...",
              "entityStatus" : "ACTIVE",
              "propagate" : true,
              "removePropagationsOnEntityDelete" : true,
              "validityPeriods" : [ { }, { } ],
              "attributes" : {
                "property1" : { },
                "property2" : { }
              },
              "typeName" : "..."
            } ],
            "displayText" : "...",
            "guid" : "...",
            "meaningNames" : [ "...", "..." ],
            "meanings" : [ {
              "confidence" : 12345,
              "createdBy" : "...",
              "description" : "...",
              "displayText" : "...",
              "expression" : "...",
              "relationGuid" : "...",
              "source" : "...",
              "status" : "DISCOVERED",
              "steward" : "...",
              "termGuid" : "..."
            }, {
              "confidence" : 12345,
              "createdBy" : "...",
              "description" : "...",
              "displayText" : "...",
              "expression" : "...",
              "relationGuid" : "...",
              "source" : "...",
              "status" : "OTHER",
              "steward" : "...",
              "termGuid" : "..."
            } ],
            "status" : "ACTIVE",
            "attributes" : {
              "property1" : { },
              "property2" : { }
            },
            "typeName" : "..."
          }
        },
        "relationship" : {
          "blockedPropagatedClassifications" : [ {
            "entityGuid" : "...",
            "entityStatus" : "ACTIVE",
            "propagate" : true,
            "removePropagationsOnEntityDelete" : true,
            "validityPeriods" : [ { }, { } ],
            "attributes" : {
              "property1" : { },
              "property2" : { }
            },
            "typeName" : "..."
          }, {
            "entityGuid" : "...",
            "entityStatus" : "ACTIVE",
            "propagate" : true,
            "removePropagationsOnEntityDelete" : true,
            "validityPeriods" : [ { }, { } ],
            "attributes" : {
              "property1" : { },
              "property2" : { }
            },
            "typeName" : "..."
          } ],
          "createTime" : 12345,
          "createdBy" : "...",
          "end1" : {
            "guid" : "...",
            "typeName" : "...",
            "uniqueAttributes" : {
              "property1" : { },
              "property2" : { }
            }
          },
          "end2" : {
            "guid" : "...",
            "typeName" : "...",
            "uniqueAttributes" : {
              "property1" : { },
              "property2" : { }
            }
          },
          "guid" : "...",
          "homeId" : "...",
          "label" : "...",
          "propagateTags" : "TWO_TO_ONE",
          "propagatedClassifications" : [ {
            "entityGuid" : "...",
            "entityStatus" : "ACTIVE",
            "propagate" : true,
            "removePropagationsOnEntityDelete" : true,
            "validityPeriods" : [ { }, { } ],
            "attributes" : {
              "property1" : { },
              "property2" : { }
            },
            "typeName" : "..."
          }, {
            "entityGuid" : "...",
            "entityStatus" : "DELETED",
            "propagate" : true,
            "removePropagationsOnEntityDelete" : true,
            "validityPeriods" : [ { }, { } ],
            "attributes" : {
              "property1" : { },
              "property2" : { }
            },
            "typeName" : "..."
          } ],
          "status" : "DELETED",
          "updateTime" : 12345,
          "updatedBy" : "...",
          "version" : 12345,
          "attributes" : {
            "property1" : { },
            "property2" : { }
          },
          "typeName" : "..."
        }
      }
    },
    "json_AtlasSearchResult" : {
      "type" : "object",
      "properties" : {
        "attributes" : {
          "$ref" : "#/definitions/json_AttributeSearchResult"
        },
        "classification" : {
          "type" : "string",
          "description" : "The classification of the result."
        },
        "entities" : {
          "type" : "array",
          "description" : "An array of entity headers.",
          "items" : {
            "$ref" : "#/definitions/json_AtlasEntityHeader"
          }
        },
        "fullTextResult" : {
          "type" : "array",
          "description" : "The full text search result.",
          "items" : {
            "$ref" : "#/definitions/json_AtlasFullTextResult"
          }
        },
        "queryText" : {
          "type" : "string",
          "description" : "The query text."
        },
        "queryType" : {
          "$ref" : "#/definitions/json_AtlasQueryType"
        },
        "referredEntities" : {
          "type" : "object",
          "description" : "The referred entity header.",
          "additionalProperties" : {
            "$ref" : "#/definitions/json_AtlasEntityHeader"
          }
        },
        "searchParameters" : {
          "$ref" : "#/definitions/json_SearchParameters"
        },
        "type" : {
          "type" : "string",
          "description" : "The type of the record."
        }
      },
      "title" : "AtlasSearchResult",
      "description" : "The result of the search.",
      "example" : {
        "attributes" : {
          "name" : [ "...", "..." ],
          "values" : [ ]
        },
        "classification" : "...",
        "entities" : [ {
          "classificationNames" : [ "...", "..." ],
          "classifications" : [ {
            "entityGuid" : "...",
            "entityStatus" : "DELETED",
            "propagate" : true,
            "removePropagationsOnEntityDelete" : true,
            "validityPeriods" : [ { }, { } ],
            "attributes" : {
              "property1" : { },
              "property2" : { }
            },
            "typeName" : "..."
          }, {
            "entityGuid" : "...",
            "entityStatus" : "ACTIVE",
            "propagate" : true,
            "removePropagationsOnEntityDelete" : true,
            "validityPeriods" : [ { }, { } ],
            "attributes" : {
              "property1" : { },
              "property2" : { }
            },
            "typeName" : "..."
          } ],
          "displayText" : "...",
          "guid" : "...",
          "meaningNames" : [ "...", "..." ],
          "meanings" : [ {
            "confidence" : 12345,
            "createdBy" : "...",
            "description" : "...",
            "displayText" : "...",
            "expression" : "...",
            "relationGuid" : "...",
            "source" : "...",
            "status" : "DISCOVERED",
            "steward" : "...",
            "termGuid" : "..."
          }, {
            "confidence" : 12345,
            "createdBy" : "...",
            "description" : "...",
            "displayText" : "...",
            "expression" : "...",
            "relationGuid" : "...",
            "source" : "...",
            "status" : "PROPOSED",
            "steward" : "...",
            "termGuid" : "..."
          } ],
          "status" : "DELETED",
          "attributes" : {
            "property1" : { },
            "property2" : { }
          },
          "typeName" : "..."
        }, {
          "classificationNames" : [ "...", "..." ],
          "classifications" : [ {
            "entityGuid" : "...",
            "entityStatus" : "DELETED",
            "propagate" : true,
            "removePropagationsOnEntityDelete" : true,
            "validityPeriods" : [ { }, { } ],
            "attributes" : {
              "property1" : { },
              "property2" : { }
            },
            "typeName" : "..."
          }, {
            "entityGuid" : "...",
            "entityStatus" : "DELETED",
            "propagate" : true,
            "removePropagationsOnEntityDelete" : true,
            "validityPeriods" : [ { }, { } ],
            "attributes" : {
              "property1" : { },
              "property2" : { }
            },
            "typeName" : "..."
          } ],
          "displayText" : "...",
          "guid" : "...",
          "meaningNames" : [ "...", "..." ],
          "meanings" : [ {
            "confidence" : 12345,
            "createdBy" : "...",
            "description" : "...",
            "displayText" : "...",
            "expression" : "...",
            "relationGuid" : "...",
            "source" : "...",
            "status" : "DEPRECATED",
            "steward" : "...",
            "termGuid" : "..."
          }, {
            "confidence" : 12345,
            "createdBy" : "...",
            "description" : "...",
            "displayText" : "...",
            "expression" : "...",
            "relationGuid" : "...",
            "source" : "...",
            "status" : "PROPOSED",
            "steward" : "...",
            "termGuid" : "..."
          } ],
          "status" : "ACTIVE",
          "attributes" : {
            "property1" : { },
            "property2" : { }
          },
          "typeName" : "..."
        } ],
        "fullTextResult" : [ {
          "entity" : {
            "classificationNames" : [ "...", "..." ],
            "classifications" : [ { }, { } ],
            "displayText" : "...",
            "guid" : "...",
            "meaningNames" : [ "...", "..." ],
            "meanings" : [ { }, { } ],
            "status" : "ACTIVE",
            "attributes" : {
              "property1" : { },
              "property2" : { }
            },
            "typeName" : "..."
          },
          "score" : 12345
        }, {
          "entity" : {
            "classificationNames" : [ "...", "..." ],
            "classifications" : [ { }, { } ],
            "displayText" : "...",
            "guid" : "...",
            "meaningNames" : [ "...", "..." ],
            "meanings" : [ { }, { } ],
            "status" : "ACTIVE",
            "attributes" : {
              "property1" : { },
              "property2" : { }
            },
            "typeName" : "..."
          },
          "score" : 12345
        } ],
        "queryText" : "...",
        "queryType" : "RELATIONSHIP",
        "referredEntities" : {
          "property1" : {
            "classificationNames" : [ "...", "..." ],
            "classifications" : [ {
              "entityGuid" : "...",
              "entityStatus" : "ACTIVE",
              "propagate" : true,
              "removePropagationsOnEntityDelete" : true,
              "validityPeriods" : [ { }, { } ],
              "attributes" : {
                "property1" : { },
                "property2" : { }
              },
              "typeName" : "..."
            }, {
              "entityGuid" : "...",
              "entityStatus" : "DELETED",
              "propagate" : true,
              "removePropagationsOnEntityDelete" : true,
              "validityPeriods" : [ { }, { } ],
              "attributes" : {
                "property1" : { },
                "property2" : { }
              },
              "typeName" : "..."
            } ],
            "displayText" : "...",
            "guid" : "...",
            "meaningNames" : [ "...", "..." ],
            "meanings" : [ {
              "confidence" : 12345,
              "createdBy" : "...",
              "description" : "...",
              "displayText" : "...",
              "expression" : "...",
              "relationGuid" : "...",
              "source" : "...",
              "status" : "DEPRECATED",
              "steward" : "...",
              "termGuid" : "..."
            }, {
              "confidence" : 12345,
              "createdBy" : "...",
              "description" : "...",
              "displayText" : "...",
              "expression" : "...",
              "relationGuid" : "...",
              "source" : "...",
              "status" : "OTHER",
              "steward" : "...",
              "termGuid" : "..."
            } ],
            "status" : "DELETED",
            "attributes" : {
              "property1" : { },
              "property2" : { }
            },
            "typeName" : "..."
          },
          "property2" : {
            "classificationNames" : [ "...", "..." ],
            "classifications" : [ {
              "entityGuid" : "...",
              "entityStatus" : "ACTIVE",
              "propagate" : true,
              "removePropagationsOnEntityDelete" : true,
              "validityPeriods" : [ { }, { } ],
              "attributes" : {
                "property1" : { },
                "property2" : { }
              },
              "typeName" : "..."
            }, {
              "entityGuid" : "...",
              "entityStatus" : "DELETED",
              "propagate" : true,
              "removePropagationsOnEntityDelete" : true,
              "validityPeriods" : [ { }, { } ],
              "attributes" : {
                "property1" : { },
                "property2" : { }
              },
              "typeName" : "..."
            } ],
            "displayText" : "...",
            "guid" : "...",
            "meaningNames" : [ "...", "..." ],
            "meanings" : [ {
              "confidence" : 12345,
              "createdBy" : "...",
              "description" : "...",
              "displayText" : "...",
              "expression" : "...",
              "relationGuid" : "...",
              "source" : "...",
              "status" : "PROPOSED",
              "steward" : "...",
              "termGuid" : "..."
            }, {
              "confidence" : 12345,
              "createdBy" : "...",
              "description" : "...",
              "displayText" : "...",
              "expression" : "...",
              "relationGuid" : "...",
              "source" : "...",
              "status" : "PROPOSED",
              "steward" : "...",
              "termGuid" : "..."
            } ],
            "status" : "DELETED",
            "attributes" : {
              "property1" : { },
              "property2" : { }
            },
            "typeName" : "..."
          }
        },
        "searchParameters" : {
          "attributes" : [ "...", "..." ],
          "classification" : "...",
          "entityFilters" : {
            "attributeName" : "...",
            "attributeValue" : "...",
            "condition" : "OR",
            "criterion" : [ { }, { } ],
            "operator" : "CONTAINS_ANY"
          },
          "excludeDeletedEntities" : true,
          "includeClassificationAttributes" : true,
          "includeSubClassifications" : true,
          "includeSubTypes" : true,
          "limit" : 12345,
          "offset" : 12345,
          "query" : "...",
          "tagFilters" : {
            "attributeName" : "...",
            "attributeValue" : "...",
            "condition" : "OR",
            "criterion" : [ { }, { } ],
            "operator" : "IN"
          },
          "termName" : "...",
          "typeName" : "..."
        },
        "type" : "..."
      }
    },
    "json_AtlasStruct" : {
      "type" : "object",
      "properties" : {
        "attributes" : {
          "type" : "object",
          "description" : "The attributes of the struct.",
          "additionalProperties" : {
            "type" : "object",
            "properties" : { }
          }
        },
        "typeName" : {
          "type" : "string",
          "description" : "The name of the type."
        }
      },
      "title" : "AtlasStruct",
      "description" : "Captures details of struct contents. Not instantiated directly, used only via AtlasEntity, AtlasClassification.",
      "example" : {
        "attributes" : {
          "property1" : { },
          "property2" : { }
        },
        "typeName" : "..."
      }
    },
    "json_AtlasStructDef" : {
      "title" : "AtlasStructDef",
      "allOf" : [ {
        "$ref" : "#/definitions/json_AtlasBaseTypeDef"
      }, {
        "properties" : {
          "attributeDefs" : {
            "type" : "array",
            "description" : "An array of attribute definitions.",
            "items" : {
              "$ref" : "#/definitions/json_AtlasAttributeDef"
            }
          }
        }
      } ],
      "description" : "class that captures details of a struct-type.",
      "example" : {
        "attributeDefs" : [ {
          "cardinality" : "LIST",
          "constraints" : [ {
            "params" : {
              "property1" : { },
              "property2" : { }
            },
            "type" : "..."
          }, {
            "params" : {
              "property1" : { },
              "property2" : { }
            },
            "type" : "..."
          } ],
          "defaultValue" : "...",
          "description" : "...",
          "includeInNotification" : true,
          "isIndexable" : true,
          "isOptional" : true,
          "isUnique" : true,
          "name" : "...",
          "options" : {
            "property1" : "...",
            "property2" : "..."
          },
          "typeName" : "...",
          "valuesMaxCount" : 12345,
          "valuesMinCount" : 12345
        }, {
          "cardinality" : "SET",
          "constraints" : [ {
            "params" : {
              "property1" : { },
              "property2" : { }
            },
            "type" : "..."
          }, {
            "params" : {
              "property1" : { },
              "property2" : { }
            },
            "type" : "..."
          } ],
          "defaultValue" : "...",
          "description" : "...",
          "includeInNotification" : true,
          "isIndexable" : true,
          "isOptional" : true,
          "isUnique" : true,
          "name" : "...",
          "options" : {
            "property1" : "...",
            "property2" : "..."
          },
          "typeName" : "...",
          "valuesMaxCount" : 12345,
          "valuesMinCount" : 12345
        } ],
        "category" : "PRIMITIVE",
        "createTime" : 12345,
        "createdBy" : "...",
        "dateFormatter" : {
          "availableLocales" : [ "...", "..." ],
          "calendar" : 12345,
          "dateInstance" : { },
          "dateTimeInstance" : { },
          "instance" : { },
          "lenient" : true,
          "numberFormat" : {
            "availableLocales" : [ "...", "..." ],
            "currency" : "...",
            "currencyInstance" : { },
            "groupingUsed" : true,
            "instance" : { },
            "integerInstance" : { },
            "maximumFractionDigits" : 12345,
            "maximumIntegerDigits" : 12345,
            "minimumFractionDigits" : 12345,
            "minimumIntegerDigits" : 12345,
            "numberInstance" : { },
            "parseIntegerOnly" : true,
            "percentInstance" : { },
            "roundingMode" : "UNNECESSARY"
          },
          "timeInstance" : { },
          "timeZone" : {
            "DSTSavings" : 12345,
            "ID" : "...",
            "availableIDs" : [ "...", "..." ],
            "default" : { },
            "displayName" : "...",
            "rawOffset" : 12345
          }
        },
        "description" : "...",
        "guid" : "...",
        "name" : "...",
        "options" : {
          "property1" : "...",
          "property2" : "..."
        },
        "typeVersion" : "...",
        "updateTime" : 12345,
        "updatedBy" : "...",
        "version" : 12345
      }
    },
    "json_AtlasTermAssignmentHeader" : {
      "type" : "object",
      "properties" : {
        "confidence" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The confidence of the term assignment."
        },
        "createdBy" : {
          "type" : "string",
          "description" : "The user who created the record."
        },
        "description" : {
          "type" : "string",
          "description" : "The description of the term assignment."
        },
        "displayText" : {
          "type" : "string",
          "description" : "The display text."
        },
        "expression" : {
          "type" : "string",
          "description" : "The expression of the term assignment."
        },
        "relationGuid" : {
          "type" : "string",
          "description" : "The GUID of the relationship."
        },
        "source" : {
          "type" : "string",
          "description" : "The source of the term."
        },
        "status" : {
          "$ref" : "#/definitions/json_AtlasTermAssignmentStatus"
        },
        "steward" : {
          "type" : "string",
          "description" : "The steward of the term."
        },
        "termGuid" : {
          "type" : "string",
          "description" : "The GUID of the term."
        }
      },
      "title" : "AtlasTermAssignmentHeader",
      "description" : "The header for term assignment.",
      "example" : {
        "confidence" : 12345,
        "createdBy" : "...",
        "description" : "...",
        "displayText" : "...",
        "expression" : "...",
        "relationGuid" : "...",
        "source" : "...",
        "status" : "OTHER",
        "steward" : "...",
        "termGuid" : "..."
      }
    },
    "json_AtlasTermAssignmentStatus" : {
      "type" : "string",
      "title" : "AtlasTermAssignmentStatus",
      "description" : "The status of terms assignment.",
      "enum" : [ "DISCOVERED", "PROPOSED", "IMPORTED", "VALIDATED", "DEPRECATED", "OBSOLETE", "OTHER" ]
    },
    "json_AtlasTermCategorizationHeader" : {
      "type" : "object",
      "properties" : {
        "categoryGuid" : {
          "type" : "string",
          "description" : "The GUID of the category."
        },
        "description" : {
          "type" : "string",
          "description" : "The description of the record."
        },
        "displayText" : {
          "type" : "string",
          "description" : "The display text."
        },
        "relationGuid" : {
          "type" : "string",
          "description" : "The GUID of the relationship."
        },
        "status" : {
          "$ref" : "#/definitions/json_AtlasTermRelationshipStatus"
        }
      },
      "title" : "AtlasTermCategorizationHeader",
      "description" : "The basic information for term categorization.",
      "example" : {
        "categoryGuid" : "...",
        "description" : "...",
        "displayText" : "...",
        "relationGuid" : "...",
        "status" : "DEPRECATED"
      }
    },
    "json_AtlasTermRelationshipStatus" : {
      "type" : "string",
      "title" : "AtlasTermRelationshipStatus",
      "description" : "The status of term relationship.",
      "enum" : [ "DRAFT", "ACTIVE", "DEPRECATED", "OBSOLETE", "OTHER" ]
    },
    "json_AtlasTypeDefHeader" : {
      "type" : "object",
      "properties" : {
        "category" : {
          "$ref" : "#/definitions/json_TypeCategory"
        },
        "guid" : {
          "type" : "string",
          "description" : "The GUID of the type definition."
        },
        "name" : {
          "type" : "string",
          "description" : "The name of the type definition."
        }
      },
      "title" : "AtlasTypeDefHeader",
      "description" : "The basic information of the type definition.",
      "example" : {
        "category" : "ARRAY",
        "guid" : "...",
        "name" : "..."
      }
    },
    "json_AtlasTypesDef" : {
      "type" : "object",
      "properties" : {
        "classificationDefs" : {
          "type" : "array",
          "description" : "An array of classification definitions.",
          "items" : {
            "$ref" : "#/definitions/json_AtlasClassificationDef"
          }
        },
        "entityDefs" : {
          "type" : "array",
          "description" : "An array of entity definitions.",
          "items" : {
            "$ref" : "#/definitions/json_AtlasEntityDef"
          }
        },
        "enumDefs" : {
          "type" : "array",
          "description" : "An array of enum definitions.",
          "items" : {
            "$ref" : "#/definitions/json_AtlasEnumDef"
          }
        },
        "relationshipDefs" : {
          "type" : "array",
          "description" : "An array of relationship definitions.",
          "items" : {
            "$ref" : "#/definitions/json_AtlasRelationshipDef"
          }
        },
        "structDefs" : {
          "type" : "array",
          "description" : "An array of struct definitions.",
          "items" : {
            "$ref" : "#/definitions/json_AtlasStructDef"
          }
        }
      },
      "title" : "AtlasTypesDef",
      "description" : "The definitions of types.",
      "example" : {
        "classificationDefs" : [ {
          "entityTypes" : [ "...", "..." ],
          "subTypes" : [ "...", "..." ],
          "superTypes" : [ "...", "..." ],
          "attributeDefs" : [ {
            "cardinality" : "SET",
            "constraints" : [ { }, { } ],
            "defaultValue" : "...",
            "description" : "...",
            "includeInNotification" : true,
            "isIndexable" : true,
            "isOptional" : true,
            "isUnique" : true,
            "name" : "...",
            "options" : {
              "property1" : "...",
              "property2" : "..."
            },
            "typeName" : "...",
            "valuesMaxCount" : 12345,
            "valuesMinCount" : 12345
          }, {
            "cardinality" : "SINGLE",
            "constraints" : [ { }, { } ],
            "defaultValue" : "...",
            "description" : "...",
            "includeInNotification" : true,
            "isIndexable" : true,
            "isOptional" : true,
            "isUnique" : true,
            "name" : "...",
            "options" : {
              "property1" : "...",
              "property2" : "..."
            },
            "typeName" : "...",
            "valuesMaxCount" : 12345,
            "valuesMinCount" : 12345
          } ],
          "category" : "OBJECT_ID_TYPE",
          "createTime" : 12345,
          "createdBy" : "...",
          "dateFormatter" : {
            "availableLocales" : [ "...", "..." ],
            "calendar" : 12345,
            "dateInstance" : { },
            "dateTimeInstance" : { },
            "instance" : { },
            "lenient" : true,
            "numberFormat" : { },
            "timeInstance" : { },
            "timeZone" : { }
          },
          "description" : "...",
          "guid" : "...",
          "name" : "...",
          "options" : {
            "property1" : "...",
            "property2" : "..."
          },
          "typeVersion" : "...",
          "updateTime" : 12345,
          "updatedBy" : "...",
          "version" : 12345
        }, {
          "entityTypes" : [ "...", "..." ],
          "subTypes" : [ "...", "..." ],
          "superTypes" : [ "...", "..." ],
          "attributeDefs" : [ {
            "cardinality" : "SINGLE",
            "constraints" : [ { }, { } ],
            "defaultValue" : "...",
            "description" : "...",
            "includeInNotification" : true,
            "isIndexable" : true,
            "isOptional" : true,
            "isUnique" : true,
            "name" : "...",
            "options" : {
              "property1" : "...",
              "property2" : "..."
            },
            "typeName" : "...",
            "valuesMaxCount" : 12345,
            "valuesMinCount" : 12345
          }, {
            "cardinality" : "LIST",
            "constraints" : [ { }, { } ],
            "defaultValue" : "...",
            "description" : "...",
            "includeInNotification" : true,
            "isIndexable" : true,
            "isOptional" : true,
            "isUnique" : true,
            "name" : "...",
            "options" : {
              "property1" : "...",
              "property2" : "..."
            },
            "typeName" : "...",
            "valuesMaxCount" : 12345,
            "valuesMinCount" : 12345
          } ],
          "category" : "ENUM",
          "createTime" : 12345,
          "createdBy" : "...",
          "dateFormatter" : {
            "availableLocales" : [ "...", "..." ],
            "calendar" : 12345,
            "dateInstance" : { },
            "dateTimeInstance" : { },
            "instance" : { },
            "lenient" : true,
            "numberFormat" : { },
            "timeInstance" : { },
            "timeZone" : { }
          },
          "description" : "...",
          "guid" : "...",
          "name" : "...",
          "options" : {
            "property1" : "...",
            "property2" : "..."
          },
          "typeVersion" : "...",
          "updateTime" : 12345,
          "updatedBy" : "...",
          "version" : 12345
        } ],
        "entityDefs" : [ {
          "subTypes" : [ "...", "..." ],
          "superTypes" : [ "...", "..." ],
          "attributeDefs" : [ {
            "cardinality" : "SINGLE",
            "constraints" : [ { }, { } ],
            "defaultValue" : "...",
            "description" : "...",
            "includeInNotification" : true,
            "isIndexable" : true,
            "isOptional" : true,
            "isUnique" : true,
            "name" : "...",
            "options" : {
              "property1" : "...",
              "property2" : "..."
            },
            "typeName" : "...",
            "valuesMaxCount" : 12345,
            "valuesMinCount" : 12345
          }, {
            "cardinality" : "SET",
            "constraints" : [ { }, { } ],
            "defaultValue" : "...",
            "description" : "...",
            "includeInNotification" : true,
            "isIndexable" : true,
            "isOptional" : true,
            "isUnique" : true,
            "name" : "...",
            "options" : {
              "property1" : "...",
              "property2" : "..."
            },
            "typeName" : "...",
            "valuesMaxCount" : 12345,
            "valuesMinCount" : 12345
          } ],
          "category" : "RELATIONSHIP",
          "createTime" : 12345,
          "createdBy" : "...",
          "dateFormatter" : {
            "availableLocales" : [ "...", "..." ],
            "calendar" : 12345,
            "dateInstance" : { },
            "dateTimeInstance" : { },
            "instance" : { },
            "lenient" : true,
            "numberFormat" : { },
            "timeInstance" : { },
            "timeZone" : { }
          },
          "description" : "...",
          "guid" : "...",
          "name" : "...",
          "options" : {
            "property1" : "...",
            "property2" : "..."
          },
          "typeVersion" : "...",
          "updateTime" : 12345,
          "updatedBy" : "...",
          "version" : 12345
        }, {
          "subTypes" : [ "...", "..." ],
          "superTypes" : [ "...", "..." ],
          "attributeDefs" : [ {
            "cardinality" : "LIST",
            "constraints" : [ { }, { } ],
            "defaultValue" : "...",
            "description" : "...",
            "includeInNotification" : true,
            "isIndexable" : true,
            "isOptional" : true,
            "isUnique" : true,
            "name" : "...",
            "options" : {
              "property1" : "...",
              "property2" : "..."
            },
            "typeName" : "...",
            "valuesMaxCount" : 12345,
            "valuesMinCount" : 12345
          }, {
            "cardinality" : "SINGLE",
            "constraints" : [ { }, { } ],
            "defaultValue" : "...",
            "description" : "...",
            "includeInNotification" : true,
            "isIndexable" : true,
            "isOptional" : true,
            "isUnique" : true,
            "name" : "...",
            "options" : {
              "property1" : "...",
              "property2" : "..."
            },
            "typeName" : "...",
            "valuesMaxCount" : 12345,
            "valuesMinCount" : 12345
          } ],
          "category" : "ARRAY",
          "createTime" : 12345,
          "createdBy" : "...",
          "dateFormatter" : {
            "availableLocales" : [ "...", "..." ],
            "calendar" : 12345,
            "dateInstance" : { },
            "dateTimeInstance" : { },
            "instance" : { },
            "lenient" : true,
            "numberFormat" : { },
            "timeInstance" : { },
            "timeZone" : { }
          },
          "description" : "...",
          "guid" : "...",
          "name" : "...",
          "options" : {
            "property1" : "...",
            "property2" : "..."
          },
          "typeVersion" : "...",
          "updateTime" : 12345,
          "updatedBy" : "...",
          "version" : 12345
        } ],
        "enumDefs" : [ {
          "defaultValue" : "...",
          "elementDefs" : [ {
            "description" : "...",
            "ordinal" : 12345,
            "value" : "..."
          }, {
            "description" : "...",
            "ordinal" : 12345,
            "value" : "..."
          } ],
          "category" : "OBJECT_ID_TYPE",
          "createTime" : 12345,
          "createdBy" : "...",
          "dateFormatter" : {
            "availableLocales" : [ "...", "..." ],
            "calendar" : 12345,
            "dateInstance" : { },
            "dateTimeInstance" : { },
            "instance" : { },
            "lenient" : true,
            "numberFormat" : { },
            "timeInstance" : { },
            "timeZone" : { }
          },
          "description" : "...",
          "guid" : "...",
          "name" : "...",
          "options" : {
            "property1" : "...",
            "property2" : "..."
          },
          "typeVersion" : "...",
          "updateTime" : 12345,
          "updatedBy" : "...",
          "version" : 12345
        }, {
          "defaultValue" : "...",
          "elementDefs" : [ {
            "description" : "...",
            "ordinal" : 12345,
            "value" : "..."
          }, {
            "description" : "...",
            "ordinal" : 12345,
            "value" : "..."
          } ],
          "category" : "CLASSIFICATION",
          "createTime" : 12345,
          "createdBy" : "...",
          "dateFormatter" : {
            "availableLocales" : [ "...", "..." ],
            "calendar" : 12345,
            "dateInstance" : { },
            "dateTimeInstance" : { },
            "instance" : { },
            "lenient" : true,
            "numberFormat" : { },
            "timeInstance" : { },
            "timeZone" : { }
          },
          "description" : "...",
          "guid" : "...",
          "name" : "...",
          "options" : {
            "property1" : "...",
            "property2" : "..."
          },
          "typeVersion" : "...",
          "updateTime" : 12345,
          "updatedBy" : "...",
          "version" : 12345
        } ],
        "relationshipDefs" : [ {
          "endDef1" : {
            "cardinality" : "SINGLE",
            "description" : "...",
            "isContainer" : true,
            "isLegacyAttribute" : true,
            "name" : "...",
            "type" : "..."
          },
          "endDef2" : {
            "cardinality" : "SET",
            "description" : "...",
            "isContainer" : true,
            "isLegacyAttribute" : true,
            "name" : "...",
            "type" : "..."
          },
          "propagateTags" : "ONE_TO_TWO",
          "relationshipCategory" : "COMPOSITION",
          "relationshipLabel" : "...",
          "attributeDefs" : [ {
            "cardinality" : "LIST",
            "constraints" : [ { }, { } ],
            "defaultValue" : "...",
            "description" : "...",
            "includeInNotification" : true,
            "isIndexable" : true,
            "isOptional" : true,
            "isUnique" : true,
            "name" : "...",
            "options" : {
              "property1" : "...",
              "property2" : "..."
            },
            "typeName" : "...",
            "valuesMaxCount" : 12345,
            "valuesMinCount" : 12345
          }, {
            "cardinality" : "LIST",
            "constraints" : [ { }, { } ],
            "defaultValue" : "...",
            "description" : "...",
            "includeInNotification" : true,
            "isIndexable" : true,
            "isOptional" : true,
            "isUnique" : true,
            "name" : "...",
            "options" : {
              "property1" : "...",
              "property2" : "..."
            },
            "typeName" : "...",
            "valuesMaxCount" : 12345,
            "valuesMinCount" : 12345
          } ],
          "category" : "PRIMITIVE",
          "createTime" : 12345,
          "createdBy" : "...",
          "dateFormatter" : {
            "availableLocales" : [ "...", "..." ],
            "calendar" : 12345,
            "dateInstance" : { },
            "dateTimeInstance" : { },
            "instance" : { },
            "lenient" : true,
            "numberFormat" : { },
            "timeInstance" : { },
            "timeZone" : { }
          },
          "description" : "...",
          "guid" : "...",
          "name" : "...",
          "options" : {
            "property1" : "...",
            "property2" : "..."
          },
          "typeVersion" : "...",
          "updateTime" : 12345,
          "updatedBy" : "...",
          "version" : 12345
        }, {
          "endDef1" : {
            "cardinality" : "SINGLE",
            "description" : "...",
            "isContainer" : true,
            "isLegacyAttribute" : true,
            "name" : "...",
            "type" : "..."
          },
          "endDef2" : {
            "cardinality" : "SET",
            "description" : "...",
            "isContainer" : true,
            "isLegacyAttribute" : true,
            "name" : "...",
            "type" : "..."
          },
          "propagateTags" : "NONE",
          "relationshipCategory" : "COMPOSITION",
          "relationshipLabel" : "...",
          "attributeDefs" : [ {
            "cardinality" : "SET",
            "constraints" : [ { }, { } ],
            "defaultValue" : "...",
            "description" : "...",
            "includeInNotification" : true,
            "isIndexable" : true,
            "isOptional" : true,
            "isUnique" : true,
            "name" : "...",
            "options" : {
              "property1" : "...",
              "property2" : "..."
            },
            "typeName" : "...",
            "valuesMaxCount" : 12345,
            "valuesMinCount" : 12345
          }, {
            "cardinality" : "LIST",
            "constraints" : [ { }, { } ],
            "defaultValue" : "...",
            "description" : "...",
            "includeInNotification" : true,
            "isIndexable" : true,
            "isOptional" : true,
            "isUnique" : true,
            "name" : "...",
            "options" : {
              "property1" : "...",
              "property2" : "..."
            },
            "typeName" : "...",
            "valuesMaxCount" : 12345,
            "valuesMinCount" : 12345
          } ],
          "category" : "ENTITY",
          "createTime" : 12345,
          "createdBy" : "...",
          "dateFormatter" : {
            "availableLocales" : [ "...", "..." ],
            "calendar" : 12345,
            "dateInstance" : { },
            "dateTimeInstance" : { },
            "instance" : { },
            "lenient" : true,
            "numberFormat" : { },
            "timeInstance" : { },
            "timeZone" : { }
          },
          "description" : "...",
          "guid" : "...",
          "name" : "...",
          "options" : {
            "property1" : "...",
            "property2" : "..."
          },
          "typeVersion" : "...",
          "updateTime" : 12345,
          "updatedBy" : "...",
          "version" : 12345
        } ],
        "structDefs" : [ {
          "attributeDefs" : [ {
            "cardinality" : "SINGLE",
            "constraints" : [ { }, { } ],
            "defaultValue" : "...",
            "description" : "...",
            "includeInNotification" : true,
            "isIndexable" : true,
            "isOptional" : true,
            "isUnique" : true,
            "name" : "...",
            "options" : {
              "property1" : "...",
              "property2" : "..."
            },
            "typeName" : "...",
            "valuesMaxCount" : 12345,
            "valuesMinCount" : 12345
          }, {
            "cardinality" : "SINGLE",
            "constraints" : [ { }, { } ],
            "defaultValue" : "...",
            "description" : "...",
            "includeInNotification" : true,
            "isIndexable" : true,
            "isOptional" : true,
            "isUnique" : true,
            "name" : "...",
            "options" : {
              "property1" : "...",
              "property2" : "..."
            },
            "typeName" : "...",
            "valuesMaxCount" : 12345,
            "valuesMinCount" : 12345
          } ],
          "category" : "PRIMITIVE",
          "createTime" : 12345,
          "createdBy" : "...",
          "dateFormatter" : {
            "availableLocales" : [ "...", "..." ],
            "calendar" : 12345,
            "dateInstance" : { },
            "dateTimeInstance" : { },
            "instance" : { },
            "lenient" : true,
            "numberFormat" : { },
            "timeInstance" : { },
            "timeZone" : { }
          },
          "description" : "...",
          "guid" : "...",
          "name" : "...",
          "options" : {
            "property1" : "...",
            "property2" : "..."
          },
          "typeVersion" : "...",
          "updateTime" : 12345,
          "updatedBy" : "...",
          "version" : 12345
        }, {
          "attributeDefs" : [ {
            "cardinality" : "SINGLE",
            "constraints" : [ { }, { } ],
            "defaultValue" : "...",
            "description" : "...",
            "includeInNotification" : true,
            "isIndexable" : true,
            "isOptional" : true,
            "isUnique" : true,
            "name" : "...",
            "options" : {
              "property1" : "...",
              "property2" : "..."
            },
            "typeName" : "...",
            "valuesMaxCount" : 12345,
            "valuesMinCount" : 12345
          }, {
            "cardinality" : "SET",
            "constraints" : [ { }, { } ],
            "defaultValue" : "...",
            "description" : "...",
            "includeInNotification" : true,
            "isIndexable" : true,
            "isOptional" : true,
            "isUnique" : true,
            "name" : "...",
            "options" : {
              "property1" : "...",
              "property2" : "..."
            },
            "typeName" : "...",
            "valuesMaxCount" : 12345,
            "valuesMinCount" : 12345
          } ],
          "category" : "MAP",
          "createTime" : 12345,
          "createdBy" : "...",
          "dateFormatter" : {
            "availableLocales" : [ "...", "..." ],
            "calendar" : 12345,
            "dateInstance" : { },
            "dateTimeInstance" : { },
            "instance" : { },
            "lenient" : true,
            "numberFormat" : { },
            "timeInstance" : { },
            "timeZone" : { }
          },
          "description" : "...",
          "guid" : "...",
          "name" : "...",
          "options" : {
            "property1" : "...",
            "property2" : "..."
          },
          "typeVersion" : "...",
          "updateTime" : 12345,
          "updatedBy" : "...",
          "version" : 12345
        } ]
      }
    },
    "json_AtlasUserSavedSearch" : {
      "title" : "AtlasUserSavedSearch",
      "allOf" : [ {
        "$ref" : "#/definitions/json_AtlasBaseModelObject"
      }, {
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of the saved search."
          },
          "ownerName" : {
            "type" : "string",
            "description" : "The owner name of the saved search."
          },
          "searchParameters" : {
            "$ref" : "#/definitions/json_SearchParameters"
          },
          "searchType" : {
            "$ref" : "#/definitions/json_SavedSearchType"
          },
          "uiParameters" : {
            "type" : "string",
            "description" : "The UI parameters."
          }
        }
      } ],
      "description" : "User saved search.",
      "example" : {
        "name" : "...",
        "ownerName" : "...",
        "searchParameters" : {
          "attributes" : [ "...", "..." ],
          "classification" : "...",
          "entityFilters" : {
            "attributeName" : "...",
            "attributeValue" : "...",
            "condition" : "OR",
            "criterion" : [ { }, { } ],
            "operator" : "LIKE"
          },
          "excludeDeletedEntities" : true,
          "includeClassificationAttributes" : true,
          "includeSubClassifications" : true,
          "includeSubTypes" : true,
          "limit" : 12345,
          "offset" : 12345,
          "query" : "...",
          "tagFilters" : {
            "attributeName" : "...",
            "attributeValue" : "...",
            "condition" : "AND",
            "criterion" : [ { }, { } ],
            "operator" : "EQ"
          },
          "termName" : "...",
          "typeName" : "..."
        },
        "searchType" : "BASIC",
        "uiParameters" : "...",
        "guid" : "..."
      }
    },
    "json_AttributeSearchResult" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "array",
          "description" : "An array of names.",
          "items" : {
            "type" : "string"
          }
        },
        "values" : {
          "type" : "array",
          "description" : "An array of values.",
          "items" : {
            "type" : "object",
            "properties" : { }
          }
        }
      },
      "title" : "AttributeSearchResult",
      "description" : "The attributes of search result.",
      "example" : {
        "name" : [ "...", "..." ],
        "values" : [ ]
      }
    },
    "json_Cardinality" : {
      "type" : "string",
      "title" : "Cardinality",
      "description" : "single-valued attribute or multi-valued attribute.",
      "enum" : [ "SINGLE", "LIST", "SET" ]
    },
    "json_ClassificationAssociateRequest" : {
      "type" : "object",
      "properties" : {
        "classification" : {
          "$ref" : "#/definitions/json_AtlasClassification"
        },
        "entityGuids" : {
          "type" : "array",
          "description" : "The GUID of the entity.",
          "items" : {
            "type" : "string"
          }
        },
        "entities" : {
          "type" : "array",
          "description" : "An array of Atlas Object Id with its parent GUID.",
          "items" : {
            "$ref" : "#/definitions/json_AtlasObjectIdWithParentGuid"
          }
        }
      },
      "title" : "ClassificationAssociateRequest",
      "description" : "The request for classification association.",
      "example" : {
        "classification" : {
          "entityGuid" : "...",
          "entityStatus" : "DELETED",
          "propagate" : true,
          "removePropagationsOnEntityDelete" : true,
          "validityPeriods" : [ {
            "endTime" : "...",
            "startTime" : "...",
            "timeZone" : "..."
          }, {
            "endTime" : "...",
            "startTime" : "...",
            "timeZone" : "..."
          } ],
          "attributes" : {
            "property1" : { },
            "property2" : { }
          },
          "typeName" : "..."
        },
        "entityGuids" : [ "...", "..." ],
        "entities": [
          {
            "guid" : "...",
            "typeName" : "...",
            "uniqueAttributes" : {
              "property1" : { },
              "property2" : { }
            },
            "parentEntityGuid": "..."
          }
        ]
      }
    },
    "json_Condition" : {
      "type" : "string",
      "title" : "Condition",
      "description" : "The enum for condition.",
      "enum" : [ "AND", "OR" ]
    },
    "json_DateFormat" : {
      "type" : "object",
      "title" : "DateFormat",
      "properties" : {
        "availableLocales" : {
          "type" : "array",
          "description" : "An array of available locales.",
          "items" : {
            "type" : "string"
          }
        },
        "calendar" : {
          "type" : "number"
        },
        "dateInstance" : {
          "$ref" : "#/definitions/json_DateFormat"
        },
        "dateTimeInstance" : {
          "$ref" : "#/definitions/json_DateFormat"
        },
        "instance" : {
          "$ref" : "#/definitions/json_DateFormat"
        },
        "lenient" : {
          "type" : "boolean",
          "description" : "Determines the leniency of the date format."
        },
        "numberFormat" : {
          "$ref" : "#/definitions/json_NumberFormat"
        },
        "timeInstance" : {
          "$ref" : "#/definitions/json_DateFormat"
        },
        "timeZone" : {
          "$ref" : "#/definitions/json_TimeZone"
        }
      },
      "description" : "The date format.",
      "example" : {
        "availableLocales" : [ "...", "..." ],
        "calendar" : 12345,
        "dateInstance" : {
          "availableLocales" : [ "...", "..." ],
          "calendar" : 12345,
          "dateInstance" : { },
          "dateTimeInstance" : { },
          "instance" : { },
          "lenient" : true,
          "numberFormat" : {
            "availableLocales" : [ "...", "..." ],
            "currency" : "...",
            "currencyInstance" : { },
            "groupingUsed" : true,
            "instance" : { },
            "integerInstance" : { },
            "maximumFractionDigits" : 12345,
            "maximumIntegerDigits" : 12345,
            "minimumFractionDigits" : 12345,
            "minimumIntegerDigits" : 12345,
            "numberInstance" : { },
            "parseIntegerOnly" : true,
            "percentInstance" : { },
            "roundingMode" : "DOWN"
          },
          "timeInstance" : { },
          "timeZone" : {
            "DSTSavings" : 12345,
            "ID" : "...",
            "availableIDs" : [ "...", "..." ],
            "default" : { },
            "displayName" : "...",
            "rawOffset" : 12345
          }
        },
        "dateTimeInstance" : {
          "availableLocales" : [ "...", "..." ],
          "calendar" : 12345,
          "dateInstance" : { },
          "dateTimeInstance" : { },
          "instance" : { },
          "lenient" : true,
          "numberFormat" : {
            "availableLocales" : [ "...", "..." ],
            "currency" : "...",
            "currencyInstance" : { },
            "groupingUsed" : true,
            "instance" : { },
            "integerInstance" : { },
            "maximumFractionDigits" : 12345,
            "maximumIntegerDigits" : 12345,
            "minimumFractionDigits" : 12345,
            "minimumIntegerDigits" : 12345,
            "numberInstance" : { },
            "parseIntegerOnly" : true,
            "percentInstance" : { },
            "roundingMode" : "HALF_EVEN"
          },
          "timeInstance" : { },
          "timeZone" : {
            "DSTSavings" : 12345,
            "ID" : "...",
            "availableIDs" : [ "...", "..." ],
            "default" : { },
            "displayName" : "...",
            "rawOffset" : 12345
          }
        },
        "instance" : {
          "availableLocales" : [ "...", "..." ],
          "calendar" : 12345,
          "dateInstance" : { },
          "dateTimeInstance" : { },
          "instance" : { },
          "lenient" : true,
          "numberFormat" : {
            "availableLocales" : [ "...", "..." ],
            "currency" : "...",
            "currencyInstance" : { },
            "groupingUsed" : true,
            "instance" : { },
            "integerInstance" : { },
            "maximumFractionDigits" : 12345,
            "maximumIntegerDigits" : 12345,
            "minimumFractionDigits" : 12345,
            "minimumIntegerDigits" : 12345,
            "numberInstance" : { },
            "parseIntegerOnly" : true,
            "percentInstance" : { },
            "roundingMode" : "HALF_DOWN"
          },
          "timeInstance" : { },
          "timeZone" : {
            "DSTSavings" : 12345,
            "ID" : "...",
            "availableIDs" : [ "...", "..." ],
            "default" : { },
            "displayName" : "...",
            "rawOffset" : 12345
          }
        },
        "lenient" : true,
        "numberFormat" : {
          "availableLocales" : [ "...", "..." ],
          "currency" : "...",
          "currencyInstance" : { },
          "groupingUsed" : true,
          "instance" : { },
          "integerInstance" : { },
          "maximumFractionDigits" : 12345,
          "maximumIntegerDigits" : 12345,
          "minimumFractionDigits" : 12345,
          "minimumIntegerDigits" : 12345,
          "numberInstance" : { },
          "parseIntegerOnly" : true,
          "percentInstance" : { },
          "roundingMode" : "DOWN"
        },
        "timeInstance" : {
          "availableLocales" : [ "...", "..." ],
          "calendar" : 12345,
          "dateInstance" : { },
          "dateTimeInstance" : { },
          "instance" : { },
          "lenient" : true,
          "numberFormat" : {
            "availableLocales" : [ "...", "..." ],
            "currency" : "...",
            "currencyInstance" : { },
            "groupingUsed" : true,
            "instance" : { },
            "integerInstance" : { },
            "maximumFractionDigits" : 12345,
            "maximumIntegerDigits" : 12345,
            "minimumFractionDigits" : 12345,
            "minimumIntegerDigits" : 12345,
            "numberInstance" : { },
            "parseIntegerOnly" : true,
            "percentInstance" : { },
            "roundingMode" : "HALF_UP"
          },
          "timeInstance" : { },
          "timeZone" : {
            "DSTSavings" : 12345,
            "ID" : "...",
            "availableIDs" : [ "...", "..." ],
            "default" : { },
            "displayName" : "...",
            "rawOffset" : 12345
          }
        },
        "timeZone" : {
          "DSTSavings" : 12345,
          "ID" : "...",
          "availableIDs" : [ "...", "..." ],
          "default" : { },
          "displayName" : "...",
          "rawOffset" : 12345
        }
      }
    },
    "json_EntityAuditActionV2" : {
      "type" : "string",
      "title" : "EntityAuditActionV2",
      "description" : "The enum of entity audit actions.",
      "enum" : [ "ENTITY_CREATE", "ENTITY_UPDATE", "ENTITY_DELETE", "ENTITY_IMPORT_CREATE", "ENTITY_IMPORT_UPDATE", "ENTITY_IMPORT_DELETE", "CLASSIFICATION_ADD", "CLASSIFICATION_DELETE", "CLASSIFICATION_UPDATE", "PROPAGATED_CLASSIFICATION_ADD", "PROPAGATED_CLASSIFICATION_DELETE", "PROPAGATED_CLASSIFICATION_UPDATE", "TERM_ADD", "TERM_DELETE" ]
    },
    "json_EntityAuditEventV2" : {
      "type" : "object",
      "properties" : {
        "action" : {
          "$ref" : "#/definitions/json_EntityAuditActionV2"
        },
        "details" : {
          "type" : "string",
          "description" : "The details of the event."
        },
        "entity" : {
          "$ref" : "#/definitions/json_AtlasEntity"
        },
        "entityId" : {
          "type" : "string",
          "description" : "The GUID of the entity."
        },
        "eventKey" : {
          "type" : "string",
          "description" : "The key of the event."
        },
        "timestamp" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The timestamp of the event."
        },
        "type" : {
          "$ref" : "#/definitions/json_EntityAuditType"
        },
        "user" : {
          "type" : "string",
          "description" : "The user of the event."
        }
      },
      "title" : "EntityAuditEventV2",
      "description" : "Structure of v2 entity audit event",
      "example" : {
        "action" : "ENTITY_UPDATE",
        "details" : "...",
        "entity" : {
          "classifications" : [ {
            "entityGuid" : "...",
            "entityStatus" : "DELETED",
            "propagate" : true,
            "removePropagationsOnEntityDelete" : true,
            "validityPeriods" : [ { }, { } ],
            "attributes" : {
              "property1" : { },
              "property2" : { }
            },
            "typeName" : "..."
          }, {
            "entityGuid" : "...",
            "entityStatus" : "ACTIVE",
            "propagate" : true,
            "removePropagationsOnEntityDelete" : true,
            "validityPeriods" : [ { }, { } ],
            "attributes" : {
              "property1" : { },
              "property2" : { }
            },
            "typeName" : "..."
          } ],
          "createTime" : 12345,
          "createdBy" : "...",
          "guid" : "...",
          "homeId" : "...",
          "meanings" : [ {
            "confidence" : 12345,
            "createdBy" : "...",
            "description" : "...",
            "displayText" : "...",
            "expression" : "...",
            "relationGuid" : "...",
            "source" : "...",
            "status" : "VALIDATED",
            "steward" : "...",
            "termGuid" : "..."
          }, {
            "confidence" : 12345,
            "createdBy" : "...",
            "description" : "...",
            "displayText" : "...",
            "expression" : "...",
            "relationGuid" : "...",
            "source" : "...",
            "status" : "DISCOVERED",
            "steward" : "...",
            "termGuid" : "..."
          } ],
          "proxy" : true,
          "relationshipAttributes" : {
            "property1" : { },
            "property2" : { }
          },
          "status" : "ACTIVE",
          "updateTime" : 12345,
          "updatedBy" : "...",
          "version" : 12345,
          "attributes" : {
            "property1" : { },
            "property2" : { }
          },
          "typeName" : "..."
        },
        "entityId" : "...",
        "eventKey" : "...",
        "timestamp" : 12345,
        "type" : "ENTITY_AUDIT_V2",
        "user" : "..."
      }
    },
    "json_EntityAuditType" : {
      "type" : "string",
      "title" : "EntityAuditType",
      "description" : "The enum of entity audit type.",
      "enum" : [ "ENTITY_AUDIT_V1", "ENTITY_AUDIT_V2" ]
    },
    "json_EntityMutationResponse" : {
      "type" : "object",
      "properties" : {
        "guidAssignments" : {
          "type" : "object",
          "description" : "A map of GUID assignments with entities.",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "mutatedEntities" : {
          "type" : "object",
          "description" : "The entity headers of mutated entities.",
          "additionalProperties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/json_AtlasEntityHeader"
            }
          }
        },
        "partialUpdatedEntities" : {
          "type" : "array",
          "description" : "An array of entity headers that partially updated.",
          "items" : {
            "$ref" : "#/definitions/json_AtlasEntityHeader"
          }
        }
      },
      "title" : "EntityMutationResponse",
      "description" : "The mutation response of entity.",
      "example" : {
        "guidAssignments" : {
          "property1" : "...",
          "property2" : "..."
        },
        "mutatedEntities" : {
          "property1" : [ {
            "classificationNames" : [ "...", "..." ],
            "classifications" : [ {
              "entityGuid" : "...",
              "entityStatus" : "DELETED",
              "propagate" : true,
              "removePropagationsOnEntityDelete" : true,
              "validityPeriods" : [ { }, { } ],
              "attributes" : {
                "property1" : { },
                "property2" : { }
              },
              "typeName" : "..."
            }, {
              "entityGuid" : "...",
              "entityStatus" : "ACTIVE",
              "propagate" : true,
              "removePropagationsOnEntityDelete" : true,
              "validityPeriods" : [ { }, { } ],
              "attributes" : {
                "property1" : { },
                "property2" : { }
              },
              "typeName" : "..."
            } ],
            "displayText" : "...",
            "guid" : "...",
            "meaningNames" : [ "...", "..." ],
            "meanings" : [ {
              "confidence" : 12345,
              "createdBy" : "...",
              "description" : "...",
              "displayText" : "...",
              "expression" : "...",
              "relationGuid" : "...",
              "source" : "...",
              "status" : "IMPORTED",
              "steward" : "...",
              "termGuid" : "..."
            }, {
              "confidence" : 12345,
              "createdBy" : "...",
              "description" : "...",
              "displayText" : "...",
              "expression" : "...",
              "relationGuid" : "...",
              "source" : "...",
              "status" : "OTHER",
              "steward" : "...",
              "termGuid" : "..."
            } ],
            "status" : "ACTIVE",
            "attributes" : {
              "property1" : { },
              "property2" : { }
            },
            "typeName" : "..."
          }, {
            "classificationNames" : [ "...", "..." ],
            "classifications" : [ {
              "entityGuid" : "...",
              "entityStatus" : "DELETED",
              "propagate" : true,
              "removePropagationsOnEntityDelete" : true,
              "validityPeriods" : [ { }, { } ],
              "attributes" : {
                "property1" : { },
                "property2" : { }
              },
              "typeName" : "..."
            }, {
              "entityGuid" : "...",
              "entityStatus" : "DELETED",
              "propagate" : true,
              "removePropagationsOnEntityDelete" : true,
              "validityPeriods" : [ { }, { } ],
              "attributes" : {
                "property1" : { },
                "property2" : { }
              },
              "typeName" : "..."
            } ],
            "displayText" : "...",
            "guid" : "...",
            "meaningNames" : [ "...", "..." ],
            "meanings" : [ {
              "confidence" : 12345,
              "createdBy" : "...",
              "description" : "...",
              "displayText" : "...",
              "expression" : "...",
              "relationGuid" : "...",
              "source" : "...",
              "status" : "DEPRECATED",
              "steward" : "...",
              "termGuid" : "..."
            }, {
              "confidence" : 12345,
              "createdBy" : "...",
              "description" : "...",
              "displayText" : "...",
              "expression" : "...",
              "relationGuid" : "...",
              "source" : "...",
              "status" : "DISCOVERED",
              "steward" : "...",
              "termGuid" : "..."
            } ],
            "status" : "ACTIVE",
            "attributes" : {
              "property1" : { },
              "property2" : { }
            },
            "typeName" : "..."
          } ],
          "property2" : [ {
            "classificationNames" : [ "...", "..." ],
            "classifications" : [ {
              "entityGuid" : "...",
              "entityStatus" : "ACTIVE",
              "propagate" : true,
              "removePropagationsOnEntityDelete" : true,
              "validityPeriods" : [ { }, { } ],
              "attributes" : {
                "property1" : { },
                "property2" : { }
              },
              "typeName" : "..."
            }, {
              "entityGuid" : "...",
              "entityStatus" : "DELETED",
              "propagate" : true,
              "removePropagationsOnEntityDelete" : true,
              "validityPeriods" : [ { }, { } ],
              "attributes" : {
                "property1" : { },
                "property2" : { }
              },
              "typeName" : "..."
            } ],
            "displayText" : "...",
            "guid" : "...",
            "meaningNames" : [ "...", "..." ],
            "meanings" : [ {
              "confidence" : 12345,
              "createdBy" : "...",
              "description" : "...",
              "displayText" : "...",
              "expression" : "...",
              "relationGuid" : "...",
              "source" : "...",
              "status" : "DISCOVERED",
              "steward" : "...",
              "termGuid" : "..."
            }, {
              "confidence" : 12345,
              "createdBy" : "...",
              "description" : "...",
              "displayText" : "...",
              "expression" : "...",
              "relationGuid" : "...",
              "source" : "...",
              "status" : "PROPOSED",
              "steward" : "...",
              "termGuid" : "..."
            } ],
            "status" : "ACTIVE",
            "attributes" : {
              "property1" : { },
              "property2" : { }
            },
            "typeName" : "..."
          }, {
            "classificationNames" : [ "...", "..." ],
            "classifications" : [ {
              "entityGuid" : "...",
              "entityStatus" : "DELETED",
              "propagate" : true,
              "removePropagationsOnEntityDelete" : true,
              "validityPeriods" : [ { }, { } ],
              "attributes" : {
                "property1" : { },
                "property2" : { }
              },
              "typeName" : "..."
            }, {
              "entityGuid" : "...",
              "entityStatus" : "DELETED",
              "propagate" : true,
              "removePropagationsOnEntityDelete" : true,
              "validityPeriods" : [ { }, { } ],
              "attributes" : {
                "property1" : { },
                "property2" : { }
              },
              "typeName" : "..."
            } ],
            "displayText" : "...",
            "guid" : "...",
            "meaningNames" : [ "...", "..." ],
            "meanings" : [ {
              "confidence" : 12345,
              "createdBy" : "...",
              "description" : "...",
              "displayText" : "...",
              "expression" : "...",
              "relationGuid" : "...",
              "source" : "...",
              "status" : "PROPOSED",
              "steward" : "...",
              "termGuid" : "..."
            }, {
              "confidence" : 12345,
              "createdBy" : "...",
              "description" : "...",
              "displayText" : "...",
              "expression" : "...",
              "relationGuid" : "...",
              "source" : "...",
              "status" : "OBSOLETE",
              "steward" : "...",
              "termGuid" : "..."
            } ],
            "status" : "DELETED",
            "attributes" : {
              "property1" : { },
              "property2" : { }
            },
            "typeName" : "..."
          } ]
        },
        "partialUpdatedEntities" : [ {
          "classificationNames" : [ "...", "..." ],
          "classifications" : [ {
            "entityGuid" : "...",
            "entityStatus" : "ACTIVE",
            "propagate" : true,
            "removePropagationsOnEntityDelete" : true,
            "validityPeriods" : [ { }, { } ],
            "attributes" : {
              "property1" : { },
              "property2" : { }
            },
            "typeName" : "..."
          }, {
            "entityGuid" : "...",
            "entityStatus" : "DELETED",
            "propagate" : true,
            "removePropagationsOnEntityDelete" : true,
            "validityPeriods" : [ { }, { } ],
            "attributes" : {
              "property1" : { },
              "property2" : { }
            },
            "typeName" : "..."
          } ],
          "displayText" : "...",
          "guid" : "...",
          "meaningNames" : [ "...", "..." ],
          "meanings" : [ {
            "confidence" : 12345,
            "createdBy" : "...",
            "description" : "...",
            "displayText" : "...",
            "expression" : "...",
            "relationGuid" : "...",
            "source" : "...",
            "status" : "VALIDATED",
            "steward" : "...",
            "termGuid" : "..."
          }, {
            "confidence" : 12345,
            "createdBy" : "...",
            "description" : "...",
            "displayText" : "...",
            "expression" : "...",
            "relationGuid" : "...",
            "source" : "...",
            "status" : "VALIDATED",
            "steward" : "...",
            "termGuid" : "..."
          } ],
          "status" : "DELETED",
          "attributes" : {
            "property1" : { },
            "property2" : { }
          },
          "typeName" : "..."
        }, {
          "classificationNames" : [ "...", "..." ],
          "classifications" : [ {
            "entityGuid" : "...",
            "entityStatus" : "DELETED",
            "propagate" : true,
            "removePropagationsOnEntityDelete" : true,
            "validityPeriods" : [ { }, { } ],
            "attributes" : {
              "property1" : { },
              "property2" : { }
            },
            "typeName" : "..."
          }, {
            "entityGuid" : "...",
            "entityStatus" : "ACTIVE",
            "propagate" : true,
            "removePropagationsOnEntityDelete" : true,
            "validityPeriods" : [ { }, { } ],
            "attributes" : {
              "property1" : { },
              "property2" : { }
            },
            "typeName" : "..."
          } ],
          "displayText" : "...",
          "guid" : "...",
          "meaningNames" : [ "...", "..." ],
          "meanings" : [ {
            "confidence" : 12345,
            "createdBy" : "...",
            "description" : "...",
            "displayText" : "...",
            "expression" : "...",
            "relationGuid" : "...",
            "source" : "...",
            "status" : "DEPRECATED",
            "steward" : "...",
            "termGuid" : "..."
          }, {
            "confidence" : 12345,
            "createdBy" : "...",
            "description" : "...",
            "displayText" : "...",
            "expression" : "...",
            "relationGuid" : "...",
            "source" : "...",
            "status" : "PROPOSED",
            "steward" : "...",
            "termGuid" : "..."
          } ],
          "status" : "DELETED",
          "attributes" : {
            "property1" : { },
            "property2" : { }
          },
          "typeName" : "..."
        } ]
      }
    },
    "json_EntityOperation" : {
      "type" : "string",
      "title" : "EntityOperation",
      "description" : "The enum of entity operation.",
      "enum" : [ "CREATE", "UPDATE", "PARTIAL_UPDATE", "DELETE" ]
    },
    "json_FilterCriteria" : {
      "type" : "object",
      "properties" : {
        "attributeName" : {
          "type" : "string",
          "description" : "The name of the attribute."
        },
        "attributeValue" : {
          "type" : "string",
          "description" : "The value of the attribute."
        },
        "condition" : {
          "$ref" : "#/definitions/json_Condition"
        },
        "criterion" : {
          "type" : "array",
          "description" : "An array of filter criteria.",
          "items" : {
            "$ref" : "#/definitions/json_FilterCriteria"
          }
        },
        "operator" : {
          "$ref" : "#/definitions/json_Operator"
        }
      },
      "title" : "FilterCriteria",
      "description" : "The filter criteria with attributes and condition.",
      "example" : {
        "attributeName" : "...",
        "attributeValue" : "...",
        "condition" : "OR",
        "criterion" : [ {
          "attributeName" : "...",
          "attributeValue" : "...",
          "condition" : "OR",
          "criterion" : [ { }, { } ],
          "operator" : "ENDS_WITH"
        }, {
          "attributeName" : "...",
          "attributeValue" : "...",
          "condition" : "AND",
          "criterion" : [ { }, { } ],
          "operator" : "ENDS_WITH"
        } ],
        "operator" : "EQ"
      }
    },
    "json_Format" : {
      "type" : "object",
      "title" : "Format",
      "description" : "The format object.",
      "example" : { }
    },
    "json_LineageDirection" : {
      "type" : "string",
      "title" : "LineageDirection",
      "description" : "The enum of lineage direction.",
      "enum" : [ "INPUT", "OUTPUT", "BOTH" ]
    },
    "json_LineageRelation" : {
      "type" : "object",
      "properties" : {
        "fromEntityId" : {
          "type" : "string",
          "description" : "The GUID of from-entity."
        },
        "relationshipId" : {
          "type" : "string",
          "description" : "The GUID of relationship."
        },
        "toEntityId" : {
          "type" : "string",
          "description" : "The GUID of to-entity."
        }
      },
      "title" : "LineageRelation",
      "description" : "The lineage relation with GUID of the from and to entity.",
      "example" : {
        "fromEntityId" : "...",
        "relationshipId" : "...",
        "toEntityId" : "..."
      }
    },
    "json_NumberFormat" : {
      "type" : "object",
      "title" : "NumberFormat",
      "properties" : {
        "availableLocales" : {
          "type" : "array",
          "description" : "The number format.",
          "items" : {
            "type" : "string"
          }
        },
        "currency" : {
          "type" : "string",
          "description" : "The currency."
        },
        "currencyInstance" : {
          "$ref" : "#/definitions/json_NumberFormat"
        },
        "groupingUsed" : {
          "type" : "boolean",
          "description" : "Determines if grouping is used."
        },
        "instance" : {
          "$ref" : "#/definitions/json_NumberFormat"
        },
        "integerInstance" : {
          "$ref" : "#/definitions/json_NumberFormat"
        },
        "maximumFractionDigits" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The maximum of fraction digits."
        },
        "maximumIntegerDigits" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The maximum of integer digits."
        },
        "minimumFractionDigits" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The minimum of fraction digits."
        },
        "minimumIntegerDigits" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The minimum of integer digits."
        },
        "numberInstance" : {
          "$ref" : "#/definitions/json_NumberFormat"
        },
        "parseIntegerOnly" : {
          "type" : "boolean",
          "description" : "Determines if only integer is parsed."
        },
        "percentInstance" : {
          "$ref" : "#/definitions/json_NumberFormat"
        },
        "roundingMode" : {
          "$ref" : "#/definitions/json_RoundingMode"
        }
      },
      "description" : "The number format.",
      "example" : {
        "availableLocales" : [ "...", "..." ],
        "currency" : "...",
        "currencyInstance" : {
          "availableLocales" : [ "...", "..." ],
          "currency" : "...",
          "currencyInstance" : { },
          "groupingUsed" : true,
          "instance" : { },
          "integerInstance" : { },
          "maximumFractionDigits" : 12345,
          "maximumIntegerDigits" : 12345,
          "minimumFractionDigits" : 12345,
          "minimumIntegerDigits" : 12345,
          "numberInstance" : { },
          "parseIntegerOnly" : true,
          "percentInstance" : { },
          "roundingMode" : "HALF_UP"
        },
        "groupingUsed" : true,
        "instance" : {
          "availableLocales" : [ "...", "..." ],
          "currency" : "...",
          "currencyInstance" : { },
          "groupingUsed" : true,
          "instance" : { },
          "integerInstance" : { },
          "maximumFractionDigits" : 12345,
          "maximumIntegerDigits" : 12345,
          "minimumFractionDigits" : 12345,
          "minimumIntegerDigits" : 12345,
          "numberInstance" : { },
          "parseIntegerOnly" : true,
          "percentInstance" : { },
          "roundingMode" : "HALF_DOWN"
        },
        "integerInstance" : {
          "availableLocales" : [ "...", "..." ],
          "currency" : "...",
          "currencyInstance" : { },
          "groupingUsed" : true,
          "instance" : { },
          "integerInstance" : { },
          "maximumFractionDigits" : 12345,
          "maximumIntegerDigits" : 12345,
          "minimumFractionDigits" : 12345,
          "minimumIntegerDigits" : 12345,
          "numberInstance" : { },
          "parseIntegerOnly" : true,
          "percentInstance" : { },
          "roundingMode" : "UP"
        },
        "maximumFractionDigits" : 12345,
        "maximumIntegerDigits" : 12345,
        "minimumFractionDigits" : 12345,
        "minimumIntegerDigits" : 12345,
        "numberInstance" : {
          "availableLocales" : [ "...", "..." ],
          "currency" : "...",
          "currencyInstance" : { },
          "groupingUsed" : true,
          "instance" : { },
          "integerInstance" : { },
          "maximumFractionDigits" : 12345,
          "maximumIntegerDigits" : 12345,
          "minimumFractionDigits" : 12345,
          "minimumIntegerDigits" : 12345,
          "numberInstance" : { },
          "parseIntegerOnly" : true,
          "percentInstance" : { },
          "roundingMode" : "UNNECESSARY"
        },
        "parseIntegerOnly" : true,
        "percentInstance" : {
          "availableLocales" : [ "...", "..." ],
          "currency" : "...",
          "currencyInstance" : { },
          "groupingUsed" : true,
          "instance" : { },
          "integerInstance" : { },
          "maximumFractionDigits" : 12345,
          "maximumIntegerDigits" : 12345,
          "minimumFractionDigits" : 12345,
          "minimumIntegerDigits" : 12345,
          "numberInstance" : { },
          "parseIntegerOnly" : true,
          "percentInstance" : { },
          "roundingMode" : "HALF_DOWN"
        },
        "roundingMode" : "UNNECESSARY"
      }
    },
    "json_Operator" : {
      "type" : "string",
      "title" : "Operator",
      "description" : "Supported search operations\nLogical comparision operators can only be used with numbers or dates\nIN, LIKE, startsWith, endsWith, CONTAINS can only be used with strings or text",
      "enum" : [ "LT", "GT", "LTE", "GTE", "EQ", "NEQ", "IN", "LIKE", "STARTS_WITH", "ENDS_WITH", "CONTAINS", "CONTAINS_ANY", "CONTAINS_ALL", "IS_NULL", "NOT_NULL" ]
    },
    "json_PList" : {
      "type" : "object",
      "properties" : {
        "list" : {
          "type" : "array",
          "description" : "An array of objects.",
          "items" : {
            "type" : "object",
            "properties" : { }
          }
        },
        "pageSize" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The size of the page."
        },
        "sortBy" : {
          "type" : "string",
          "description" : "The sorted by field."
        },
        "sortType" : {
          "$ref" : "#/definitions/json_SortType"
        },
        "startIndex" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The start index of the page."
        },
        "totalCount" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The total count of items."
        }
      },
      "title" : "PList",
      "description" : "Paginated-list, for returning search results.",
      "example" : {
        "list" : [ { }, { } ],
        "pageSize" : 12345,
        "sortBy" : "...",
        "sortType" : "DESC",
        "startIndex" : 12345,
        "totalCount" : 12345
      }
    },
    "json_PropagateTags" : {
      "type" : "string",
      "title" : "PropagateTags",
      "description" : "PropagateTags indicates whether tags should propagate across the relationship instance.\n<p>\nTags can propagate:\n<p>\nNONE - not at all <br>\nONE_TO_TWO - from end 1 to 2 <br>\nTWO_TO_ONE - from end 2 to 1  <br>\nBOTH - both ways\n<p>\nCare needs to be taken when specifying. The use cases we are aware of where this flag is useful:\n<p>\n- propagating confidentiality classifications from a table to columns - ONE_TO_TWO could be used here <br>\n- propagating classifications around Glossary synonyms - BOTH could be used here.\n<p>\nThere is an expectation that further enhancements will allow more granular control of tag propagation and will\naddress how to resolve conflicts.",
      "enum" : [ "NONE", "ONE_TO_TWO", "TWO_TO_ONE", "BOTH" ]
    },
    "json_Relation" : {
      "type" : "string",
      "title" : "Relation",
      "description" : "The enum of relations.",
      "enum" : [ "SEE_ALSO", "SYNONYMS", "ANTONYMS", "PREFERRED_TO_TERMS", "PREFERRED_TERMS", "REPLACEMENT_TERMS", "REPLACED_BY", "TRANSLATION_TERMS", "TRANSLATED_TERMS", "ISA", "CLASSIFIES", "VALID_VALUES", "VALID_VALUES_FOR" ]
    },
    "json_RelationshipCategory" : {
      "type" : "string",
      "title" : "RelationshipCategory",
      "description" : "The Relationship category determines the style of relationship around containment and lifecycle.\nUML terminology is used for the values.\n<p>\nASSOCIATION is a relationship with no containment. <br>\nCOMPOSITION and AGGREGATION are containment relationships.\n<p>\nThe difference being in the lifecycles of the container and its children. In the COMPOSITION case,\nthe children cannot exist without the container. For AGGREGATION, the life cycles\nof the container and children are totally independant.",
      "enum" : [ "ASSOCIATION", "AGGREGATION", "COMPOSITION" ]
    },
    "json_RoundingMode" : {
      "type" : "string",
      "title" : "RoundingMode",
      "description" : "The enum of rounding mode.",
      "enum" : [ "UP", "DOWN", "CEILING", "FLOOR", "HALF_UP", "HALF_DOWN", "HALF_EVEN", "UNNECESSARY" ]
    },
    "json_SavedSearchType" : {
      "type" : "string",
      "title" : "SavedSearchType",
      "description" : "The enum of saved search type.",
      "enum" : [ "BASIC", "ADVANCED" ]
    },
    "json_SearchFilter" : {
      "type" : "object",
      "properties" : {
        "getCount" : {
          "type" : "boolean",
          "description" : "Determines if get the count."
        },
        "maxRows" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The maximum of rows."
        },
        "params" : {
          "type" : "object",
          "description" : "The parameters of the search filter.",
          "additionalProperties" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "sortBy" : {
          "type" : "string",
          "description" : "The sorted by field."
        },
        "sortType" : {
          "$ref" : "#/definitions/json_SortType"
        },
        "startIndex" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The start index of the search."
        }
      },
      "title" : "SearchFilter",
      "description" : "Generic filter, to specify search criteria using name/value pairs.",
      "example" : {
        "getCount" : true,
        "maxRows" : 12345,
        "params" : {
          "property1" : [ "...", "..." ],
          "property2" : [ "...", "..." ]
        },
        "sortBy" : "...",
        "sortType" : "NONE",
        "startIndex" : 12345
      }
    },
    "json_SearchParameters" : {
      "type" : "object",
      "properties" : {
        "attributes" : {
          "type" : "array",
          "description" : "Attribute values included in the results",
          "items" : {
            "type" : "string"
          }
        },
        "classification" : {
          "type" : "string",
          "description" : "The classification to search."
        },
        "entityFilters" : {
          "$ref" : "#/definitions/json_FilterCriteria"
        },
        "excludeDeletedEntities" : {
          "type" : "boolean",
          "description" : "Determines if exclude deleted entities."
        },
        "includeClassificationAttributes" : {
          "type" : "boolean",
          "description" : "Determines if include classification attributes."
        },
        "includeSubClassifications" : {
          "type" : "boolean",
          "description" : "Determines if include sub classifications."
        },
        "includeSubTypes" : {
          "type" : "boolean",
          "description" : "Determines if include sub types."
        },
        "limit" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The limit of the search result."
        },
        "offset" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The offset of the search."
        },
        "query" : {
          "type" : "string",
          "description" : "The search query."
        },
        "tagFilters" : {
          "$ref" : "#/definitions/json_FilterCriteria"
        },
        "termName" : {
          "type" : "string",
          "description" : "The name of the term for search."
        },
        "typeName" : {
          "type" : "string",
          "description" : "The name of the type for search."
        }
      },
      "title" : "SearchParameters",
      "description" : "The parameters used for search.",
      "example" : {
        "attributes" : [ "...", "..." ],
        "classification" : "...",
        "entityFilters" : {
          "attributeName" : "...",
          "attributeValue" : "...",
          "condition" : "OR",
          "criterion" : [ { }, { } ],
          "operator" : "GTE"
        },
        "excludeDeletedEntities" : true,
        "includeClassificationAttributes" : true,
        "includeSubClassifications" : true,
        "includeSubTypes" : true,
        "limit" : 12345,
        "offset" : 12345,
        "query" : "...",
        "tagFilters" : {
          "attributeName" : "...",
          "attributeValue" : "...",
          "condition" : "OR",
          "criterion" : [ { }, { } ],
          "operator" : "IN"
        },
        "termName" : "...",
        "typeName" : "..."
      }
    },
    "json_SortType" : {
      "type" : "string",
      "title" : "SortType",
      "description" : "to specify whether the result should be sorted? If yes, whether asc or desc.",
      "enum" : [ "NONE", "ASC", "DESC" ]
    },
    "json_Status" : {
      "type" : "string",
      "title" : "Status",
      "description" : "Status of the entity - can be active or deleted. Deleted entities are not removed from Atlas store.",
      "enum" : [ "ACTIVE", "DELETED" ]
    },
    "json_Status_AtlasRelationship" : {
      "type" : "string",
      "title" : "Status",
      "description" : "The enum of relationship status.",
      "enum" : [ "ACTIVE", "DELETED" ]
    },
    "json_TimeBoundary" : {
      "type" : "object",
      "properties" : {
        "endTime" : {
          "type" : "string",
          "description" : "The end of the time boundary."
        },
        "startTime" : {
          "type" : "string",
          "description" : "The start of the time boundary."
        },
        "timeZone" : {
          "type" : "string",
          "description" : "The timezone of the time boundary."
        }
      },
      "title" : "TimeBoundary",
      "description" : "Captures time-boundary details",
      "example" : {
        "endTime" : "...",
        "startTime" : "...",
        "timeZone" : "..."
      }
    },
    "json_TimeZone" : {
      "type" : "object",
      "properties" : {
        "DSTSavings" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The value of the daylight saving time."
        },
        "ID" : {
          "type" : "string",
          "description" : "The ID of the timezone."
        },
        "availableIDs" : {
          "type" : "array",
          "description" : "An array of available IDs.",
          "items" : {
            "type" : "string"
          }
        },
        "default" : {
          "$ref" : "#/definitions/json_TimeZone"
        },
        "displayName" : {
          "type" : "string",
          "description" : "The display name of the timezone."
        },
        "rawOffset" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The raw offset of the timezone."
        }
      },
      "title" : "TimeZone",
      "description" : "The timezone information.",
      "example" : {
        "DSTSavings" : 12345,
        "ID" : "...",
        "availableIDs" : [ "...", "..." ],
        "default" : {
          "DSTSavings" : 12345,
          "ID" : "...",
          "availableIDs" : [ "...", "..." ],
          "default" : { },
          "displayName" : "...",
          "rawOffset" : 12345
        },
        "displayName" : "...",
        "rawOffset" : 12345
      }
    },
    "json_TypeCategory" : {
      "type" : "string",
      "title" : "TypeCategory",
      "description" : "The enum of type category.",
      "enum" : [ "PRIMITIVE", "OBJECT_ID_TYPE", "ENUM", "STRUCT", "CLASSIFICATION", "ENTITY", "ARRAY", "MAP", "RELATIONSHIP" ]
    },
    "json_AzureCatalogUser" : {
      "type" : "object",
      "properties" : {
        "userId" : {
          "type" : "string",
          "description" : "User ID of the Azure catalog user."
        }
      },
      "title" : "AzureCatalogUser",
      "description" : "Azure catalog user.",
      "example" : {
        "userId" : "string"
      }
    },
    "json_CatalogCreationRequest" : {
      "type" : "object",
      "properties" : {
        "catalogName" : {
          "type" : "string",
          "description" : "Name of the catalog."
        },
        "catalogId" : {
          "type" : "string",
          "description" : "ID of the catalog."
        },
        "creatorUserId" : {
          "type" : "string",
          "description" : "User ID or the creator."
        },
        "eventHubConnectionString" : {
          "type" : "string",
          "description" : "The connection string of the Event Hubs."
        }
      },
      "title" : "CatalogCreationRequest",
      "description" : "Request for catalog creation.",
      "example" : {
        "catalogName" : "...",
        "catalogId" : "...",
        "creatorUserId" : "...",
        "eventHubConnectionString" : "..."
      }
    },
    "json_CatalogDeletionRequest" : {
      "type" : "object",
      "properties" : {
        "catalogName" : {
          "type" : "string",
          "description" : "Name of the catalog."
        }
      },
      "title" : "CatalogDeletionRequest",
      "description" : "Request for catalog deletion.",
      "example" : {
        "catalogName" : "..."
      }
    },
    "json_DataScanPermissionCheckRequest" : {
      "type" : "object",
      "properties" : {
        "catalogName" : {
          "type" : "string",
          "description" : "Name of the catalog."
        },
        "userId" : {
          "type" : "string",
          "description" : "User ID of the catalog."
        }
      },
      "title" : "DataScanPermissionCheckRequest",
      "description" : "Request for data scan permission check.",
      "example" : {
        "catalogName" : "...",
        "userId" : "..."
      }
    },
    "json_DataScanPermissionCheckResponse" : {
      "type" : "object",
      "properties" : {
        "result" : {
          "type" : "string",
          "description" : "The result of the response."
        }
      },
      "title" : "DataScanPermissionCheckResponse",
      "description" : "Response for data scan permission check.",
      "example" : {
        "result" : "..."
      }
    },
    "json_SuggestResult" : {
      "type" : "object",
      "properties" : {
        "value" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/json_SuggestResultValue"
          }
        }
      },
      "title" : "SuggestResult",
      "description" : "The result item of the search suggest.",
      "example" : {
        "value" : [ {
          "@search.text" : "string",
          "description" : "string",
          "id" : "string",
          "name" : "string",
          "owner" : "string",
          "qualifiedName" : "string",
          "typeName" : "string"
        } ]
      }
    },
    "json_SuggestResultValue" : {
      "type" : "object",
      "properties" : {
        "@search.text" : {
          "type" : "string",
          "description" : "The target text that contains the keyword as prefix. The keyword is wrapped with emphasis mark."
        },
        "description" : {
          "type" : "string",
          "description" : "The description of the record."
        },
        "id" : {
          "type" : "string",
          "description" : "The ID of the record."
        },
        "name" : {
          "type" : "string",
          "description" : "The name of the record."
        },
        "owner" : {
          "type" : "string",
          "description" : "The owner of the record."
        },
        "qualifiedName" : {
          "type" : "string",
          "description" : "The qualified name of the record."
        },
        "typeName" : {
          "type" : "string",
          "description" : "The type name of the record."
        }
      },
      "title" : "SuggestResultValue",
      "description" : "The value item of the search suggest.",
      "example" : {
        "@search.text" : "...",
        "description" : "...",
        "id" : "...",
        "name" : "...",
        "owner" : "...",
        "qualifiedName" : "...",
        "typeName" : "..."
      }
    },
    "json_SearchHighlights" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "qualifiedName" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      },
      "title" : "SearchHighlights",
      "description" : "The search highlights of the result.",
      "example" : {
        "name" : "...",
        "qualifiedName" : "..."
      }
    },
    "json_SearchResultValue" : {
      "type" : "object",
      "properties" : {
        "@search.highlights" : {
          "type" : "array",
          "description" : "A highlight list that consists of index fields id ,qualifiedName, name, description, typeName, and owner. When the keyword appears in those fields, the value of the field, attached with emphasis mark, is returned as an element of @search.highlights list.",
          "items" : {
            "$ref" : "#/definitions/json_SearchHighlights"
          }
        },
        "@search.score" : {
          "type" : "number",
          "format" : "float",
          "description" : "The search score calculated by Azure Search. The results are ordered by search score by default.."
        },
        "description" : {
          "type" : "string",
          "description" : "The description of the record."
        },
        "id" : {
          "type" : "string",
          "description" : "The ID of the record."
        },
        "name" : {
          "type" : "string",
          "description" : "The name of the record."
        },
        "owner" : {
          "type" : "string",
          "description" : "The owner of the record."
        },
        "qualifiedName" : {
          "type" : "string",
          "description" : "The qualified name of the record."
        },
        "typeName" : {
          "type" : "string",
          "description" : "The type name of the record."
        }
      },
      "title" : "SearchResultValue",
      "description" : "The result item of the search.",
      "example" : {
        "@search.highlights" : "...",
        "@search.score" : "...",
        "description" : "...",
        "id" : "...",
        "name" : "...",
        "owner" : "...",
        "qualifiedName" : "...",
        "typeName" : "..."
      }
    },
    "json_AdvancedResult" : {
      "type" : "object",
      "properties" : {
        "@search.count" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The total number of search results (not the number of documents in a single page)."
        },
        "value" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/json_SearchResultValue"
          }
        }
      },
      "title" : "AdvancedResult",
      "description" : "The result item of the search suggest.",
      "example" : {
        "@search.count" : 10,
        "value" : [ {
          "@search.highlights" : [ {
            "name" : [ ],
            "qualifiedName" : [ ]
          } ],
          "@search.score" : 1,
          "description" : "string",
          "id" : "string",
          "name" : "string",
          "owner" : "string",
          "qualifiedName" : "string",
          "typeName" : "string"
        } ]
      }
    },
    "json_AutocompleteResult" : {
      "type" : "object",
      "properties" : {
        "value" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/json_AutocompleteResultValue"
          }
        }
      },
      "title" : "AutocompleteResult",
      "description" : "The result of the autocomplete request.",
      "example" : {
        "value" : [ {
          "text" : "string",
          "queryPlusText" : "string"
        } ]
      }
    },
    "json_AutocompleteResultValue" : {
      "type" : "object",
      "properties" : {
        "text" : {
          "type" : "string",
          "description" : "The completed term or phrase."
        },
        "queryPlusText" : {
          "type" : "string",
          "description" : "The completed search query text."
        }
      },
      "title" : "AutocompleteResultValue",
      "description" : "The value item of the autocomplete suggest.",
      "example" : {
        "text" : "string",
        "queryPlusText" : "string"
      }
    },
    "json_Context" : {
      "type" : "object",
      "properties" : {
        "value" : {
          "type" : "string",
          "description" : "The value of the context."
        }
      },
      "title" : "Context",
      "description" : "The context.",
      "example" : null
    },
    "json_Error" : {
      "type" : "object",
      "properties" : {
        "errorMessage" : {
          "type" : "string",
          "description" : "The error message."
        }
      },
      "title" : "Error",
      "description" : "The error response.",
      "example" : {
        "errorMessage" : "string"
      }
    },
    "json_AtlasError" : {
      "type" : "object",
      "properties" : {
        "errorCode" : {
          "type" : "string",
          "description" : "Error code"
        },
        "errorMessage" : {
          "type" : "string",
          "description" : "Error message"
        }
      },
      "title" : "AtlasError",
      "description" : "The atlas error response.",
      "example" : {
        "errorCode" : "string",
        "errorMessage" : "string"
      }
    },
    "json_SearchRequest" : {
      "type" : "object",
      "properties" : {
        "keywords" : {
          "type" : "string",
          "description" : "The keywords applied to all searchable fields."
        },
        "offset" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The offset. The default value is 0."
        },
        "limit" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The limit of the number of the search result. default value is 50; maximum value is 1000."
        },
        "filter" : {
          "type" : "object",
          "description" : "The filter for the search."
        }
      },
      "title" : "SearchRequest",
      "description" : "The search query of advanced search request.",
      "example" : {
        "keyword" : "string",
        "offset" : 5,
        "limit" : 10,
        "filter" : {
          "add" : [ {
            "typeName" : "string",
            "includeSubTypes" : true
          } ]
        }
      }
    },
    "json_SuggestRequest" : {
      "type" : "object",
      "properties" : {
        "keywords" : {
          "type" : "string",
          "description" : "The keywords applied to all fields that support suggest operation. It must be at least 1 character, and no more than 100 characters. In the index schema we defined a default suggester which lists all the supported fields and specifies a search mode."
        },
        "limit" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The number of suggestions we hope to return. The default value is 5. The value must be a number between 1 and 100."
        },
        "filter" : {
          "type" : "object",
          "description" : "The filter for the search."
        }
      },
      "title" : "SuggestRequest",
      "description" : "The query of suggest request.",
      "example" : {
        "keyword" : "string",
        "limit" : 10,
        "filter" : {
          "add" : [ {
            "typeName" : "string",
            "includeSubTypes" : true
          } ]
        }
      }
    },
    "json_HookNotificationType" : {
      "type" : "string",
      "enum" : [ "TYPE_CREATE", "TYPE_UPDATE", "ENTITY_CREATE", "ENTITY_PARTIAL_UPDATE", "ENTITY_FULL_UPDATE", "ENTITY_DELETE", "ENTITY_CREATE_V2", "ENTITY_PARTIAL_UPDATE_V2", "ENTITY_FULL_UPDATE_V2", "ENTITY_DELETE_V2" ],
      "title" : "HookNotificationType",
      "description" : "Enum of hook notification type."
    },
    "json_HookNotification" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "$ref" : "#/definitions/json_HookNotificationType",
          "description" : "The type of the notification. Different behavior will be invoked by the value."
        },
        "user" : {
          "type" : "string",
          "default" : "UNKNOWN",
          "description" : "The user of the notification. Default to be \"UNKNOWN\"."
        }
      },
      "title" : "HookNotification",
      "description" : "The base class for hook notification."
    },
    "json_EntityCreateRequestV2" : {
      "properties" : {
        "type" : {
          "$ref" : "#/definitions/json_HookNotificationType",
          "description" : "The type of the notification. Different behavior will be invoked by the value."
        },
        "user" : {
          "type" : "string",
          "default" : "UNKNOWN",
          "description" : "The user of the notification. Default to be \"UNKNOWN\"."
        },
        "entities" : {
          "$ref" : "#/definitions/json_AtlasEntitiesWithExtInfo"
        }
      },
      "title" : "EntityCreateRequestV2",
      "description" : "The class for hook notification for type ENTITY_CREATE_V2."
    },
    "json_EntityUpdateRequestV2" : {
      "properties" : {
        "type" : {
          "$ref" : "#/definitions/json_HookNotificationType",
          "description" : "The type of the notification. Different behavior will be invoked by the value."
        },
        "user" : {
          "type" : "string",
          "default" : "UNKNOWN",
          "description" : "The user of the notification. Default to be \"UNKNOWN\"."
        },
        "entities" : {
          "$ref" : "#/definitions/json_AtlasEntitiesWithExtInfo"
        }
      },
      "title" : "EntityUpdateRequestV2",
      "description" : "The class for hook notification for type ENTITY_FULL_UPDATE_V2."
    },
    "json_EntityPartialUpdateRequestV2" : {
      "properties" : {
        "type" : {
          "$ref" : "#/definitions/json_HookNotificationType",
          "description" : "The type of the notification. Different behavior will be invoked by the value."
        },
        "user" : {
          "type" : "string",
          "default" : "UNKNOWN",
          "description" : "The user of the notification. Default to be \"UNKNOWN\"."
        },
        "entityId" : {
          "$ref" : "#/definitions/json_AtlasObjectId"
        },
        "entity" : {
          "$ref" : "#/definitions/json_AtlasEntitiesWithExtInfo"
        }
      },
      "title" : "EntityPartialUpdateRequestV2",
      "description" : "The class for hook notification for type ENTITY_PARTIAL_UPDATE_V2."
    },
    "json_EntityDeleteRequestV2" : {
      "properties" : {
        "type" : {
          "$ref" : "#/definitions/json_HookNotificationType",
          "description" : "The type of the notification. Different behavior will be invoked by the value."
        },
        "user" : {
          "type" : "string",
          "default" : "UNKNOWN",
          "description" : "The user of the notification. Default to be \"UNKNOWN\"."
        },
        "entities" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/json_AtlasObjectId"
          }
        }
      },
      "title" : "EntityDeleteRequestV2",
      "description" : "The class for hook notification for type ENTITY_DELETE_V2."
    },
    "xml_ns0_PList" : {
      "title" : "PList",
      "xml" : {
        "name" : "PList",
        "namespace" : ""
      },
      "allOf" : [ {
        "properties" : {
          "list" : {
            "type" : "array",
            "xml" : {
              "namespace" : ""
            },
            "description" : "An array of objects.",
            "items" : {
              "type" : "object",
              "properties" : { }
            }
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32",
            "xml" : {
              "namespace" : ""
            },
            "description" : "The size of the page."
          },
          "sortBy" : {
            "type" : "string",
            "xml" : {
              "namespace" : ""
            },
            "description" : "The sorted by field."
          },
          "sortType" : {
            "xml" : {
              "namespace" : ""
            },
            "$ref" : "#/definitions/xml_ns0_sortType"
          },
          "startIndex" : {
            "type" : "integer",
            "format" : "int64",
            "xml" : {
              "namespace" : ""
            },
            "description" : "The start index of the page."
          },
          "totalCount" : {
            "type" : "integer",
            "format" : "int64",
            "xml" : {
              "namespace" : ""
            },
            "description" : "The total count of items."
          }
        }
      }, { } ],
      "description" : "Paginated-list, for returning search results."
    },
    "xml_ns0_searchFilter" : {
      "title" : "searchFilter",
      "xml" : {
        "name" : "searchFilter",
        "namespace" : ""
      },
      "allOf" : [ {
        "properties" : {
          "getCount" : {
            "type" : "boolean",
            "xml" : {
              "namespace" : ""
            },
            "description" : "Determines if get the count."
          },
          "maxRows" : {
            "type" : "integer",
            "format" : "int64",
            "xml" : {
              "namespace" : ""
            },
            "description" : "The maximum of rows."
          },
          "params" : {
            "type" : "object",
            "xml" : {
              "namespace" : ""
            },
            "description" : "The parameter of the search.",
            "properties" : { }
          },
          "sortBy" : {
            "type" : "string",
            "xml" : {
              "namespace" : ""
            },
            "description" : "The sorted by field."
          },
          "sortType" : {
            "xml" : {
              "namespace" : ""
            },
            "$ref" : "#/definitions/xml_ns0_sortType"
          },
          "startIndex" : {
            "type" : "integer",
            "format" : "int64",
            "xml" : {
              "namespace" : ""
            },
            "description" : "The start index of the search."
          }
        }
      }, { } ],
      "description" : "Generic filter, to specify search criteria using name/value pairs."
    },
    "xml_ns0_sortType" : {
      "type" : "string",
      "title" : "sortType",
      "description" : "to specify whether the result should be sorted? If yes, whether asc or desc.",
      "enum" : [ "NONE", "ASC", "DESC" ]
    },
    "xml_ns0_timeBoundary" : {
      "title" : "timeBoundary",
      "xml" : {
        "name" : "timeBoundary",
        "namespace" : ""
      },
      "allOf" : [ {
        "properties" : {
          "endTime" : {
            "type" : "string",
            "xml" : {
              "namespace" : ""
            },
            "description" : "The end of the time boundary."
          },
          "startTime" : {
            "type" : "string",
            "xml" : {
              "namespace" : ""
            },
            "description" : "The start of the time boundary."
          },
          "timeZone" : {
            "type" : "string",
            "xml" : {
              "namespace" : ""
            },
            "description" : "The timezone of the time boundary."
          }
        }
      }, { } ],
      "description" : "Captures time-boundary details"
    }
  },
  "parameters" : {
    "guid" : {
      "name" : "guid",
      "description" : "The globally unique identifier of the entity.",
      "in" : "path",
      "required" : true,
      "type" : "string",
      "pattern" : "^[-\\w\\._\\(\\)]+$",
      "minLength" : 1,
      "maxLength" : 4096,
      "x-ms-parameter-location" : "method"
    },
    "classificationName" : {
      "name" : "classificationName",
      "description" : "The name of the classification.",
      "in" : "path",
      "required" : true,
      "type" : "string",
      "pattern" : "^[-\\w\\._\\(\\)]+$",
      "minLength" : 1,
      "maxLength" : 4096,
      "x-ms-parameter-location" : "method"
    },
    "typeName" : {
      "name" : "typeName",
      "description" : "The name of the type.",
      "in" : "path",
      "required" : true,
      "type" : "string",
      "pattern" : "^[-\\w\\._\\(\\)]+$",
      "minLength" : 1,
      "maxLength" : 4096,
      "x-ms-parameter-location" : "method"
    },
    "categoryGuid" : {
      "name" : "categoryGuid",
      "description" : "The globally unique identifier of the category.",
      "in" : "path",
      "required" : true,
      "type" : "string",
      "pattern" : "^[-\\w\\._\\(\\)]+$",
      "minLength" : 1,
      "maxLength" : 4096,
      "x-ms-parameter-location" : "method"
    },
    "limit" : {
      "name" : "limit",
      "description" : "The page size - by default there is no paging.",
      "in" : "query",
      "required" : false,
      "type" : "string",
      "default" : "50"
    },
    "offset" : {
      "name" : "offset",
      "description" : "The offset for pagination purpose.",
      "in" : "query",
      "required" : false,
      "type" : "string",
      "default" : "0"
    },
    "sort" : {
      "name" : "sort",
      "description" : "The sort order, ASC (default) or DESC.",
      "in" : "query",
      "required" : false,
      "type" : "string",
      "default" : "ASC"
    },
    "termGuid" : {
      "name" : "termGuid",
      "in" : "path",
      "description" : "The globally unique identifier for glossary term.",
      "required" : true,
      "type" : "string",
      "pattern" : "^[-\\w\\._\\(\\)]+$",
      "minLength" : 1,
      "maxLength" : 4096,
      "x-ms-parameter-location" : "method"
    },
    "glossaryGuid" : {
      "name" : "glossaryGuid",
      "in" : "path",
      "description" : "The globally unique identifier for glossary.",
      "required" : true,
      "type" : "string",
      "pattern" : "^[-\\w\\._\\(\\)]+$",
      "minLength" : 1,
      "maxLength" : 4096,
      "x-ms-parameter-location" : "method"
    },
    "glossaryName" : {
      "name" : "glossaryName",
      "in" : "path",
      "description" : "The name of the glossary.",
      "required" : true,
      "type" : "string",
      "pattern" : "^[-\\w\\._\\(\\)]+$",
      "minLength" : 1,
      "maxLength" : 4096,
      "x-ms-parameter-location" : "method"
    },
    "searchClassification" : {
      "name" : "classification",
      "description" : "Limits the result to only entities tagged with the given classification or its sub-types.",
      "in" : "query",
      "required" : false,
      "maxLength" : 4096,
      "type" : "string"
    },
    "searchExcludeDeletedEntities" : {
      "name" : "excludeDeletedEntities",
      "description" : "Limits whether excludes deleted entities. True if excludes the deleted ones.",
      "in" : "query",
      "required" : false,
      "type" : "boolean"
    },
    "searchLimit" : {
      "name" : "limit",
      "description" : "Limits the result set to only include the specified number of entries.",
      "in" : "query",
      "required" : false,
      "type" : "integer",
      "format" : "int32"
    },
    "searchOffset" : {
      "name" : "offset",
      "description" : "The start offset for pagination purpose.",
      "in" : "query",
      "required" : false,
      "type" : "integer",
      "format" : "int32"
    },
    "searchQuery" : {
      "name" : "query",
      "description" : "The fulltext query string.",
      "in" : "query",
      "required" : false,
      "type" : "string"
    },
    "searchTypeName" : {
      "name" : "typeName",
      "description" : "Limits the result to only entities of specified type or its sub-types.",
      "in" : "query",
      "required" : true,
      "maxLength" : 4096,
      "type" : "string"
    },
    "searchKeyword" : {
      "name" : "keyword",
      "description" : "The keyword to get auto complete.",
      "in" : "query",
      "required" : true,
      "type" : "string"
    },
    "depth" : {
      "name" : "depth",
      "description" : "The number of hops for lineage.",
      "in" : "query",
      "required" : false,
      "type" : "integer",
      "default" : 3,
      "format" : "int32"
    },
    "direction" : {
      "name" : "direction",
      "description" : "The direction of the lineage, which could be INPUT, OUTPUT or BOTH.",
      "in" : "query",
      "required" : true,
      "type" : "string",
      "enum" : [ "BOTH", "INPUT", "OUTPUT" ]
    },
    "extendedInfo" : {
      "name" : "extendedInfo",
      "description" : "Limits whether includes extended information.",
      "in" : "query",
      "required" : false,
      "type" : "boolean"
    },
    "relationshipRestRelationshipGuid" : {
      "name" : "guid",
      "description" : "The globally unique identifier of the relationship.",
      "in" : "path",
      "required" : true,
      "type" : "string",
      "pattern" : "^[-\\w\\._\\(\\)]+$",
      "minLength" : 1,
      "maxLength" : 4096,
      "x-ms-parameter-location" : "method"
    },
    "typesRestClassificationGuid" : {
      "name" : "guid",
      "description" : "The globally unique identifier of the classification.",
      "in" : "path",
      "required" : true,
      "type" : "string",
      "pattern" : "^[-\\w\\._\\(\\)]+$",
      "minLength" : 1,
      "maxLength" : 4096,
      "x-ms-parameter-location" : "method"
    },
    "typesRestClassificationName" : {
      "name" : "name",
      "description" : "The name of the classification.",
      "in" : "path",
      "required" : true,
      "type" : "string",
      "pattern" : "^[-\\w\\._\\(\\)]+$",
      "minLength" : 1,
      "maxLength" : 4096,
      "x-ms-parameter-location" : "method"
    },
    "typesRestEntityGuid" : {
      "name" : "guid",
      "description" : "The globally unique identifier of the entity.",
      "in" : "path",
      "required" : true,
      "type" : "string",
      "pattern" : "^[-\\w\\._\\(\\)]+$",
      "minLength" : 1,
      "maxLength" : 4096,
      "x-ms-parameter-location" : "method"
    },
    "typesRestEntityName" : {
      "name" : "name",
      "description" : "The name of the entity.",
      "in" : "path",
      "required" : true,
      "type" : "string",
      "pattern" : "^[-\\w\\._\\(\\)]+$",
      "minLength" : 1,
      "maxLength" : 4096,
      "x-ms-parameter-location" : "method"
    },
    "typesRestEnumGuid" : {
      "name" : "guid",
      "description" : "The globally unique identifier of the enum.",
      "in" : "path",
      "required" : true,
      "type" : "string",
      "pattern" : "^[-\\w\\._\\(\\)]+$",
      "minLength" : 1,
      "maxLength" : 4096,
      "x-ms-parameter-location" : "method"
    },
    "typesRestEnumName" : {
      "name" : "name",
      "description" : "The name of the enum.",
      "in" : "path",
      "required" : true,
      "type" : "string",
      "pattern" : "^[-\\w\\._\\(\\)]+$",
      "minLength" : 1,
      "maxLength" : 4096,
      "x-ms-parameter-location" : "method"
    },
    "typesRestRelationshipGuid" : {
      "name" : "guid",
      "description" : "The globally unique identifier of the relationship.",
      "in" : "path",
      "required" : true,
      "type" : "string",
      "pattern" : "^[-\\w\\._\\(\\)]+$",
      "minLength" : 1,
      "maxLength" : 4096,
      "x-ms-parameter-location" : "method"
    },
    "typesRestRelationshipName" : {
      "name" : "name",
      "description" : "The name of the relationship.",
      "in" : "path",
      "required" : true,
      "type" : "string",
      "pattern" : "^[-\\w\\._\\(\\)]+$",
      "minLength" : 1,
      "maxLength" : 4096,
      "x-ms-parameter-location" : "method"
    },
    "typesRestStructGuid" : {
      "name" : "guid",
      "description" : "The globally unique identifier of the struct.",
      "in" : "path",
      "required" : true,
      "type" : "string",
      "pattern" : "^[-\\w\\._\\(\\)]+$",
      "minLength" : 1,
      "maxLength" : 4096,
      "x-ms-parameter-location" : "method"
    },
    "typesRestStructName" : {
      "name" : "name",
      "description" : "The name of the struct.",
      "in" : "path",
      "required" : true,
      "type" : "string",
      "pattern" : "^[-\\w\\._\\(\\)]+$",
      "minLength" : 1,
      "maxLength" : 4096,
      "x-ms-parameter-location" : "method"
    },
    "typesRestTypeGuid" : {
      "name" : "guid",
      "description" : "The globally unique identifier of the type.",
      "in" : "path",
      "required" : true,
      "type" : "string",
      "pattern" : "^[-\\w\\._\\(\\)]+$",
      "minLength" : 1,
      "maxLength" : 4096,
      "x-ms-parameter-location" : "method"
    },
    "typesRestTypeName" : {
      "name" : "name",
      "description" : "The name of the type.",
      "in" : "path",
      "required" : true,
      "type" : "string",
      "pattern" : "^[-\\w\\._\\(\\)]+$",
      "minLength" : 1,
      "maxLength" : 4096,
      "x-ms-parameter-location" : "method"
    },
    "userId" : {
      "name" : "userId",
      "description" : "The user ID.",
      "in" : "path",
      "required" : true,
      "type" : "string",
      "x-ms-parameter-location" : "method"
    }
  }
}