/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.msft.atlasscanservice.implementation;

import java.util.List;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.msft.atlasscanservice.JsonAtlasGlossaryBaseObject;

/**
 * AtlasGlossary.
 * The glossary object.
 */
public class JsonAtlasGlossaryInner extends JsonAtlasGlossaryBaseObject {
    /**
     * An array of categories.
     */
    @JsonProperty(value = "categories")
    private List<JsonAtlasRelatedCategoryHeaderInner> categories;

    /**
     * The language of the glossary.
     */
    @JsonProperty(value = "language")
    private String language;

    /**
     * An array of related term headers.
     */
    @JsonProperty(value = "terms")
    private List<JsonAtlasRelatedTermHeaderInner> terms;

    /**
     * The usage of the glossary.
     */
    @JsonProperty(value = "usage")
    private String usage;

    /**
     * Get an array of categories.
     *
     * @return the categories value
     */
    public List<JsonAtlasRelatedCategoryHeaderInner> categories() {
        return this.categories;
    }

    /**
     * Set an array of categories.
     *
     * @param categories the categories value to set
     * @return the JsonAtlasGlossaryInner object itself.
     */
    public JsonAtlasGlossaryInner withCategories(List<JsonAtlasRelatedCategoryHeaderInner> categories) {
        this.categories = categories;
        return this;
    }

    /**
     * Get the language of the glossary.
     *
     * @return the language value
     */
    public String language() {
        return this.language;
    }

    /**
     * Set the language of the glossary.
     *
     * @param language the language value to set
     * @return the JsonAtlasGlossaryInner object itself.
     */
    public JsonAtlasGlossaryInner withLanguage(String language) {
        this.language = language;
        return this;
    }

    /**
     * Get an array of related term headers.
     *
     * @return the terms value
     */
    public List<JsonAtlasRelatedTermHeaderInner> terms() {
        return this.terms;
    }

    /**
     * Set an array of related term headers.
     *
     * @param terms the terms value to set
     * @return the JsonAtlasGlossaryInner object itself.
     */
    public JsonAtlasGlossaryInner withTerms(List<JsonAtlasRelatedTermHeaderInner> terms) {
        this.terms = terms;
        return this;
    }

    /**
     * Get the usage of the glossary.
     *
     * @return the usage value
     */
    public String usage() {
        return this.usage;
    }

    /**
     * Set the usage of the glossary.
     *
     * @param usage the usage value to set
     * @return the JsonAtlasGlossaryInner object itself.
     */
    public JsonAtlasGlossaryInner withUsage(String usage) {
        this.usage = usage;
        return this;
    }

}
