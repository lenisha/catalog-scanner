/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.msft.atlasscanservice;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * searchFilter.
 * Generic filter, to specify search criteria using name/value pairs.
 */
public class XmlNs0SearchFilter {
    /**
     * Determines if get the count.
     */
    @JsonProperty(value = "getCount")
    private Boolean getCount;

    /**
     * The maximum of rows.
     */
    @JsonProperty(value = "maxRows")
    private Long maxRows;

    /**
     * The parameter of the search.
     */
    @JsonProperty(value = "params")
    private Object params;

    /**
     * The sorted by field.
     */
    @JsonProperty(value = "sortBy")
    private String sortBy;

    /**
     * Possible values include: 'NONE', 'ASC', 'DESC'.
     */
    @JsonProperty(value = "sortType")
    private String sortType;

    /**
     * The start index of the search.
     */
    @JsonProperty(value = "startIndex")
    private Long startIndex;

    /**
     * Get determines if get the count.
     *
     * @return the getCount value
     */
    public Boolean getCount() {
        return this.getCount;
    }

    /**
     * Set determines if get the count.
     *
     * @param getCount the getCount value to set
     * @return the XmlNs0SearchFilter object itself.
     */
    public XmlNs0SearchFilter withGetCount(Boolean getCount) {
        this.getCount = getCount;
        return this;
    }

    /**
     * Get the maximum of rows.
     *
     * @return the maxRows value
     */
    public Long maxRows() {
        return this.maxRows;
    }

    /**
     * Set the maximum of rows.
     *
     * @param maxRows the maxRows value to set
     * @return the XmlNs0SearchFilter object itself.
     */
    public XmlNs0SearchFilter withMaxRows(Long maxRows) {
        this.maxRows = maxRows;
        return this;
    }

    /**
     * Get the parameter of the search.
     *
     * @return the params value
     */
    public Object params() {
        return this.params;
    }

    /**
     * Set the parameter of the search.
     *
     * @param params the params value to set
     * @return the XmlNs0SearchFilter object itself.
     */
    public XmlNs0SearchFilter withParams(Object params) {
        this.params = params;
        return this;
    }

    /**
     * Get the sorted by field.
     *
     * @return the sortBy value
     */
    public String sortBy() {
        return this.sortBy;
    }

    /**
     * Set the sorted by field.
     *
     * @param sortBy the sortBy value to set
     * @return the XmlNs0SearchFilter object itself.
     */
    public XmlNs0SearchFilter withSortBy(String sortBy) {
        this.sortBy = sortBy;
        return this;
    }

    /**
     * Get possible values include: 'NONE', 'ASC', 'DESC'.
     *
     * @return the sortType value
     */
    public String sortType() {
        return this.sortType;
    }

    /**
     * Set possible values include: 'NONE', 'ASC', 'DESC'.
     *
     * @param sortType the sortType value to set
     * @return the XmlNs0SearchFilter object itself.
     */
    public XmlNs0SearchFilter withSortType(String sortType) {
        this.sortType = sortType;
        return this;
    }

    /**
     * Get the start index of the search.
     *
     * @return the startIndex value
     */
    public Long startIndex() {
        return this.startIndex;
    }

    /**
     * Set the start index of the search.
     *
     * @param startIndex the startIndex value to set
     * @return the XmlNs0SearchFilter object itself.
     */
    public XmlNs0SearchFilter withStartIndex(Long startIndex) {
        this.startIndex = startIndex;
        return this;
    }

}
