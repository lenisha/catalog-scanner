/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.msft.atlasscanservice.implementation;

import com.msft.atlasscanservice.JsonAtlasGlossaryHeader;
import java.util.List;
import com.msft.atlasscanservice.JsonAtlasTermCategorizationHeader;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.msft.atlasscanservice.JsonAtlasGlossaryBaseObject;

/**
 * AtlasGlossaryTerm.
 * The glossary term.
 */
public class JsonAtlasGlossaryTermInner extends JsonAtlasGlossaryBaseObject {
    /**
     * The abbreviation of the term.
     */
    @JsonProperty(value = "abbreviation")
    private String abbreviation;

    /**
     * The anchor property.
     */
    @JsonProperty(value = "anchor")
    private JsonAtlasGlossaryHeader anchor;

    /**
     * An array of related term headers as antonyms.
     */
    @JsonProperty(value = "antonyms")
    private List<JsonAtlasRelatedTermHeaderInner> antonyms;

    /**
     * An array of related object IDs.
     */
    @JsonProperty(value = "assignedEntities")
    private List<JsonAtlasRelatedObjectIdInner> assignedEntities;

    /**
     * An array of term categorization headers.
     */
    @JsonProperty(value = "categories")
    private List<JsonAtlasTermCategorizationHeader> categories;

    /**
     * An array of related term headers.
     */
    @JsonProperty(value = "classifies")
    private List<JsonAtlasRelatedTermHeaderInner> classifies;

    /**
     * An array of examples.
     */
    @JsonProperty(value = "examples")
    private List<String> examples;

    /**
     * An array of related term headers indicating the is-a relationship.
     */
    @JsonProperty(value = "isA")
    private List<JsonAtlasRelatedTermHeaderInner> isA;

    /**
     * An array of preferred related term headers.
     */
    @JsonProperty(value = "preferredTerms")
    private List<JsonAtlasRelatedTermHeaderInner> preferredTerms;

    /**
     * An array of related term headers that are preferred to.
     */
    @JsonProperty(value = "preferredToTerms")
    private List<JsonAtlasRelatedTermHeaderInner> preferredToTerms;

    /**
     * An array of related term headers that are replaced by.
     */
    @JsonProperty(value = "replacedBy")
    private List<JsonAtlasRelatedTermHeaderInner> replacedBy;

    /**
     * An array of related term headers for replacement.
     */
    @JsonProperty(value = "replacementTerms")
    private List<JsonAtlasRelatedTermHeaderInner> replacementTerms;

    /**
     * An array of related term headers for see also.
     */
    @JsonProperty(value = "seeAlso")
    private List<JsonAtlasRelatedTermHeaderInner> seeAlso;

    /**
     * An array of related term headers as synonyms.
     */
    @JsonProperty(value = "synonyms")
    private List<JsonAtlasRelatedTermHeaderInner> synonyms;

    /**
     * An array of translated related term headers.
     */
    @JsonProperty(value = "translatedTerms")
    private List<JsonAtlasRelatedTermHeaderInner> translatedTerms;

    /**
     * An array of related term headers for translation.
     */
    @JsonProperty(value = "translationTerms")
    private List<JsonAtlasRelatedTermHeaderInner> translationTerms;

    /**
     * The usage of the term.
     */
    @JsonProperty(value = "usage")
    private String usage;

    /**
     * An array of related term headers as valid values.
     */
    @JsonProperty(value = "validValues")
    private List<JsonAtlasRelatedTermHeaderInner> validValues;

    /**
     * An array of related term headers as valid values for other records.
     */
    @JsonProperty(value = "validValuesFor")
    private List<JsonAtlasRelatedTermHeaderInner> validValuesFor;

    /**
     * Get the abbreviation of the term.
     *
     * @return the abbreviation value
     */
    public String abbreviation() {
        return this.abbreviation;
    }

    /**
     * Set the abbreviation of the term.
     *
     * @param abbreviation the abbreviation value to set
     * @return the JsonAtlasGlossaryTermInner object itself.
     */
    public JsonAtlasGlossaryTermInner withAbbreviation(String abbreviation) {
        this.abbreviation = abbreviation;
        return this;
    }

    /**
     * Get the anchor value.
     *
     * @return the anchor value
     */
    public JsonAtlasGlossaryHeader anchor() {
        return this.anchor;
    }

    /**
     * Set the anchor value.
     *
     * @param anchor the anchor value to set
     * @return the JsonAtlasGlossaryTermInner object itself.
     */
    public JsonAtlasGlossaryTermInner withAnchor(JsonAtlasGlossaryHeader anchor) {
        this.anchor = anchor;
        return this;
    }

    /**
     * Get an array of related term headers as antonyms.
     *
     * @return the antonyms value
     */
    public List<JsonAtlasRelatedTermHeaderInner> antonyms() {
        return this.antonyms;
    }

    /**
     * Set an array of related term headers as antonyms.
     *
     * @param antonyms the antonyms value to set
     * @return the JsonAtlasGlossaryTermInner object itself.
     */
    public JsonAtlasGlossaryTermInner withAntonyms(List<JsonAtlasRelatedTermHeaderInner> antonyms) {
        this.antonyms = antonyms;
        return this;
    }

    /**
     * Get an array of related object IDs.
     *
     * @return the assignedEntities value
     */
    public List<JsonAtlasRelatedObjectIdInner> assignedEntities() {
        return this.assignedEntities;
    }

    /**
     * Set an array of related object IDs.
     *
     * @param assignedEntities the assignedEntities value to set
     * @return the JsonAtlasGlossaryTermInner object itself.
     */
    public JsonAtlasGlossaryTermInner withAssignedEntities(List<JsonAtlasRelatedObjectIdInner> assignedEntities) {
        this.assignedEntities = assignedEntities;
        return this;
    }

    /**
     * Get an array of term categorization headers.
     *
     * @return the categories value
     */
    public List<JsonAtlasTermCategorizationHeader> categories() {
        return this.categories;
    }

    /**
     * Set an array of term categorization headers.
     *
     * @param categories the categories value to set
     * @return the JsonAtlasGlossaryTermInner object itself.
     */
    public JsonAtlasGlossaryTermInner withCategories(List<JsonAtlasTermCategorizationHeader> categories) {
        this.categories = categories;
        return this;
    }

    /**
     * Get an array of related term headers.
     *
     * @return the classifies value
     */
    public List<JsonAtlasRelatedTermHeaderInner> classifies() {
        return this.classifies;
    }

    /**
     * Set an array of related term headers.
     *
     * @param classifies the classifies value to set
     * @return the JsonAtlasGlossaryTermInner object itself.
     */
    public JsonAtlasGlossaryTermInner withClassifies(List<JsonAtlasRelatedTermHeaderInner> classifies) {
        this.classifies = classifies;
        return this;
    }

    /**
     * Get an array of examples.
     *
     * @return the examples value
     */
    public List<String> examples() {
        return this.examples;
    }

    /**
     * Set an array of examples.
     *
     * @param examples the examples value to set
     * @return the JsonAtlasGlossaryTermInner object itself.
     */
    public JsonAtlasGlossaryTermInner withExamples(List<String> examples) {
        this.examples = examples;
        return this;
    }

    /**
     * Get an array of related term headers indicating the is-a relationship.
     *
     * @return the isA value
     */
    public List<JsonAtlasRelatedTermHeaderInner> isA() {
        return this.isA;
    }

    /**
     * Set an array of related term headers indicating the is-a relationship.
     *
     * @param isA the isA value to set
     * @return the JsonAtlasGlossaryTermInner object itself.
     */
    public JsonAtlasGlossaryTermInner withIsA(List<JsonAtlasRelatedTermHeaderInner> isA) {
        this.isA = isA;
        return this;
    }

    /**
     * Get an array of preferred related term headers.
     *
     * @return the preferredTerms value
     */
    public List<JsonAtlasRelatedTermHeaderInner> preferredTerms() {
        return this.preferredTerms;
    }

    /**
     * Set an array of preferred related term headers.
     *
     * @param preferredTerms the preferredTerms value to set
     * @return the JsonAtlasGlossaryTermInner object itself.
     */
    public JsonAtlasGlossaryTermInner withPreferredTerms(List<JsonAtlasRelatedTermHeaderInner> preferredTerms) {
        this.preferredTerms = preferredTerms;
        return this;
    }

    /**
     * Get an array of related term headers that are preferred to.
     *
     * @return the preferredToTerms value
     */
    public List<JsonAtlasRelatedTermHeaderInner> preferredToTerms() {
        return this.preferredToTerms;
    }

    /**
     * Set an array of related term headers that are preferred to.
     *
     * @param preferredToTerms the preferredToTerms value to set
     * @return the JsonAtlasGlossaryTermInner object itself.
     */
    public JsonAtlasGlossaryTermInner withPreferredToTerms(List<JsonAtlasRelatedTermHeaderInner> preferredToTerms) {
        this.preferredToTerms = preferredToTerms;
        return this;
    }

    /**
     * Get an array of related term headers that are replaced by.
     *
     * @return the replacedBy value
     */
    public List<JsonAtlasRelatedTermHeaderInner> replacedBy() {
        return this.replacedBy;
    }

    /**
     * Set an array of related term headers that are replaced by.
     *
     * @param replacedBy the replacedBy value to set
     * @return the JsonAtlasGlossaryTermInner object itself.
     */
    public JsonAtlasGlossaryTermInner withReplacedBy(List<JsonAtlasRelatedTermHeaderInner> replacedBy) {
        this.replacedBy = replacedBy;
        return this;
    }

    /**
     * Get an array of related term headers for replacement.
     *
     * @return the replacementTerms value
     */
    public List<JsonAtlasRelatedTermHeaderInner> replacementTerms() {
        return this.replacementTerms;
    }

    /**
     * Set an array of related term headers for replacement.
     *
     * @param replacementTerms the replacementTerms value to set
     * @return the JsonAtlasGlossaryTermInner object itself.
     */
    public JsonAtlasGlossaryTermInner withReplacementTerms(List<JsonAtlasRelatedTermHeaderInner> replacementTerms) {
        this.replacementTerms = replacementTerms;
        return this;
    }

    /**
     * Get an array of related term headers for see also.
     *
     * @return the seeAlso value
     */
    public List<JsonAtlasRelatedTermHeaderInner> seeAlso() {
        return this.seeAlso;
    }

    /**
     * Set an array of related term headers for see also.
     *
     * @param seeAlso the seeAlso value to set
     * @return the JsonAtlasGlossaryTermInner object itself.
     */
    public JsonAtlasGlossaryTermInner withSeeAlso(List<JsonAtlasRelatedTermHeaderInner> seeAlso) {
        this.seeAlso = seeAlso;
        return this;
    }

    /**
     * Get an array of related term headers as synonyms.
     *
     * @return the synonyms value
     */
    public List<JsonAtlasRelatedTermHeaderInner> synonyms() {
        return this.synonyms;
    }

    /**
     * Set an array of related term headers as synonyms.
     *
     * @param synonyms the synonyms value to set
     * @return the JsonAtlasGlossaryTermInner object itself.
     */
    public JsonAtlasGlossaryTermInner withSynonyms(List<JsonAtlasRelatedTermHeaderInner> synonyms) {
        this.synonyms = synonyms;
        return this;
    }

    /**
     * Get an array of translated related term headers.
     *
     * @return the translatedTerms value
     */
    public List<JsonAtlasRelatedTermHeaderInner> translatedTerms() {
        return this.translatedTerms;
    }

    /**
     * Set an array of translated related term headers.
     *
     * @param translatedTerms the translatedTerms value to set
     * @return the JsonAtlasGlossaryTermInner object itself.
     */
    public JsonAtlasGlossaryTermInner withTranslatedTerms(List<JsonAtlasRelatedTermHeaderInner> translatedTerms) {
        this.translatedTerms = translatedTerms;
        return this;
    }

    /**
     * Get an array of related term headers for translation.
     *
     * @return the translationTerms value
     */
    public List<JsonAtlasRelatedTermHeaderInner> translationTerms() {
        return this.translationTerms;
    }

    /**
     * Set an array of related term headers for translation.
     *
     * @param translationTerms the translationTerms value to set
     * @return the JsonAtlasGlossaryTermInner object itself.
     */
    public JsonAtlasGlossaryTermInner withTranslationTerms(List<JsonAtlasRelatedTermHeaderInner> translationTerms) {
        this.translationTerms = translationTerms;
        return this;
    }

    /**
     * Get the usage of the term.
     *
     * @return the usage value
     */
    public String usage() {
        return this.usage;
    }

    /**
     * Set the usage of the term.
     *
     * @param usage the usage value to set
     * @return the JsonAtlasGlossaryTermInner object itself.
     */
    public JsonAtlasGlossaryTermInner withUsage(String usage) {
        this.usage = usage;
        return this;
    }

    /**
     * Get an array of related term headers as valid values.
     *
     * @return the validValues value
     */
    public List<JsonAtlasRelatedTermHeaderInner> validValues() {
        return this.validValues;
    }

    /**
     * Set an array of related term headers as valid values.
     *
     * @param validValues the validValues value to set
     * @return the JsonAtlasGlossaryTermInner object itself.
     */
    public JsonAtlasGlossaryTermInner withValidValues(List<JsonAtlasRelatedTermHeaderInner> validValues) {
        this.validValues = validValues;
        return this;
    }

    /**
     * Get an array of related term headers as valid values for other records.
     *
     * @return the validValuesFor value
     */
    public List<JsonAtlasRelatedTermHeaderInner> validValuesFor() {
        return this.validValuesFor;
    }

    /**
     * Set an array of related term headers as valid values for other records.
     *
     * @param validValuesFor the validValuesFor value to set
     * @return the JsonAtlasGlossaryTermInner object itself.
     */
    public JsonAtlasGlossaryTermInner withValidValuesFor(List<JsonAtlasRelatedTermHeaderInner> validValuesFor) {
        this.validValuesFor = validValuesFor;
        return this;
    }

}
