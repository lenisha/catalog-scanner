/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.msft.atlasscanservice.implementation;

import com.microsoft.azure.AzureClient;
import com.microsoft.azure.AzureServiceClient;
import com.microsoft.rest.RestClient;
import com.microsoft.rest.credentials.ServiceClientCredentials;

/**
 * Initializes a new instance of the DataCatalogClientImpl class.
 */
public class DataCatalogClientImpl extends AzureServiceClient {
    /** the {@link AzureClient} used for long running operations. */
    private AzureClient azureClient;

    /**
     * Gets the {@link AzureClient} used for long running operations.
     * @return the azure client;
     */
    public AzureClient getAzureClient() {
        return this.azureClient;
    }

    /** The page size - by default there is no paging. */
    private String limit;

    /**
     * Gets The page size - by default there is no paging.
     *
     * @return the limit value.
     */
    public String limit() {
        return this.limit;
    }

    /**
     * Sets The page size - by default there is no paging.
     *
     * @param limit the limit value.
     * @return the service client itself
     */
    public DataCatalogClientImpl withLimit(String limit) {
        this.limit = limit;
        return this;
    }

    /** The offset for pagination purpose. */
    private String offset;

    /**
     * Gets The offset for pagination purpose.
     *
     * @return the offset value.
     */
    public String offset() {
        return this.offset;
    }

    /**
     * Sets The offset for pagination purpose.
     *
     * @param offset the offset value.
     * @return the service client itself
     */
    public DataCatalogClientImpl withOffset(String offset) {
        this.offset = offset;
        return this;
    }

    /** The sort order, ASC (default) or DESC. */
    private String sort;

    /**
     * Gets The sort order, ASC (default) or DESC.
     *
     * @return the sort value.
     */
    public String sort() {
        return this.sort;
    }

    /**
     * Sets The sort order, ASC (default) or DESC.
     *
     * @param sort the sort value.
     * @return the service client itself
     */
    public DataCatalogClientImpl withSort(String sort) {
        this.sort = sort;
        return this;
    }

    /** Limits the result to only entities tagged with the given classification or its sub-types. */
    private String classification;

    /**
     * Gets Limits the result to only entities tagged with the given classification or its sub-types.
     *
     * @return the classification value.
     */
    public String classification() {
        return this.classification;
    }

    /**
     * Sets Limits the result to only entities tagged with the given classification or its sub-types.
     *
     * @param classification the classification value.
     * @return the service client itself
     */
    public DataCatalogClientImpl withClassification(String classification) {
        this.classification = classification;
        return this;
    }

    /** Limits whether excludes deleted entities. True if excludes the deleted ones. */
    private boolean excludeDeletedEntities;

    /**
     * Gets Limits whether excludes deleted entities. True if excludes the deleted ones.
     *
     * @return the excludeDeletedEntities value.
     */
    public boolean excludeDeletedEntities() {
        return this.excludeDeletedEntities;
    }

    /**
     * Sets Limits whether excludes deleted entities. True if excludes the deleted ones.
     *
     * @param excludeDeletedEntities the excludeDeletedEntities value.
     * @return the service client itself
     */
    public DataCatalogClientImpl withExcludeDeletedEntities(boolean excludeDeletedEntities) {
        this.excludeDeletedEntities = excludeDeletedEntities;
        return this;
    }

    /** Limits the result set to only include the specified number of entries. */
    private int limit1;

    /**
     * Gets Limits the result set to only include the specified number of entries.
     *
     * @return the limit1 value.
     */
    public int limit1() {
        return this.limit1;
    }

    /**
     * Sets Limits the result set to only include the specified number of entries.
     *
     * @param limit1 the limit1 value.
     * @return the service client itself
     */
    public DataCatalogClientImpl withLimit1(int limit1) {
        this.limit1 = limit1;
        return this;
    }

    /** The start offset for pagination purpose. */
    private int offset1;

    /**
     * Gets The start offset for pagination purpose.
     *
     * @return the offset1 value.
     */
    public int offset1() {
        return this.offset1;
    }

    /**
     * Sets The start offset for pagination purpose.
     *
     * @param offset1 the offset1 value.
     * @return the service client itself
     */
    public DataCatalogClientImpl withOffset1(int offset1) {
        this.offset1 = offset1;
        return this;
    }

    /** The fulltext query string. */
    private String query;

    /**
     * Gets The fulltext query string.
     *
     * @return the query value.
     */
    public String query() {
        return this.query;
    }

    /**
     * Sets The fulltext query string.
     *
     * @param query the query value.
     * @return the service client itself
     */
    public DataCatalogClientImpl withQuery(String query) {
        this.query = query;
        return this;
    }

    /** Limits the result to only entities of specified type or its sub-types. */
    private String typeName1;

    /**
     * Gets Limits the result to only entities of specified type or its sub-types.
     *
     * @return the typeName1 value.
     */
    public String typeName1() {
        return this.typeName1;
    }

    /**
     * Sets Limits the result to only entities of specified type or its sub-types.
     *
     * @param typeName1 the typeName1 value.
     * @return the service client itself
     */
    public DataCatalogClientImpl withTypeName1(String typeName1) {
        this.typeName1 = typeName1;
        return this;
    }

    /** The keyword to get auto complete. */
    private String keyword;

    /**
     * Gets The keyword to get auto complete.
     *
     * @return the keyword value.
     */
    public String keyword() {
        return this.keyword;
    }

    /**
     * Sets The keyword to get auto complete.
     *
     * @param keyword the keyword value.
     * @return the service client itself
     */
    public DataCatalogClientImpl withKeyword(String keyword) {
        this.keyword = keyword;
        return this;
    }

    /** The number of hops for lineage. */
    private int depth;

    /**
     * Gets The number of hops for lineage.
     *
     * @return the depth value.
     */
    public int depth() {
        return this.depth;
    }

    /**
     * Sets The number of hops for lineage.
     *
     * @param depth the depth value.
     * @return the service client itself
     */
    public DataCatalogClientImpl withDepth(int depth) {
        this.depth = depth;
        return this;
    }

    /** The direction of the lineage, which could be INPUT, OUTPUT or BOTH. Possible values include: 'BOTH', 'INPUT', 'OUTPUT'. */
    private String direction;

    /**
     * Gets The direction of the lineage, which could be INPUT, OUTPUT or BOTH. Possible values include: 'BOTH', 'INPUT', 'OUTPUT'.
     *
     * @return the direction value.
     */
    public String direction() {
        return this.direction;
    }

    /**
     * Sets The direction of the lineage, which could be INPUT, OUTPUT or BOTH. Possible values include: 'BOTH', 'INPUT', 'OUTPUT'.
     *
     * @param direction the direction value.
     * @return the service client itself
     */
    public DataCatalogClientImpl withDirection(String direction) {
        this.direction = direction;
        return this;
    }

    /** Limits whether includes extended information. */
    private boolean extendedInfo;

    /**
     * Gets Limits whether includes extended information.
     *
     * @return the extendedInfo value.
     */
    public boolean extendedInfo() {
        return this.extendedInfo;
    }

    /**
     * Sets Limits whether includes extended information.
     *
     * @param extendedInfo the extendedInfo value.
     * @return the service client itself
     */
    public DataCatalogClientImpl withExtendedInfo(boolean extendedInfo) {
        this.extendedInfo = extendedInfo;
        return this;
    }

    /** The preferred language for the response. */
    private String acceptLanguage;

    /**
     * Gets The preferred language for the response.
     *
     * @return the acceptLanguage value.
     */
    public String acceptLanguage() {
        return this.acceptLanguage;
    }

    /**
     * Sets The preferred language for the response.
     *
     * @param acceptLanguage the acceptLanguage value.
     * @return the service client itself
     */
    public DataCatalogClientImpl withAcceptLanguage(String acceptLanguage) {
        this.acceptLanguage = acceptLanguage;
        return this;
    }

    /** The retry timeout in seconds for Long Running Operations. Default value is 30. */
    private int longRunningOperationRetryTimeout;

    /**
     * Gets The retry timeout in seconds for Long Running Operations. Default value is 30.
     *
     * @return the longRunningOperationRetryTimeout value.
     */
    public int longRunningOperationRetryTimeout() {
        return this.longRunningOperationRetryTimeout;
    }

    /**
     * Sets The retry timeout in seconds for Long Running Operations. Default value is 30.
     *
     * @param longRunningOperationRetryTimeout the longRunningOperationRetryTimeout value.
     * @return the service client itself
     */
    public DataCatalogClientImpl withLongRunningOperationRetryTimeout(int longRunningOperationRetryTimeout) {
        this.longRunningOperationRetryTimeout = longRunningOperationRetryTimeout;
        return this;
    }

    /** Whether a unique x-ms-client-request-id should be generated. When set to true a unique x-ms-client-request-id value is generated and included in each request. Default is true. */
    private boolean generateClientRequestId;

    /**
     * Gets Whether a unique x-ms-client-request-id should be generated. When set to true a unique x-ms-client-request-id value is generated and included in each request. Default is true.
     *
     * @return the generateClientRequestId value.
     */
    public boolean generateClientRequestId() {
        return this.generateClientRequestId;
    }

    /**
     * Sets Whether a unique x-ms-client-request-id should be generated. When set to true a unique x-ms-client-request-id value is generated and included in each request. Default is true.
     *
     * @param generateClientRequestId the generateClientRequestId value.
     * @return the service client itself
     */
    public DataCatalogClientImpl withGenerateClientRequestId(boolean generateClientRequestId) {
        this.generateClientRequestId = generateClientRequestId;
        return this;
    }

    /**
     * The EntityRESTsInner object to access its operations.
     */
    private EntityRESTsInner entityRESTs;

    /**
     * Gets the EntityRESTsInner object to access its operations.
     * @return the EntityRESTsInner object.
     */
    public EntityRESTsInner entityRESTs() {
        return this.entityRESTs;
    }

    /**
     * The GlossaryRESTsInner object to access its operations.
     */
    private GlossaryRESTsInner glossaryRESTs;

    /**
     * Gets the GlossaryRESTsInner object to access its operations.
     * @return the GlossaryRESTsInner object.
     */
    public GlossaryRESTsInner glossaryRESTs() {
        return this.glossaryRESTs;
    }

    /**
     * The DiscoveryRESTsInner object to access its operations.
     */
    private DiscoveryRESTsInner discoveryRESTs;

    /**
     * Gets the DiscoveryRESTsInner object to access its operations.
     * @return the DiscoveryRESTsInner object.
     */
    public DiscoveryRESTsInner discoveryRESTs() {
        return this.discoveryRESTs;
    }

    /**
     * The LineageRESTsInner object to access its operations.
     */
    private LineageRESTsInner lineageRESTs;

    /**
     * Gets the LineageRESTsInner object to access its operations.
     * @return the LineageRESTsInner object.
     */
    public LineageRESTsInner lineageRESTs() {
        return this.lineageRESTs;
    }

    /**
     * The RelationshipRESTsInner object to access its operations.
     */
    private RelationshipRESTsInner relationshipRESTs;

    /**
     * Gets the RelationshipRESTsInner object to access its operations.
     * @return the RelationshipRESTsInner object.
     */
    public RelationshipRESTsInner relationshipRESTs() {
        return this.relationshipRESTs;
    }

    /**
     * The TypesRESTsInner object to access its operations.
     */
    private TypesRESTsInner typesRESTs;

    /**
     * Gets the TypesRESTsInner object to access its operations.
     * @return the TypesRESTsInner object.
     */
    public TypesRESTsInner typesRESTs() {
        return this.typesRESTs;
    }

    /**
     * The AccessControlRESTsInner object to access its operations.
     */
    private AccessControlRESTsInner accessControlRESTs;

    /**
     * Gets the AccessControlRESTsInner object to access its operations.
     * @return the AccessControlRESTsInner object.
     */
    public AccessControlRESTsInner accessControlRESTs() {
        return this.accessControlRESTs;
    }

    /**
     * Initializes an instance of DataCatalogClient client.
     *
     * @param credentials the management credentials for Azure
     */
    public DataCatalogClientImpl(ServiceClientCredentials credentials) {
        this("https://localhost:21000", credentials);
    }

    /**
     * Initializes an instance of DataCatalogClient client.
     *
     * @param baseUrl the base URL of the host
     * @param credentials the management credentials for Azure
     */
    public DataCatalogClientImpl(String baseUrl, ServiceClientCredentials credentials) {
        super(baseUrl, credentials);
        initialize();
    }

    /**
     * Initializes an instance of DataCatalogClient client.
     *
     * @param restClient the REST client to connect to Azure.
     */
    public DataCatalogClientImpl(RestClient restClient) {
        super(restClient);
        initialize();
    }

    protected void initialize() {
        this.limit = "50";
        this.offset = "0";
        this.sort = "ASC";
        this.depth = 3;
        this.acceptLanguage = "en-US";
        this.longRunningOperationRetryTimeout = 30;
        this.generateClientRequestId = true;
        this.entityRESTs = new EntityRESTsInner(restClient().retrofit(), this);
        this.glossaryRESTs = new GlossaryRESTsInner(restClient().retrofit(), this);
        this.discoveryRESTs = new DiscoveryRESTsInner(restClient().retrofit(), this);
        this.lineageRESTs = new LineageRESTsInner(restClient().retrofit(), this);
        this.relationshipRESTs = new RelationshipRESTsInner(restClient().retrofit(), this);
        this.typesRESTs = new TypesRESTsInner(restClient().retrofit(), this);
        this.accessControlRESTs = new AccessControlRESTsInner(restClient().retrofit(), this);
        this.azureClient = new AzureClient(this);
    }

    /**
     * Gets the User-Agent header for the client.
     *
     * @return the user agent string.
     */
    @Override
    public String userAgent() {
        return String.format("%s (%s, %s)", super.userAgent(), "DataCatalogClient", "2019-03-25");
    }
}
