/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.msft.atlasscanservice;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * SearchRequest.
 * The search query of advanced search request.
 */
public class JsonSearchRequest {
    /**
     * The keywords applied to all searchable fields.
     */
    @JsonProperty(value = "keywords")
    private String keywords;

    /**
     * The offset. The default value is 0.
     */
    @JsonProperty(value = "offset")
    private Integer offset;

    /**
     * The limit of the number of the search result. default value is 50;
     * maximum value is 1000.
     */
    @JsonProperty(value = "limit")
    private Integer limit;

    /**
     * The filter for the search.
     */
    @JsonProperty(value = "filter")
    private Object filter;

    /**
     * Get the keywords applied to all searchable fields.
     *
     * @return the keywords value
     */
    public String keywords() {
        return this.keywords;
    }

    /**
     * Set the keywords applied to all searchable fields.
     *
     * @param keywords the keywords value to set
     * @return the JsonSearchRequest object itself.
     */
    public JsonSearchRequest withKeywords(String keywords) {
        this.keywords = keywords;
        return this;
    }

    /**
     * Get the offset. The default value is 0.
     *
     * @return the offset value
     */
    public Integer offset() {
        return this.offset;
    }

    /**
     * Set the offset. The default value is 0.
     *
     * @param offset the offset value to set
     * @return the JsonSearchRequest object itself.
     */
    public JsonSearchRequest withOffset(Integer offset) {
        this.offset = offset;
        return this;
    }

    /**
     * Get the limit of the number of the search result. default value is 50; maximum value is 1000.
     *
     * @return the limit value
     */
    public Integer limit() {
        return this.limit;
    }

    /**
     * Set the limit of the number of the search result. default value is 50; maximum value is 1000.
     *
     * @param limit the limit value to set
     * @return the JsonSearchRequest object itself.
     */
    public JsonSearchRequest withLimit(Integer limit) {
        this.limit = limit;
        return this;
    }

    /**
     * Get the filter for the search.
     *
     * @return the filter value
     */
    public Object filter() {
        return this.filter;
    }

    /**
     * Set the filter for the search.
     *
     * @param filter the filter value to set
     * @return the JsonSearchRequest object itself.
     */
    public JsonSearchRequest withFilter(Object filter) {
        this.filter = filter;
        return this;
    }

}
