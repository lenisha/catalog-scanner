// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace DataCatalogGen2.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// FilterCriteria
    /// </summary>
    /// <remarks>
    /// The filter criteria with attributes and condition.
    /// </remarks>
    public partial class JsonFilterCriteria
    {
        /// <summary>
        /// Initializes a new instance of the JsonFilterCriteria class.
        /// </summary>
        public JsonFilterCriteria()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the JsonFilterCriteria class.
        /// </summary>
        /// <param name="attributeName">The name of the attribute.</param>
        /// <param name="attributeValue">The value of the attribute.</param>
        /// <param name="condition">Possible values include: 'AND',
        /// 'OR'</param>
        /// <param name="criterion">An array of filter criteria.</param>
        /// <param name="operatorProperty">Possible values include: 'LT', 'GT',
        /// 'LTE', 'GTE', 'EQ', 'NEQ', 'IN', 'LIKE', 'STARTS_WITH',
        /// 'ENDS_WITH', 'CONTAINS', 'CONTAINS_ANY', 'CONTAINS_ALL', 'IS_NULL',
        /// 'NOT_NULL'</param>
        public JsonFilterCriteria(string attributeName = default(string), string attributeValue = default(string), string condition = default(string), IList<JsonFilterCriteria> criterion = default(IList<JsonFilterCriteria>), string operatorProperty = default(string))
        {
            AttributeName = attributeName;
            AttributeValue = attributeValue;
            Condition = condition;
            Criterion = criterion;
            OperatorProperty = operatorProperty;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the name of the attribute.
        /// </summary>
        [JsonProperty(PropertyName = "attributeName")]
        public string AttributeName { get; set; }

        /// <summary>
        /// Gets or sets the value of the attribute.
        /// </summary>
        [JsonProperty(PropertyName = "attributeValue")]
        public string AttributeValue { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'AND', 'OR'
        /// </summary>
        [JsonProperty(PropertyName = "condition")]
        public string Condition { get; set; }

        /// <summary>
        /// Gets or sets an array of filter criteria.
        /// </summary>
        [JsonProperty(PropertyName = "criterion")]
        public IList<JsonFilterCriteria> Criterion { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'LT', 'GT', 'LTE', 'GTE',
        /// 'EQ', 'NEQ', 'IN', 'LIKE', 'STARTS_WITH', 'ENDS_WITH', 'CONTAINS',
        /// 'CONTAINS_ANY', 'CONTAINS_ALL', 'IS_NULL', 'NOT_NULL'
        /// </summary>
        [JsonProperty(PropertyName = "operator")]
        public string OperatorProperty { get; set; }

    }
}
