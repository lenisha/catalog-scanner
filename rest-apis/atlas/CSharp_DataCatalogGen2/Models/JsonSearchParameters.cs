// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace DataCatalogGen2.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// SearchParameters
    /// </summary>
    /// <remarks>
    /// The parameters used for search.
    /// </remarks>
    public partial class JsonSearchParameters
    {
        /// <summary>
        /// Initializes a new instance of the JsonSearchParameters class.
        /// </summary>
        public JsonSearchParameters()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the JsonSearchParameters class.
        /// </summary>
        /// <param name="attributes">Attribute values included in the
        /// results</param>
        /// <param name="classification">The classification to search.</param>
        /// <param name="excludeDeletedEntities">Determines if exclude deleted
        /// entities.</param>
        /// <param name="includeClassificationAttributes">Determines if include
        /// classification attributes.</param>
        /// <param name="includeSubClassifications">Determines if include sub
        /// classifications.</param>
        /// <param name="includeSubTypes">Determines if include sub
        /// types.</param>
        /// <param name="limit">The limit of the search result.</param>
        /// <param name="offset">The offset of the search.</param>
        /// <param name="query">The search query.</param>
        /// <param name="termName">The name of the term for search.</param>
        /// <param name="typeName">The name of the type for search.</param>
        public JsonSearchParameters(IList<string> attributes = default(IList<string>), string classification = default(string), JsonFilterCriteria entityFilters = default(JsonFilterCriteria), bool? excludeDeletedEntities = default(bool?), bool? includeClassificationAttributes = default(bool?), bool? includeSubClassifications = default(bool?), bool? includeSubTypes = default(bool?), int? limit = default(int?), int? offset = default(int?), string query = default(string), JsonFilterCriteria tagFilters = default(JsonFilterCriteria), string termName = default(string), string typeName = default(string))
        {
            Attributes = attributes;
            Classification = classification;
            EntityFilters = entityFilters;
            ExcludeDeletedEntities = excludeDeletedEntities;
            IncludeClassificationAttributes = includeClassificationAttributes;
            IncludeSubClassifications = includeSubClassifications;
            IncludeSubTypes = includeSubTypes;
            Limit = limit;
            Offset = offset;
            Query = query;
            TagFilters = tagFilters;
            TermName = termName;
            TypeName = typeName;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets attribute values included in the results
        /// </summary>
        [JsonProperty(PropertyName = "attributes")]
        public IList<string> Attributes { get; set; }

        /// <summary>
        /// Gets or sets the classification to search.
        /// </summary>
        [JsonProperty(PropertyName = "classification")]
        public string Classification { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "entityFilters")]
        public JsonFilterCriteria EntityFilters { get; set; }

        /// <summary>
        /// Gets or sets determines if exclude deleted entities.
        /// </summary>
        [JsonProperty(PropertyName = "excludeDeletedEntities")]
        public bool? ExcludeDeletedEntities { get; set; }

        /// <summary>
        /// Gets or sets determines if include classification attributes.
        /// </summary>
        [JsonProperty(PropertyName = "includeClassificationAttributes")]
        public bool? IncludeClassificationAttributes { get; set; }

        /// <summary>
        /// Gets or sets determines if include sub classifications.
        /// </summary>
        [JsonProperty(PropertyName = "includeSubClassifications")]
        public bool? IncludeSubClassifications { get; set; }

        /// <summary>
        /// Gets or sets determines if include sub types.
        /// </summary>
        [JsonProperty(PropertyName = "includeSubTypes")]
        public bool? IncludeSubTypes { get; set; }

        /// <summary>
        /// Gets or sets the limit of the search result.
        /// </summary>
        [JsonProperty(PropertyName = "limit")]
        public int? Limit { get; set; }

        /// <summary>
        /// Gets or sets the offset of the search.
        /// </summary>
        [JsonProperty(PropertyName = "offset")]
        public int? Offset { get; set; }

        /// <summary>
        /// Gets or sets the search query.
        /// </summary>
        [JsonProperty(PropertyName = "query")]
        public string Query { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "tagFilters")]
        public JsonFilterCriteria TagFilters { get; set; }

        /// <summary>
        /// Gets or sets the name of the term for search.
        /// </summary>
        [JsonProperty(PropertyName = "termName")]
        public string TermName { get; set; }

        /// <summary>
        /// Gets or sets the name of the type for search.
        /// </summary>
        [JsonProperty(PropertyName = "typeName")]
        public string TypeName { get; set; }

    }
}
