// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace ScannerBabylonService.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    [JsonTransformation]
    public partial class Trigger : ProxyResource
    {
        /// <summary>
        /// Initializes a new instance of the Trigger class.
        /// </summary>
        public Trigger()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Trigger class.
        /// </summary>
        /// <param name="scanLevel">Possible values include: 'Full',
        /// 'Incremental'</param>
        public Trigger(string id = default(string), string name = default(string), string recurrenceInterval = default(string), string timeoutInterval = default(string), System.DateTime? createdAt = default(System.DateTime?), System.DateTime? lastModifiedAt = default(System.DateTime?), System.DateTime? lastScheduled = default(System.DateTime?), string scanLevel = default(string), System.DateTime? incrementalScanStartTime = default(System.DateTime?))
            : base(id, name)
        {
            RecurrenceInterval = recurrenceInterval;
            TimeoutInterval = timeoutInterval;
            CreatedAt = createdAt;
            LastModifiedAt = lastModifiedAt;
            LastScheduled = lastScheduled;
            ScanLevel = scanLevel;
            IncrementalScanStartTime = incrementalScanStartTime;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "properties.recurrenceInterval")]
        public string RecurrenceInterval { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "properties.timeoutInterval")]
        public string TimeoutInterval { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "properties.createdAt")]
        public System.DateTime? CreatedAt { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "properties.lastModifiedAt")]
        public System.DateTime? LastModifiedAt { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "properties.lastScheduled")]
        public System.DateTime? LastScheduled { get; private set; }

        /// <summary>
        /// Gets or sets possible values include: 'Full', 'Incremental'
        /// </summary>
        [JsonProperty(PropertyName = "properties.scanLevel")]
        public string ScanLevel { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "properties.incrementalScanStartTime")]
        public System.DateTime? IncrementalScanStartTime { get; set; }

    }
}
