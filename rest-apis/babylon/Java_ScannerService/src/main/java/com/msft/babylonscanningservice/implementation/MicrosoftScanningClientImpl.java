/**
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

package com.msft.babylonscanningservice.implementation;

import com.msft.babylonscanningservice.MicrosoftScanningClient;
import com.msft.babylonscanningservice.ClassificationRules;
import com.msft.babylonscanningservice.DataSources;
import com.msft.babylonscanningservice.Filters;
import com.msft.babylonscanningservice.Scans;
import com.msft.babylonscanningservice.ScanRulesets;
import com.msft.babylonscanningservice.Triggers;
import com.microsoft.rest.ServiceClient;
import com.microsoft.rest.RestClient;
import okhttp3.OkHttpClient;
import retrofit2.Retrofit;

/**
 * Initializes a new instance of the MicrosoftScanningClient class.
 */
public class MicrosoftScanningClientImpl extends ServiceClient implements MicrosoftScanningClient {

    /** The Account Id. */
    private String accountName;

    /**
     * Gets The Account Id.
     *
     * @return the accountName value.
     */
    public String accountName() {
        return this.accountName;
    }

    /**
     * Sets The Account Id.
     *
     * @param accountName the accountName value.
     * @return the service client itself
     */
    public MicrosoftScanningClientImpl withAccountName(String accountName) {
        this.accountName = accountName;
        return this;
    }

    /** The Account Id. */
    private String accountId;

    /**
     * Gets The Account Id.
     *
     * @return the accountId value.
     */
    public String accountId() {
        return this.accountId;
    }

    /**
     * Sets The Account Id.
     *
     * @param accountId the accountId value.
     * @return the service client itself
     */
    public MicrosoftScanningClientImpl withAccountId(String accountId) {
        this.accountId = accountId;
        return this;
    }

    /** The api version to use. */
    private String apiVersion;

    /**
     * Gets The api version to use.
     *
     * @return the apiVersion value.
     */
    public String apiVersion() {
        return this.apiVersion;
    }

    /**
     * Sets The api version to use.
     *
     * @param apiVersion the apiVersion value.
     * @return the service client itself
     */
    public MicrosoftScanningClientImpl withApiVersion(String apiVersion) {
        this.apiVersion = apiVersion;
        return this;
    }

    /**
     * The ClassificationRules object to access its operations.
     */
    private ClassificationRules classificationRules;

    /**
     * Gets the ClassificationRules object to access its operations.
     * @return the ClassificationRules object.
     */
    public ClassificationRules classificationRules() {
        return this.classificationRules;
    }

    /**
     * The DataSources object to access its operations.
     */
    private DataSources dataSources;

    /**
     * Gets the DataSources object to access its operations.
     * @return the DataSources object.
     */
    public DataSources dataSources() {
        return this.dataSources;
    }

    /**
     * The Filters object to access its operations.
     */
    private Filters filters;

    /**
     * Gets the Filters object to access its operations.
     * @return the Filters object.
     */
    public Filters filters() {
        return this.filters;
    }

    /**
     * The Scans object to access its operations.
     */
    private Scans scans;

    /**
     * Gets the Scans object to access its operations.
     * @return the Scans object.
     */
    public Scans scans() {
        return this.scans;
    }

    /**
     * The ScanRulesets object to access its operations.
     */
    private ScanRulesets scanRulesets;

    /**
     * Gets the ScanRulesets object to access its operations.
     * @return the ScanRulesets object.
     */
    public ScanRulesets scanRulesets() {
        return this.scanRulesets;
    }

    /**
     * The Triggers object to access its operations.
     */
    private Triggers triggers;

    /**
     * Gets the Triggers object to access its operations.
     * @return the Triggers object.
     */
    public Triggers triggers() {
        return this.triggers;
    }

    /**
     * Initializes an instance of MicrosoftScanningClient client.
     */
    public MicrosoftScanningClientImpl() {
        this("https://");
    }

    /**
     * Initializes an instance of MicrosoftScanningClient client.
     *
     * @param baseUrl the base URL of the host
     */
    public MicrosoftScanningClientImpl(String baseUrl) {
        super(baseUrl);
        initialize();
    }

    /**
     * Initializes an instance of MicrosoftScanningClient client.
     *
     * @param clientBuilder the builder for building an OkHttp client, bundled with user configurations
     * @param restBuilder the builder for building an Retrofit client, bundled with user configurations
     */
    public MicrosoftScanningClientImpl(OkHttpClient.Builder clientBuilder, Retrofit.Builder restBuilder) {
        this("https://", clientBuilder, restBuilder);
        initialize();
    }

    /**
     * Initializes an instance of MicrosoftScanningClient client.
     *
     * @param baseUrl the base URL of the host
     * @param clientBuilder the builder for building an OkHttp client, bundled with user configurations
     * @param restBuilder the builder for building an Retrofit client, bundled with user configurations
     */
    public MicrosoftScanningClientImpl(String baseUrl, OkHttpClient.Builder clientBuilder, Retrofit.Builder restBuilder) {
        super(baseUrl, clientBuilder, restBuilder);
        initialize();
    }

    /**
     * Initializes an instance of MicrosoftScanningClient client.
     *
     * @param restClient the REST client containing pre-configured settings
     */
    public MicrosoftScanningClientImpl(RestClient restClient) {
        super(restClient);
        initialize();
    }

    private void initialize() {
        this.classificationRules = new ClassificationRulesImpl(retrofit(), this);
        this.dataSources = new DataSourcesImpl(retrofit(), this);
        this.filters = new FiltersImpl(retrofit(), this);
        this.scans = new ScansImpl(retrofit(), this);
        this.scanRulesets = new ScanRulesetsImpl(retrofit(), this);
        this.triggers = new TriggersImpl(retrofit(), this);
    }
}
